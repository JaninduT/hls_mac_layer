-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity enqueue_dequeue_fram is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    operation : IN STD_LOGIC_VECTOR (0 downto 0);
    ac : IN STD_LOGIC_VECTOR (1 downto 0);
    inout_frame_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    inout_frame_ce0 : OUT STD_LOGIC;
    inout_frame_we0 : OUT STD_LOGIC;
    inout_frame_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    inout_frame_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    available_spaces_bk_i : IN STD_LOGIC_VECTOR (2 downto 0);
    available_spaces_bk_o : OUT STD_LOGIC_VECTOR (2 downto 0);
    available_spaces_bk_o_ap_vld : OUT STD_LOGIC;
    write_pointer_bk_i : IN STD_LOGIC_VECTOR (1 downto 0);
    write_pointer_bk_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    write_pointer_bk_o_ap_vld : OUT STD_LOGIC;
    available_spaces_be_i : IN STD_LOGIC_VECTOR (2 downto 0);
    available_spaces_be_o : OUT STD_LOGIC_VECTOR (2 downto 0);
    available_spaces_be_o_ap_vld : OUT STD_LOGIC;
    write_pointer_be_i : IN STD_LOGIC_VECTOR (1 downto 0);
    write_pointer_be_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    write_pointer_be_o_ap_vld : OUT STD_LOGIC;
    available_spaces_vi_i : IN STD_LOGIC_VECTOR (2 downto 0);
    available_spaces_vi_o : OUT STD_LOGIC_VECTOR (2 downto 0);
    available_spaces_vi_o_ap_vld : OUT STD_LOGIC;
    write_pointer_vi_i : IN STD_LOGIC_VECTOR (1 downto 0);
    write_pointer_vi_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    write_pointer_vi_o_ap_vld : OUT STD_LOGIC;
    available_spaces_vo_i : IN STD_LOGIC_VECTOR (2 downto 0);
    available_spaces_vo_o : OUT STD_LOGIC_VECTOR (2 downto 0);
    available_spaces_vo_o_ap_vld : OUT STD_LOGIC;
    write_pointer_vo_i : IN STD_LOGIC_VECTOR (1 downto 0);
    write_pointer_vo_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    write_pointer_vo_o_ap_vld : OUT STD_LOGIC;
    edca_queues_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    edca_queues_ce0 : OUT STD_LOGIC;
    edca_queues_we0 : OUT STD_LOGIC;
    edca_queues_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    edca_queues_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    read_pointer_bk_i : IN STD_LOGIC_VECTOR (1 downto 0);
    read_pointer_bk_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    read_pointer_bk_o_ap_vld : OUT STD_LOGIC;
    read_pointer_be_i : IN STD_LOGIC_VECTOR (1 downto 0);
    read_pointer_be_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    read_pointer_be_o_ap_vld : OUT STD_LOGIC;
    read_pointer_vi_i : IN STD_LOGIC_VECTOR (1 downto 0);
    read_pointer_vi_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    read_pointer_vi_o_ap_vld : OUT STD_LOGIC;
    read_pointer_vo_i : IN STD_LOGIC_VECTOR (1 downto 0);
    read_pointer_vo_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    read_pointer_vo_o_ap_vld : OUT STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (3 downto 0) );
end;


architecture behav of enqueue_dequeue_fram is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (17 downto 0) := "000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (17 downto 0) := "000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (17 downto 0) := "000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (17 downto 0) := "000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (17 downto 0) := "000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (17 downto 0) := "000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (17 downto 0) := "000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (17 downto 0) := "000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (17 downto 0) := "000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (17 downto 0) := "001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (17 downto 0) := "010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv9_64 : STD_LOGIC_VECTOR (8 downto 0) := "001100100";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv7_64 : STD_LOGIC_VECTOR (6 downto 0) := "1100100";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv11_4B0 : STD_LOGIC_VECTOR (10 downto 0) := "10010110000";
    constant ap_const_lv11_320 : STD_LOGIC_VECTOR (10 downto 0) := "01100100000";
    constant ap_const_lv10_190 : STD_LOGIC_VECTOR (9 downto 0) := "0110010000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal available_spaces_bk_s_reg_1103 : STD_LOGIC_VECTOR (2 downto 0);
    signal write_pointer_bk_loa_reg_1109 : STD_LOGIC_VECTOR (1 downto 0);
    signal available_spaces_be_s_reg_1114 : STD_LOGIC_VECTOR (2 downto 0);
    signal write_pointer_be_loa_reg_1120 : STD_LOGIC_VECTOR (1 downto 0);
    signal available_spaces_vi_s_reg_1125 : STD_LOGIC_VECTOR (2 downto 0);
    signal write_pointer_vi_loa_reg_1131 : STD_LOGIC_VECTOR (1 downto 0);
    signal available_spaces_vo_s_reg_1136 : STD_LOGIC_VECTOR (2 downto 0);
    signal write_pointer_vo_loa_reg_1142 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln97_fu_486_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln97_reg_1162 : STD_LOGIC_VECTOR (8 downto 0);
    signal operation_read_read_fu_114_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_420_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_432_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln93_fu_476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln84_fu_502_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln84_reg_1170 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln80_fu_492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln71_fu_518_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln71_reg_1178 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln67_fu_508_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln58_fu_534_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln58_reg_1186 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln54_fu_524_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal read_pointer_bk_load_reg_1191 : STD_LOGIC_VECTOR (1 downto 0);
    signal read_pointer_be_load_reg_1196 : STD_LOGIC_VECTOR (1 downto 0);
    signal read_pointer_vi_load_reg_1201 : STD_LOGIC_VECTOR (1 downto 0);
    signal read_pointer_vo_load_reg_1206 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln153_fu_566_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln153_reg_1226 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln149_fu_556_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln140_fu_582_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln140_reg_1234 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln136_fu_572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln127_fu_598_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln127_reg_1242 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln123_fu_588_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln114_fu_614_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln114_reg_1250 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln110_fu_604_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal vo_1_fu_630_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal vo_1_reg_1258 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln96_fu_624_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln97_fu_641_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln97_reg_1268 : STD_LOGIC_VECTOR (8 downto 0);
    signal vi_1_fu_692_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal vi_1_reg_1276 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln83_fu_686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln84_fu_703_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln84_reg_1286 : STD_LOGIC_VECTOR (8 downto 0);
    signal be_1_fu_754_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal be_1_reg_1294 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln70_fu_748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln71_fu_765_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln71_reg_1304 : STD_LOGIC_VECTOR (8 downto 0);
    signal bk_1_fu_816_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal bk_1_reg_1312 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal icmp_ln57_fu_810_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln58_fu_827_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln58_reg_1322 : STD_LOGIC_VECTOR (8 downto 0);
    signal vo_fu_868_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal vo_reg_1330 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal icmp_ln152_fu_862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal vi_fu_931_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal vi_reg_1343 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal icmp_ln139_fu_925_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal be_fu_994_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal be_reg_1356 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal icmp_ln126_fu_988_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bk_fu_1057_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal bk_reg_1369 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal icmp_ln113_fu_1051_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal vo_0_reg_260 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal vi_0_reg_271 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal be_0_reg_282 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal bk_0_reg_293 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal vo4_0_reg_304 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal vi3_0_reg_316 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal be2_0_reg_328 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal bk1_0_reg_340 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal p_0_reg_352 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln97_1_fu_636_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln97_3_fu_677_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln84_1_fu_698_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln84_3_fu_739_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln71_1_fu_760_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln71_3_fu_801_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln58_1_fu_822_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln58_2_fu_854_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln153_3_fu_889_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln153_2_fu_916_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln140_3_fu_952_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln140_2_fu_979_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln127_3_fu_1015_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln127_2_fu_1042_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln114_1_fu_1068_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln114_2_fu_1095_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln102_fu_646_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln103_fu_657_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln89_fu_708_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln90_fu_719_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln76_fu_770_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln77_fu_781_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln63_fu_832_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln64_fu_843_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln158_fu_894_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln159_fu_905_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln145_fu_957_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln146_fu_968_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln132_fu_1020_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln133_fu_1031_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln119_fu_1073_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln120_fu_1084_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul_ln97_fu_486_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln84_fu_502_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln71_fu_518_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln58_fu_534_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln153_fu_566_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln140_fu_582_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln127_fu_598_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln114_fu_614_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln96_fu_620_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln97_2_fu_668_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln97_1_fu_671_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln83_fu_682_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln84_2_fu_730_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln84_1_fu_733_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln70_fu_744_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln71_2_fu_792_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln71_1_fu_795_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln57_fu_806_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln152_fu_858_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln153_fu_874_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln153_1_fu_879_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln153_1_fu_883_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln139_fu_921_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln140_fu_937_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln140_1_fu_942_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln140_1_fu_946_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln126_fu_984_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln127_fu_1000_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln127_1_fu_1005_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln127_1_fu_1009_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln113_fu_1047_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln114_fu_1063_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln114_fu_614_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln127_fu_598_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln140_fu_582_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln153_fu_566_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln58_fu_534_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln71_fu_518_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln84_fu_502_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln97_fu_486_p00 : STD_LOGIC_VECTOR (8 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv4_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                    ap_return_preg <= p_0_reg_352;
                end if; 
            end if;
        end if;
    end process;


    be2_0_reg_328_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_426_p2 = ap_const_lv1_1) and (icmp_ln123_fu_588_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_1))) then 
                be2_0_reg_328 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                be2_0_reg_328 <= be_reg_1356;
            end if; 
        end if;
    end process;

    be_0_reg_282_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_426_p2 = ap_const_lv1_1) and (icmp_ln67_fu_508_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_0))) then 
                be_0_reg_282 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                be_0_reg_282 <= be_1_reg_1294;
            end if; 
        end if;
    end process;

    bk1_0_reg_340_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_420_p2 = ap_const_lv1_1) and (icmp_ln110_fu_604_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_1))) then 
                bk1_0_reg_340 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                bk1_0_reg_340 <= bk_reg_1369;
            end if; 
        end if;
    end process;

    bk_0_reg_293_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_420_p2 = ap_const_lv1_1) and (icmp_ln54_fu_524_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_0))) then 
                bk_0_reg_293 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                bk_0_reg_293 <= bk_1_reg_1312;
            end if; 
        end if;
    end process;

    p_0_reg_352_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln149_fu_556_p2 = ap_const_lv1_1) and (grp_fu_438_p2 = ap_const_lv1_1) and (grp_fu_432_p2 = ap_const_lv1_0) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_1))) then 
                p_0_reg_352 <= ap_const_lv4_D;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln136_fu_572_p2 = ap_const_lv1_1) and (grp_fu_432_p2 = ap_const_lv1_1) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_1))) then 
                p_0_reg_352 <= ap_const_lv4_C;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln123_fu_588_p2 = ap_const_lv1_1) and (grp_fu_426_p2 = ap_const_lv1_1) and (grp_fu_420_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_1))) then 
                p_0_reg_352 <= ap_const_lv4_B;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln110_fu_604_p2 = ap_const_lv1_1) and (grp_fu_420_p2 = ap_const_lv1_1) and (operation_read_read_fu_114_p2 = ap_const_lv1_1))) then 
                p_0_reg_352 <= ap_const_lv4_A;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln93_fu_476_p2 = ap_const_lv1_1) and (grp_fu_438_p2 = ap_const_lv1_1) and (grp_fu_432_p2 = ap_const_lv1_0) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_0))) then 
                p_0_reg_352 <= ap_const_lv4_3;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln80_fu_492_p2 = ap_const_lv1_1) and (grp_fu_432_p2 = ap_const_lv1_1) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_0))) then 
                p_0_reg_352 <= ap_const_lv4_2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln67_fu_508_p2 = ap_const_lv1_1) and (grp_fu_426_p2 = ap_const_lv1_1) and (grp_fu_420_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_0))) then 
                p_0_reg_352 <= ap_const_lv4_1;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln113_fu_1051_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln126_fu_988_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln139_fu_925_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln152_fu_862_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln57_fu_810_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln70_fu_748_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln83_fu_686_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln96_fu_624_p2 = ap_const_lv1_1)))) then 
                p_0_reg_352 <= ap_const_lv4_E;
            elsif ((((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_438_p2 = ap_const_lv1_0) and (grp_fu_432_p2 = ap_const_lv1_0) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln54_fu_524_p2 = ap_const_lv1_1) and (grp_fu_420_p2 = ap_const_lv1_1) and (operation_read_read_fu_114_p2 = ap_const_lv1_0)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_438_p2 = ap_const_lv1_0) and (grp_fu_432_p2 = ap_const_lv1_0) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_0)))) then 
                p_0_reg_352 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    vi3_0_reg_316_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_432_p2 = ap_const_lv1_1) and (icmp_ln136_fu_572_p2 = ap_const_lv1_0) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_1))) then 
                vi3_0_reg_316 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                vi3_0_reg_316 <= vi_reg_1343;
            end if; 
        end if;
    end process;

    vi_0_reg_271_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_432_p2 = ap_const_lv1_1) and (icmp_ln80_fu_492_p2 = ap_const_lv1_0) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_0))) then 
                vi_0_reg_271 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                vi_0_reg_271 <= vi_1_reg_1276;
            end if; 
        end if;
    end process;

    vo4_0_reg_304_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_438_p2 = ap_const_lv1_1) and (icmp_ln149_fu_556_p2 = ap_const_lv1_0) and (grp_fu_432_p2 = ap_const_lv1_0) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_1))) then 
                vo4_0_reg_304 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                vo4_0_reg_304 <= vo_reg_1330;
            end if; 
        end if;
    end process;

    vo_0_reg_260_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_438_p2 = ap_const_lv1_1) and (icmp_ln93_fu_476_p2 = ap_const_lv1_0) and (grp_fu_432_p2 = ap_const_lv1_0) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_0))) then 
                vo_0_reg_260 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                vo_0_reg_260 <= vo_1_reg_1258;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln57_fu_810_p2 = ap_const_lv1_0))) then
                add_ln58_reg_1322 <= add_ln58_fu_827_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln70_fu_748_p2 = ap_const_lv1_0))) then
                add_ln71_reg_1304 <= add_ln71_fu_765_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln83_fu_686_p2 = ap_const_lv1_0))) then
                add_ln84_reg_1286 <= add_ln84_fu_703_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln96_fu_624_p2 = ap_const_lv1_0))) then
                add_ln97_reg_1268 <= add_ln97_fu_641_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                available_spaces_be_s_reg_1114 <= available_spaces_be_i;
                available_spaces_bk_s_reg_1103 <= available_spaces_bk_i;
                available_spaces_vi_s_reg_1125 <= available_spaces_vi_i;
                available_spaces_vo_s_reg_1136 <= available_spaces_vo_i;
                write_pointer_be_loa_reg_1120 <= write_pointer_be_i;
                write_pointer_bk_loa_reg_1109 <= write_pointer_bk_i;
                write_pointer_vi_loa_reg_1131 <= write_pointer_vi_i;
                write_pointer_vo_loa_reg_1142 <= write_pointer_vo_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                be_1_reg_1294 <= be_1_fu_754_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                be_reg_1356 <= be_fu_994_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                bk_1_reg_1312 <= bk_1_fu_816_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                bk_reg_1369 <= bk_fu_1057_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_420_p2 = ap_const_lv1_1) and (icmp_ln110_fu_604_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_1))) then
                    mul_ln114_reg_1250(8 downto 2) <= mul_ln114_fu_614_p2(8 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_426_p2 = ap_const_lv1_1) and (icmp_ln123_fu_588_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_1))) then
                    mul_ln127_reg_1242(8 downto 2) <= mul_ln127_fu_598_p2(8 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_432_p2 = ap_const_lv1_1) and (icmp_ln136_fu_572_p2 = ap_const_lv1_0) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_1))) then
                    mul_ln140_reg_1234(8 downto 2) <= mul_ln140_fu_582_p2(8 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_438_p2 = ap_const_lv1_1) and (icmp_ln149_fu_556_p2 = ap_const_lv1_0) and (grp_fu_432_p2 = ap_const_lv1_0) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_1))) then
                    mul_ln153_reg_1226(8 downto 2) <= mul_ln153_fu_566_p2(8 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_420_p2 = ap_const_lv1_1) and (icmp_ln54_fu_524_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_0))) then
                    mul_ln58_reg_1186(8 downto 2) <= mul_ln58_fu_534_p2(8 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_426_p2 = ap_const_lv1_1) and (icmp_ln67_fu_508_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_0))) then
                    mul_ln71_reg_1178(8 downto 2) <= mul_ln71_fu_518_p2(8 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_432_p2 = ap_const_lv1_1) and (icmp_ln80_fu_492_p2 = ap_const_lv1_0) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_0))) then
                    mul_ln84_reg_1170(8 downto 2) <= mul_ln84_fu_502_p2(8 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_438_p2 = ap_const_lv1_1) and (icmp_ln93_fu_476_p2 = ap_const_lv1_0) and (grp_fu_432_p2 = ap_const_lv1_0) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_0))) then
                    mul_ln97_reg_1162(8 downto 2) <= mul_ln97_fu_486_p2(8 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (operation_read_read_fu_114_p2 = ap_const_lv1_1))) then
                read_pointer_be_load_reg_1196 <= read_pointer_be_i;
                read_pointer_bk_load_reg_1191 <= read_pointer_bk_i;
                read_pointer_vi_load_reg_1201 <= read_pointer_vi_i;
                read_pointer_vo_load_reg_1206 <= read_pointer_vo_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                vi_1_reg_1276 <= vi_1_fu_692_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                vi_reg_1343 <= vi_fu_931_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                vo_1_reg_1258 <= vo_1_fu_630_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                vo_reg_1330 <= vo_fu_868_p2;
            end if;
        end if;
    end process;
    mul_ln97_reg_1162(1 downto 0) <= "00";
    mul_ln84_reg_1170(1 downto 0) <= "00";
    mul_ln71_reg_1178(1 downto 0) <= "00";
    mul_ln58_reg_1186(1 downto 0) <= "00";
    mul_ln153_reg_1226(1 downto 0) <= "00";
    mul_ln140_reg_1234(1 downto 0) <= "00";
    mul_ln127_reg_1242(1 downto 0) <= "00";
    mul_ln114_reg_1250(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, operation_read_read_fu_114_p2, grp_fu_420_p2, grp_fu_426_p2, grp_fu_432_p2, grp_fu_438_p2, icmp_ln93_fu_476_p2, icmp_ln80_fu_492_p2, icmp_ln67_fu_508_p2, icmp_ln54_fu_524_p2, icmp_ln149_fu_556_p2, icmp_ln136_fu_572_p2, icmp_ln123_fu_588_p2, icmp_ln110_fu_604_p2, ap_CS_fsm_state2, icmp_ln96_fu_624_p2, ap_CS_fsm_state4, icmp_ln83_fu_686_p2, ap_CS_fsm_state6, icmp_ln70_fu_748_p2, ap_CS_fsm_state8, icmp_ln57_fu_810_p2, ap_CS_fsm_state10, icmp_ln152_fu_862_p2, ap_CS_fsm_state12, icmp_ln139_fu_925_p2, ap_CS_fsm_state14, icmp_ln126_fu_988_p2, ap_CS_fsm_state16, icmp_ln113_fu_1051_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_420_p2 = ap_const_lv1_1) and (icmp_ln110_fu_604_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_426_p2 = ap_const_lv1_1) and (icmp_ln123_fu_588_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_432_p2 = ap_const_lv1_1) and (icmp_ln136_fu_572_p2 = ap_const_lv1_0) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_438_p2 = ap_const_lv1_1) and (icmp_ln149_fu_556_p2 = ap_const_lv1_0) and (grp_fu_432_p2 = ap_const_lv1_0) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_420_p2 = ap_const_lv1_1) and (icmp_ln54_fu_524_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_426_p2 = ap_const_lv1_1) and (icmp_ln67_fu_508_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_432_p2 = ap_const_lv1_1) and (icmp_ln80_fu_492_p2 = ap_const_lv1_0) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_438_p2 = ap_const_lv1_1) and (icmp_ln93_fu_476_p2 = ap_const_lv1_0) and (grp_fu_432_p2 = ap_const_lv1_0) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (((((((((((icmp_ln110_fu_604_p2 = ap_const_lv1_1) and (grp_fu_420_p2 = ap_const_lv1_1) and (operation_read_read_fu_114_p2 = ap_const_lv1_1)) or ((icmp_ln123_fu_588_p2 = ap_const_lv1_1) and (grp_fu_426_p2 = ap_const_lv1_1) and (grp_fu_420_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_1))) or ((icmp_ln136_fu_572_p2 = ap_const_lv1_1) and (grp_fu_432_p2 = ap_const_lv1_1) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_1))) or ((icmp_ln149_fu_556_p2 = ap_const_lv1_1) and (grp_fu_432_p2 = ap_const_lv1_0) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_1))) or ((grp_fu_438_p2 = ap_const_lv1_0) and (grp_fu_432_p2 = ap_const_lv1_0) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_1))) or ((icmp_ln54_fu_524_p2 = ap_const_lv1_1) and (grp_fu_420_p2 = ap_const_lv1_1) and (operation_read_read_fu_114_p2 = ap_const_lv1_0))) or ((icmp_ln67_fu_508_p2 = ap_const_lv1_1) and (grp_fu_426_p2 = ap_const_lv1_1) and (grp_fu_420_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_0))) or ((icmp_ln80_fu_492_p2 = ap_const_lv1_1) and (grp_fu_432_p2 = ap_const_lv1_1) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_0))) or ((icmp_ln93_fu_476_p2 = ap_const_lv1_1) and (grp_fu_432_p2 = ap_const_lv1_0) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_0))) or ((grp_fu_438_p2 = ap_const_lv1_0) and (grp_fu_432_p2 = ap_const_lv1_0) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (operation_read_read_fu_114_p2 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln96_fu_624_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln83_fu_686_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln70_fu_748_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln57_fu_810_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln152_fu_862_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln139_fu_925_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state14 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln126_fu_988_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state16 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln113_fu_1051_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln102_fu_646_p2 <= std_logic_vector(unsigned(write_pointer_vo_loa_reg_1142) + unsigned(ap_const_lv2_1));
    add_ln103_fu_657_p2 <= std_logic_vector(unsigned(available_spaces_vo_s_reg_1136) + unsigned(ap_const_lv3_7));
    add_ln114_fu_1063_p2 <= std_logic_vector(unsigned(zext_ln113_fu_1047_p1) + unsigned(mul_ln114_reg_1250));
    add_ln119_fu_1073_p2 <= std_logic_vector(unsigned(read_pointer_bk_load_reg_1191) + unsigned(ap_const_lv2_1));
    add_ln120_fu_1084_p2 <= std_logic_vector(unsigned(available_spaces_bk_s_reg_1103) + unsigned(ap_const_lv3_1));
    add_ln127_1_fu_1009_p2 <= std_logic_vector(unsigned(zext_ln127_1_fu_1005_p1) + unsigned(ap_const_lv10_190));
    add_ln127_fu_1000_p2 <= std_logic_vector(unsigned(mul_ln127_reg_1242) + unsigned(zext_ln126_fu_984_p1));
    add_ln132_fu_1020_p2 <= std_logic_vector(unsigned(read_pointer_be_load_reg_1196) + unsigned(ap_const_lv2_1));
    add_ln133_fu_1031_p2 <= std_logic_vector(unsigned(available_spaces_be_s_reg_1114) + unsigned(ap_const_lv3_1));
    add_ln140_1_fu_946_p2 <= std_logic_vector(unsigned(zext_ln140_1_fu_942_p1) + unsigned(ap_const_lv11_320));
    add_ln140_fu_937_p2 <= std_logic_vector(unsigned(mul_ln140_reg_1234) + unsigned(zext_ln139_fu_921_p1));
    add_ln145_fu_957_p2 <= std_logic_vector(unsigned(read_pointer_vi_load_reg_1201) + unsigned(ap_const_lv2_1));
    add_ln146_fu_968_p2 <= std_logic_vector(unsigned(available_spaces_vi_s_reg_1125) + unsigned(ap_const_lv3_1));
    add_ln153_1_fu_883_p2 <= std_logic_vector(unsigned(zext_ln153_1_fu_879_p1) + unsigned(ap_const_lv11_4B0));
    add_ln153_fu_874_p2 <= std_logic_vector(unsigned(mul_ln153_reg_1226) + unsigned(zext_ln152_fu_858_p1));
    add_ln158_fu_894_p2 <= std_logic_vector(unsigned(read_pointer_vo_load_reg_1206) + unsigned(ap_const_lv2_1));
    add_ln159_fu_905_p2 <= std_logic_vector(unsigned(available_spaces_vo_s_reg_1136) + unsigned(ap_const_lv3_1));
    add_ln58_fu_827_p2 <= std_logic_vector(unsigned(zext_ln57_fu_806_p1) + unsigned(mul_ln58_reg_1186));
    add_ln63_fu_832_p2 <= std_logic_vector(unsigned(write_pointer_bk_loa_reg_1109) + unsigned(ap_const_lv2_1));
    add_ln64_fu_843_p2 <= std_logic_vector(unsigned(available_spaces_bk_s_reg_1103) + unsigned(ap_const_lv3_7));
    add_ln71_1_fu_795_p2 <= std_logic_vector(unsigned(zext_ln71_2_fu_792_p1) + unsigned(ap_const_lv10_190));
    add_ln71_fu_765_p2 <= std_logic_vector(unsigned(mul_ln71_reg_1178) + unsigned(zext_ln70_fu_744_p1));
    add_ln76_fu_770_p2 <= std_logic_vector(unsigned(write_pointer_be_loa_reg_1120) + unsigned(ap_const_lv2_1));
    add_ln77_fu_781_p2 <= std_logic_vector(unsigned(available_spaces_be_s_reg_1114) + unsigned(ap_const_lv3_7));
    add_ln84_1_fu_733_p2 <= std_logic_vector(unsigned(zext_ln84_2_fu_730_p1) + unsigned(ap_const_lv11_320));
    add_ln84_fu_703_p2 <= std_logic_vector(unsigned(mul_ln84_reg_1170) + unsigned(zext_ln83_fu_682_p1));
    add_ln89_fu_708_p2 <= std_logic_vector(unsigned(write_pointer_vi_loa_reg_1131) + unsigned(ap_const_lv2_1));
    add_ln90_fu_719_p2 <= std_logic_vector(unsigned(available_spaces_vi_s_reg_1125) + unsigned(ap_const_lv3_7));
    add_ln97_1_fu_671_p2 <= std_logic_vector(unsigned(zext_ln97_2_fu_668_p1) + unsigned(ap_const_lv11_4B0));
    add_ln97_fu_641_p2 <= std_logic_vector(unsigned(mul_ln97_reg_1162) + unsigned(zext_ln96_fu_620_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(p_0_reg_352, ap_return_preg, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            ap_return <= p_0_reg_352;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;


    available_spaces_be_o_assign_proc : process(available_spaces_be_i, ap_CS_fsm_state6, icmp_ln70_fu_748_p2, ap_CS_fsm_state14, icmp_ln126_fu_988_p2, add_ln77_fu_781_p2, add_ln133_fu_1031_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln126_fu_988_p2 = ap_const_lv1_1))) then 
            available_spaces_be_o <= add_ln133_fu_1031_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln70_fu_748_p2 = ap_const_lv1_1))) then 
            available_spaces_be_o <= add_ln77_fu_781_p2;
        else 
            available_spaces_be_o <= available_spaces_be_i;
        end if; 
    end process;


    available_spaces_be_o_ap_vld_assign_proc : process(ap_CS_fsm_state6, icmp_ln70_fu_748_p2, ap_CS_fsm_state14, icmp_ln126_fu_988_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln126_fu_988_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln70_fu_748_p2 = ap_const_lv1_1)))) then 
            available_spaces_be_o_ap_vld <= ap_const_logic_1;
        else 
            available_spaces_be_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    available_spaces_bk_o_assign_proc : process(available_spaces_bk_i, ap_CS_fsm_state8, icmp_ln57_fu_810_p2, ap_CS_fsm_state16, icmp_ln113_fu_1051_p2, add_ln64_fu_843_p2, add_ln120_fu_1084_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln113_fu_1051_p2 = ap_const_lv1_1))) then 
            available_spaces_bk_o <= add_ln120_fu_1084_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln57_fu_810_p2 = ap_const_lv1_1))) then 
            available_spaces_bk_o <= add_ln64_fu_843_p2;
        else 
            available_spaces_bk_o <= available_spaces_bk_i;
        end if; 
    end process;


    available_spaces_bk_o_ap_vld_assign_proc : process(ap_CS_fsm_state8, icmp_ln57_fu_810_p2, ap_CS_fsm_state16, icmp_ln113_fu_1051_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln113_fu_1051_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln57_fu_810_p2 = ap_const_lv1_1)))) then 
            available_spaces_bk_o_ap_vld <= ap_const_logic_1;
        else 
            available_spaces_bk_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    available_spaces_vi_o_assign_proc : process(available_spaces_vi_i, ap_CS_fsm_state4, icmp_ln83_fu_686_p2, ap_CS_fsm_state12, icmp_ln139_fu_925_p2, add_ln90_fu_719_p2, add_ln146_fu_968_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln139_fu_925_p2 = ap_const_lv1_1))) then 
            available_spaces_vi_o <= add_ln146_fu_968_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln83_fu_686_p2 = ap_const_lv1_1))) then 
            available_spaces_vi_o <= add_ln90_fu_719_p2;
        else 
            available_spaces_vi_o <= available_spaces_vi_i;
        end if; 
    end process;


    available_spaces_vi_o_ap_vld_assign_proc : process(ap_CS_fsm_state4, icmp_ln83_fu_686_p2, ap_CS_fsm_state12, icmp_ln139_fu_925_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln139_fu_925_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln83_fu_686_p2 = ap_const_lv1_1)))) then 
            available_spaces_vi_o_ap_vld <= ap_const_logic_1;
        else 
            available_spaces_vi_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    available_spaces_vo_o_assign_proc : process(available_spaces_vo_i, ap_CS_fsm_state2, icmp_ln96_fu_624_p2, ap_CS_fsm_state10, icmp_ln152_fu_862_p2, add_ln103_fu_657_p2, add_ln159_fu_905_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln152_fu_862_p2 = ap_const_lv1_1))) then 
            available_spaces_vo_o <= add_ln159_fu_905_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln96_fu_624_p2 = ap_const_lv1_1))) then 
            available_spaces_vo_o <= add_ln103_fu_657_p2;
        else 
            available_spaces_vo_o <= available_spaces_vo_i;
        end if; 
    end process;


    available_spaces_vo_o_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln96_fu_624_p2, ap_CS_fsm_state10, icmp_ln152_fu_862_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln152_fu_862_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln96_fu_624_p2 = ap_const_lv1_1)))) then 
            available_spaces_vo_o_ap_vld <= ap_const_logic_1;
        else 
            available_spaces_vo_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    be_1_fu_754_p2 <= std_logic_vector(unsigned(be_0_reg_282) + unsigned(ap_const_lv7_1));
    be_fu_994_p2 <= std_logic_vector(unsigned(be2_0_reg_328) + unsigned(ap_const_lv7_1));
    bk_1_fu_816_p2 <= std_logic_vector(unsigned(bk_0_reg_293) + unsigned(ap_const_lv7_1));
    bk_fu_1057_p2 <= std_logic_vector(unsigned(bk1_0_reg_340) + unsigned(ap_const_lv7_1));

    edca_queues_address0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9, zext_ln97_3_fu_677_p1, zext_ln84_3_fu_739_p1, zext_ln71_3_fu_801_p1, zext_ln58_2_fu_854_p1, zext_ln153_3_fu_889_p1, zext_ln140_3_fu_952_p1, zext_ln127_3_fu_1015_p1, zext_ln114_1_fu_1068_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            edca_queues_address0 <= zext_ln114_1_fu_1068_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            edca_queues_address0 <= zext_ln127_3_fu_1015_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            edca_queues_address0 <= zext_ln140_3_fu_952_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            edca_queues_address0 <= zext_ln153_3_fu_889_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            edca_queues_address0 <= zext_ln58_2_fu_854_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            edca_queues_address0 <= zext_ln71_3_fu_801_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            edca_queues_address0 <= zext_ln84_3_fu_739_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            edca_queues_address0 <= zext_ln97_3_fu_677_p1(11 - 1 downto 0);
        else 
            edca_queues_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    edca_queues_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            edca_queues_ce0 <= ap_const_logic_1;
        else 
            edca_queues_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    edca_queues_d0 <= inout_frame_q0;

    edca_queues_we0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            edca_queues_we0 <= ap_const_logic_1;
        else 
            edca_queues_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_420_p2 <= "1" when (ac = ap_const_lv2_0) else "0";
    grp_fu_426_p2 <= "1" when (ac = ap_const_lv2_1) else "0";
    grp_fu_432_p2 <= "1" when (ac = ap_const_lv2_2) else "0";
    grp_fu_438_p2 <= "1" when (ac = ap_const_lv2_3) else "0";
    icmp_ln110_fu_604_p2 <= "1" when (available_spaces_bk_i = ap_const_lv3_4) else "0";
    icmp_ln113_fu_1051_p2 <= "1" when (bk1_0_reg_340 = ap_const_lv7_64) else "0";
    icmp_ln123_fu_588_p2 <= "1" when (available_spaces_be_i = ap_const_lv3_4) else "0";
    icmp_ln126_fu_988_p2 <= "1" when (be2_0_reg_328 = ap_const_lv7_64) else "0";
    icmp_ln136_fu_572_p2 <= "1" when (available_spaces_vi_i = ap_const_lv3_4) else "0";
    icmp_ln139_fu_925_p2 <= "1" when (vi3_0_reg_316 = ap_const_lv7_64) else "0";
    icmp_ln149_fu_556_p2 <= "1" when (available_spaces_vo_i = ap_const_lv3_4) else "0";
    icmp_ln152_fu_862_p2 <= "1" when (vo4_0_reg_304 = ap_const_lv7_64) else "0";
    icmp_ln54_fu_524_p2 <= "1" when (available_spaces_bk_i = ap_const_lv3_0) else "0";
    icmp_ln57_fu_810_p2 <= "1" when (bk_0_reg_293 = ap_const_lv7_64) else "0";
    icmp_ln67_fu_508_p2 <= "1" when (available_spaces_be_i = ap_const_lv3_0) else "0";
    icmp_ln70_fu_748_p2 <= "1" when (be_0_reg_282 = ap_const_lv7_64) else "0";
    icmp_ln80_fu_492_p2 <= "1" when (available_spaces_vi_i = ap_const_lv3_0) else "0";
    icmp_ln83_fu_686_p2 <= "1" when (vi_0_reg_271 = ap_const_lv7_64) else "0";
    icmp_ln93_fu_476_p2 <= "1" when (available_spaces_vo_i = ap_const_lv3_0) else "0";
    icmp_ln96_fu_624_p2 <= "1" when (vo_0_reg_260 = ap_const_lv7_64) else "0";

    inout_frame_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17, zext_ln97_1_fu_636_p1, zext_ln84_1_fu_698_p1, zext_ln71_1_fu_760_p1, zext_ln58_1_fu_822_p1, zext_ln153_2_fu_916_p1, zext_ln140_2_fu_979_p1, zext_ln127_2_fu_1042_p1, zext_ln114_2_fu_1095_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            inout_frame_address0 <= zext_ln114_2_fu_1095_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            inout_frame_address0 <= zext_ln127_2_fu_1042_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            inout_frame_address0 <= zext_ln140_2_fu_979_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            inout_frame_address0 <= zext_ln153_2_fu_916_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            inout_frame_address0 <= zext_ln58_1_fu_822_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            inout_frame_address0 <= zext_ln71_1_fu_760_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            inout_frame_address0 <= zext_ln84_1_fu_698_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            inout_frame_address0 <= zext_ln97_1_fu_636_p1(7 - 1 downto 0);
        else 
            inout_frame_address0 <= "XXXXXXX";
        end if; 
    end process;


    inout_frame_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            inout_frame_ce0 <= ap_const_logic_1;
        else 
            inout_frame_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    inout_frame_d0 <= edca_queues_q0;

    inout_frame_we0_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            inout_frame_we0 <= ap_const_logic_1;
        else 
            inout_frame_we0 <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln114_fu_614_p0 <= mul_ln114_fu_614_p00(2 - 1 downto 0);
    mul_ln114_fu_614_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(read_pointer_bk_i),9));
    mul_ln114_fu_614_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln114_fu_614_p0) * unsigned(ap_const_lv9_64), 9));
    mul_ln127_fu_598_p0 <= mul_ln127_fu_598_p00(2 - 1 downto 0);
    mul_ln127_fu_598_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(read_pointer_be_i),9));
    mul_ln127_fu_598_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln127_fu_598_p0) * unsigned(ap_const_lv9_64), 9));
    mul_ln140_fu_582_p0 <= mul_ln140_fu_582_p00(2 - 1 downto 0);
    mul_ln140_fu_582_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(read_pointer_vi_i),9));
    mul_ln140_fu_582_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln140_fu_582_p0) * unsigned(ap_const_lv9_64), 9));
    mul_ln153_fu_566_p0 <= mul_ln153_fu_566_p00(2 - 1 downto 0);
    mul_ln153_fu_566_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(read_pointer_vo_i),9));
    mul_ln153_fu_566_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln153_fu_566_p0) * unsigned(ap_const_lv9_64), 9));
    mul_ln58_fu_534_p0 <= mul_ln58_fu_534_p00(2 - 1 downto 0);
    mul_ln58_fu_534_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(write_pointer_bk_i),9));
    mul_ln58_fu_534_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln58_fu_534_p0) * unsigned(ap_const_lv9_64), 9));
    mul_ln71_fu_518_p0 <= mul_ln71_fu_518_p00(2 - 1 downto 0);
    mul_ln71_fu_518_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(write_pointer_be_i),9));
    mul_ln71_fu_518_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln71_fu_518_p0) * unsigned(ap_const_lv9_64), 9));
    mul_ln84_fu_502_p0 <= mul_ln84_fu_502_p00(2 - 1 downto 0);
    mul_ln84_fu_502_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(write_pointer_vi_i),9));
    mul_ln84_fu_502_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln84_fu_502_p0) * unsigned(ap_const_lv9_64), 9));
    mul_ln97_fu_486_p0 <= mul_ln97_fu_486_p00(2 - 1 downto 0);
    mul_ln97_fu_486_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(write_pointer_vo_i),9));
    mul_ln97_fu_486_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln97_fu_486_p0) * unsigned(ap_const_lv9_64), 9));
    operation_read_read_fu_114_p2 <= operation;

    read_pointer_be_o_assign_proc : process(read_pointer_be_i, ap_CS_fsm_state14, icmp_ln126_fu_988_p2, add_ln132_fu_1020_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln126_fu_988_p2 = ap_const_lv1_1))) then 
            read_pointer_be_o <= add_ln132_fu_1020_p2;
        else 
            read_pointer_be_o <= read_pointer_be_i;
        end if; 
    end process;


    read_pointer_be_o_ap_vld_assign_proc : process(ap_CS_fsm_state14, icmp_ln126_fu_988_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln126_fu_988_p2 = ap_const_lv1_1))) then 
            read_pointer_be_o_ap_vld <= ap_const_logic_1;
        else 
            read_pointer_be_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    read_pointer_bk_o_assign_proc : process(read_pointer_bk_i, ap_CS_fsm_state16, icmp_ln113_fu_1051_p2, add_ln119_fu_1073_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln113_fu_1051_p2 = ap_const_lv1_1))) then 
            read_pointer_bk_o <= add_ln119_fu_1073_p2;
        else 
            read_pointer_bk_o <= read_pointer_bk_i;
        end if; 
    end process;


    read_pointer_bk_o_ap_vld_assign_proc : process(ap_CS_fsm_state16, icmp_ln113_fu_1051_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln113_fu_1051_p2 = ap_const_lv1_1))) then 
            read_pointer_bk_o_ap_vld <= ap_const_logic_1;
        else 
            read_pointer_bk_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    read_pointer_vi_o_assign_proc : process(read_pointer_vi_i, ap_CS_fsm_state12, icmp_ln139_fu_925_p2, add_ln145_fu_957_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln139_fu_925_p2 = ap_const_lv1_1))) then 
            read_pointer_vi_o <= add_ln145_fu_957_p2;
        else 
            read_pointer_vi_o <= read_pointer_vi_i;
        end if; 
    end process;


    read_pointer_vi_o_ap_vld_assign_proc : process(ap_CS_fsm_state12, icmp_ln139_fu_925_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln139_fu_925_p2 = ap_const_lv1_1))) then 
            read_pointer_vi_o_ap_vld <= ap_const_logic_1;
        else 
            read_pointer_vi_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    read_pointer_vo_o_assign_proc : process(read_pointer_vo_i, ap_CS_fsm_state10, icmp_ln152_fu_862_p2, add_ln158_fu_894_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln152_fu_862_p2 = ap_const_lv1_1))) then 
            read_pointer_vo_o <= add_ln158_fu_894_p2;
        else 
            read_pointer_vo_o <= read_pointer_vo_i;
        end if; 
    end process;


    read_pointer_vo_o_ap_vld_assign_proc : process(ap_CS_fsm_state10, icmp_ln152_fu_862_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln152_fu_862_p2 = ap_const_lv1_1))) then 
            read_pointer_vo_o_ap_vld <= ap_const_logic_1;
        else 
            read_pointer_vo_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    vi_1_fu_692_p2 <= std_logic_vector(unsigned(vi_0_reg_271) + unsigned(ap_const_lv7_1));
    vi_fu_931_p2 <= std_logic_vector(unsigned(vi3_0_reg_316) + unsigned(ap_const_lv7_1));
    vo_1_fu_630_p2 <= std_logic_vector(unsigned(vo_0_reg_260) + unsigned(ap_const_lv7_1));
    vo_fu_868_p2 <= std_logic_vector(unsigned(vo4_0_reg_304) + unsigned(ap_const_lv7_1));

    write_pointer_be_o_assign_proc : process(write_pointer_be_i, ap_CS_fsm_state6, icmp_ln70_fu_748_p2, add_ln76_fu_770_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln70_fu_748_p2 = ap_const_lv1_1))) then 
            write_pointer_be_o <= add_ln76_fu_770_p2;
        else 
            write_pointer_be_o <= write_pointer_be_i;
        end if; 
    end process;


    write_pointer_be_o_ap_vld_assign_proc : process(ap_CS_fsm_state6, icmp_ln70_fu_748_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln70_fu_748_p2 = ap_const_lv1_1))) then 
            write_pointer_be_o_ap_vld <= ap_const_logic_1;
        else 
            write_pointer_be_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    write_pointer_bk_o_assign_proc : process(write_pointer_bk_i, ap_CS_fsm_state8, icmp_ln57_fu_810_p2, add_ln63_fu_832_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln57_fu_810_p2 = ap_const_lv1_1))) then 
            write_pointer_bk_o <= add_ln63_fu_832_p2;
        else 
            write_pointer_bk_o <= write_pointer_bk_i;
        end if; 
    end process;


    write_pointer_bk_o_ap_vld_assign_proc : process(ap_CS_fsm_state8, icmp_ln57_fu_810_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln57_fu_810_p2 = ap_const_lv1_1))) then 
            write_pointer_bk_o_ap_vld <= ap_const_logic_1;
        else 
            write_pointer_bk_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    write_pointer_vi_o_assign_proc : process(write_pointer_vi_i, ap_CS_fsm_state4, icmp_ln83_fu_686_p2, add_ln89_fu_708_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln83_fu_686_p2 = ap_const_lv1_1))) then 
            write_pointer_vi_o <= add_ln89_fu_708_p2;
        else 
            write_pointer_vi_o <= write_pointer_vi_i;
        end if; 
    end process;


    write_pointer_vi_o_ap_vld_assign_proc : process(ap_CS_fsm_state4, icmp_ln83_fu_686_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln83_fu_686_p2 = ap_const_lv1_1))) then 
            write_pointer_vi_o_ap_vld <= ap_const_logic_1;
        else 
            write_pointer_vi_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    write_pointer_vo_o_assign_proc : process(write_pointer_vo_i, ap_CS_fsm_state2, icmp_ln96_fu_624_p2, add_ln102_fu_646_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln96_fu_624_p2 = ap_const_lv1_1))) then 
            write_pointer_vo_o <= add_ln102_fu_646_p2;
        else 
            write_pointer_vo_o <= write_pointer_vo_i;
        end if; 
    end process;


    write_pointer_vo_o_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln96_fu_624_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln96_fu_624_p2 = ap_const_lv1_1))) then 
            write_pointer_vo_o_ap_vld <= ap_const_logic_1;
        else 
            write_pointer_vo_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln113_fu_1047_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bk1_0_reg_340),9));
    zext_ln114_1_fu_1068_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln114_fu_1063_p2),64));
    zext_ln114_2_fu_1095_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bk1_0_reg_340),64));
    zext_ln126_fu_984_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(be2_0_reg_328),9));
    zext_ln127_1_fu_1005_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln127_fu_1000_p2),10));
    zext_ln127_2_fu_1042_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(be2_0_reg_328),64));
    zext_ln127_3_fu_1015_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln127_1_fu_1009_p2),64));
    zext_ln139_fu_921_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vi3_0_reg_316),9));
    zext_ln140_1_fu_942_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln140_fu_937_p2),11));
    zext_ln140_2_fu_979_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vi3_0_reg_316),64));
    zext_ln140_3_fu_952_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln140_1_fu_946_p2),64));
    zext_ln152_fu_858_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vo4_0_reg_304),9));
    zext_ln153_1_fu_879_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln153_fu_874_p2),11));
    zext_ln153_2_fu_916_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vo4_0_reg_304),64));
    zext_ln153_3_fu_889_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln153_1_fu_883_p2),64));
    zext_ln57_fu_806_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bk_0_reg_293),9));
    zext_ln58_1_fu_822_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bk_0_reg_293),64));
    zext_ln58_2_fu_854_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln58_reg_1322),64));
    zext_ln70_fu_744_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(be_0_reg_282),9));
    zext_ln71_1_fu_760_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(be_0_reg_282),64));
    zext_ln71_2_fu_792_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln71_reg_1304),10));
    zext_ln71_3_fu_801_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln71_1_fu_795_p2),64));
    zext_ln83_fu_682_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vi_0_reg_271),9));
    zext_ln84_1_fu_698_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vi_0_reg_271),64));
    zext_ln84_2_fu_730_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln84_reg_1286),11));
    zext_ln84_3_fu_739_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln84_1_fu_733_p2),64));
    zext_ln96_fu_620_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vo_0_reg_260),9));
    zext_ln97_1_fu_636_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vo_0_reg_260),64));
    zext_ln97_2_fu_668_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln97_reg_1268),11));
    zext_ln97_3_fu_677_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln97_1_fu_671_p2),64));
end behav;
