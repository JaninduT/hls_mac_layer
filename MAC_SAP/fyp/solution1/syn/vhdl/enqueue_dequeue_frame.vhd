-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity enqueue_dequeue_frame is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    operation : IN STD_LOGIC_VECTOR (1 downto 0);
    ac : IN STD_LOGIC_VECTOR (1 downto 0);
    inout_frame_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    inout_frame_ce0 : OUT STD_LOGIC;
    inout_frame_we0 : OUT STD_LOGIC;
    inout_frame_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    inout_frame_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of enqueue_dequeue_frame is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "enqueue_dequeue_frame,hls_ip_2019_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7a35t-cpg236-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.502500,HLS_SYN_LAT=90,HLS_SYN_TPT=none,HLS_SYN_MEM=1,HLS_SYN_DSP=0,HLS_SYN_FF=279,HLS_SYN_LUT=1401,HLS_VERSION=2019_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (17 downto 0) := "000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (17 downto 0) := "000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (17 downto 0) := "000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (17 downto 0) := "000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (17 downto 0) := "000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (17 downto 0) := "000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (17 downto 0) := "000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (17 downto 0) := "000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (17 downto 0) := "000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (17 downto 0) := "001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (17 downto 0) := "010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv9_64 : STD_LOGIC_VECTOR (8 downto 0) := "001100100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_64 : STD_LOGIC_VECTOR (6 downto 0) := "1100100";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv11_4B0 : STD_LOGIC_VECTOR (10 downto 0) := "10010110000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv11_320 : STD_LOGIC_VECTOR (10 downto 0) := "01100100000";
    constant ap_const_lv10_190 : STD_LOGIC_VECTOR (9 downto 0) := "0110010000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal available_spaces_bk : STD_LOGIC_VECTOR (2 downto 0) := "100";
    signal write_pointer_bk : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal available_spaces_be : STD_LOGIC_VECTOR (2 downto 0) := "100";
    signal write_pointer_be : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal available_spaces_vi : STD_LOGIC_VECTOR (2 downto 0) := "100";
    signal write_pointer_vi : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal available_spaces_vo : STD_LOGIC_VECTOR (2 downto 0) := "100";
    signal write_pointer_vo : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal edca_queues_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal edca_queues_ce0 : STD_LOGIC;
    signal edca_queues_we0 : STD_LOGIC;
    signal edca_queues_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal read_pointer_bk : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal read_pointer_be : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal read_pointer_vi : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal read_pointer_vo : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal available_spaces_bk_s_reg_1188 : STD_LOGIC_VECTOR (2 downto 0);
    signal write_pointer_bk_loa_reg_1194 : STD_LOGIC_VECTOR (1 downto 0);
    signal available_spaces_be_s_reg_1199 : STD_LOGIC_VECTOR (2 downto 0);
    signal write_pointer_be_loa_reg_1205 : STD_LOGIC_VECTOR (1 downto 0);
    signal available_spaces_vi_s_reg_1210 : STD_LOGIC_VECTOR (2 downto 0);
    signal write_pointer_vi_loa_reg_1216 : STD_LOGIC_VECTOR (1 downto 0);
    signal available_spaces_vo_s_reg_1221 : STD_LOGIC_VECTOR (2 downto 0);
    signal write_pointer_vo_loa_reg_1227 : STD_LOGIC_VECTOR (1 downto 0);
    signal read_pointer_bk_load_reg_1235 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln25_fu_427_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal read_pointer_be_load_reg_1240 : STD_LOGIC_VECTOR (1 downto 0);
    signal read_pointer_vi_load_reg_1245 : STD_LOGIC_VECTOR (1 downto 0);
    signal read_pointer_vo_load_reg_1250 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln105_fu_581_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln105_reg_1270 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln69_fu_465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln101_fu_571_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln95_fu_597_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln95_reg_1278 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln91_fu_587_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln85_fu_613_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln85_reg_1286 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln81_fu_603_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln75_fu_629_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln75_reg_1294 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln71_fu_619_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln61_fu_651_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln61_reg_1311 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln57_fu_641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln51_fu_667_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln51_reg_1319 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln47_fu_657_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln41_fu_683_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln41_reg_1327 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln37_fu_673_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln31_fu_699_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln31_reg_1335 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln27_fu_689_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal vo_1_fu_715_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal vo_1_reg_1343 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln104_fu_709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal vi_1_fu_778_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal vi_1_reg_1356 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln94_fu_772_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal be_1_fu_841_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal be_1_reg_1369 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln84_fu_835_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bk_1_fu_904_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal bk_1_reg_1382 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal icmp_ln74_fu_898_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal vo_fu_957_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal vo_reg_1395 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal icmp_ln60_fu_951_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln61_fu_968_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln61_reg_1405 : STD_LOGIC_VECTOR (8 downto 0);
    signal vi_fu_1019_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal vi_reg_1413 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal icmp_ln50_fu_1013_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln51_fu_1030_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln51_reg_1423 : STD_LOGIC_VECTOR (8 downto 0);
    signal be_fu_1081_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal be_reg_1431 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal icmp_ln40_fu_1075_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln41_fu_1092_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln41_reg_1441 : STD_LOGIC_VECTOR (8 downto 0);
    signal bk_fu_1143_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal bk_reg_1449 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal icmp_ln30_fu_1137_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln31_fu_1154_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln31_reg_1459 : STD_LOGIC_VECTOR (8 downto 0);
    signal vo4_0_reg_250 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal vi3_0_reg_262 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal be2_0_reg_274 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal bk1_0_reg_286 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal vo_0_reg_298 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal vi_0_reg_309 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal be_0_reg_320 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal bk_0_reg_331 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal p_0_reg_342 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln113_fu_487_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln105_3_fu_736_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln105_2_fu_763_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln95_3_fu_799_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln95_2_fu_826_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln85_3_fu_862_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln85_2_fu_889_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln75_1_fu_915_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln75_2_fu_942_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln61_1_fu_963_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln61_3_fu_1004_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln51_1_fu_1025_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln51_3_fu_1066_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln41_1_fu_1087_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln41_3_fu_1128_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln31_1_fu_1149_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln31_2_fu_1181_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln78_fu_931_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln34_fu_1170_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln33_fu_1159_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln88_fu_878_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln44_fu_1108_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln43_fu_1097_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln98_fu_815_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln54_fu_1046_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln53_fu_1035_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln108_fu_752_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln64_fu_984_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln63_fu_973_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln77_fu_920_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln87_fu_867_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln97_fu_804_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln107_fu_741_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_421_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln101_1_fu_565_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln105_fu_581_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln95_fu_597_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln85_fu_613_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln75_fu_629_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln57_1_fu_635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln61_fu_651_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln51_fu_667_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln41_fu_683_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln31_fu_699_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln104_fu_705_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln105_fu_721_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln105_1_fu_726_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln105_1_fu_730_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln94_fu_768_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln95_fu_784_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln95_1_fu_789_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln95_1_fu_793_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln84_fu_831_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln85_fu_847_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln85_1_fu_852_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln85_1_fu_856_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln74_fu_894_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln75_fu_910_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln60_fu_947_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln61_2_fu_995_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln61_1_fu_998_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln50_fu_1009_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln51_2_fu_1057_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln51_1_fu_1060_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln40_fu_1071_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln41_2_fu_1119_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln41_1_fu_1122_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln30_fu_1133_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln105_fu_581_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln31_fu_699_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln41_fu_683_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln51_fu_667_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln61_fu_651_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln75_fu_629_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln85_fu_613_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln95_fu_597_p00 : STD_LOGIC_VECTOR (8 downto 0);

    component enqueue_dequeue_fbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    edca_queues_U : component enqueue_dequeue_fbkb
    generic map (
        DataWidth => 8,
        AddressRange => 1600,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => edca_queues_address0,
        ce0 => edca_queues_ce0,
        we0 => edca_queues_we0,
        d0 => inout_frame_q0,
        q0 => edca_queues_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    available_spaces_be_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln40_fu_1075_p2 = ap_const_lv1_1))) then 
                available_spaces_be <= add_ln44_fu_1108_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln84_fu_835_p2 = ap_const_lv1_1))) then 
                available_spaces_be <= add_ln88_fu_878_p2;
            elsif (((icmp_ln69_fu_465_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln113_fu_487_p2 = ap_const_lv1_1))) then 
                available_spaces_be <= ap_const_lv3_4;
            end if; 
        end if;
    end process;

    available_spaces_bk_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln30_fu_1137_p2 = ap_const_lv1_1))) then 
                available_spaces_bk <= add_ln34_fu_1170_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln74_fu_898_p2 = ap_const_lv1_1))) then 
                available_spaces_bk <= add_ln78_fu_931_p2;
            elsif (((icmp_ln69_fu_465_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln113_fu_487_p2 = ap_const_lv1_1))) then 
                available_spaces_bk <= ap_const_lv3_4;
            end if; 
        end if;
    end process;

    available_spaces_vi_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln50_fu_1013_p2 = ap_const_lv1_1))) then 
                available_spaces_vi <= add_ln54_fu_1046_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln94_fu_772_p2 = ap_const_lv1_1))) then 
                available_spaces_vi <= add_ln98_fu_815_p2;
            elsif (((icmp_ln69_fu_465_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln113_fu_487_p2 = ap_const_lv1_1))) then 
                available_spaces_vi <= ap_const_lv3_4;
            end if; 
        end if;
    end process;

    available_spaces_vo_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln60_fu_951_p2 = ap_const_lv1_1))) then 
                available_spaces_vo <= add_ln64_fu_984_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln104_fu_709_p2 = ap_const_lv1_1))) then 
                available_spaces_vo <= add_ln108_fu_752_p2;
            elsif (((icmp_ln69_fu_465_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln113_fu_487_p2 = ap_const_lv1_1))) then 
                available_spaces_vo <= ap_const_lv3_4;
            end if; 
        end if;
    end process;

    be2_0_reg_274_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln81_fu_603_p2 = ap_const_lv1_0) and (grp_fu_403_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_409_p2 = ap_const_lv1_1) and (icmp_ln69_fu_465_p2 = ap_const_lv1_1))) then 
                be2_0_reg_274 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                be2_0_reg_274 <= be_1_reg_1369;
            end if; 
        end if;
    end process;

    be_0_reg_320_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln37_fu_673_p2 = ap_const_lv1_0) and (grp_fu_403_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_409_p2 = ap_const_lv1_1))) then 
                be_0_reg_320 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                be_0_reg_320 <= be_reg_1431;
            end if; 
        end if;
    end process;

    bk1_0_reg_286_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln71_fu_619_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_403_p2 = ap_const_lv1_1) and (icmp_ln69_fu_465_p2 = ap_const_lv1_1))) then 
                bk1_0_reg_286 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                bk1_0_reg_286 <= bk_1_reg_1382;
            end if; 
        end if;
    end process;

    bk_0_reg_331_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln27_fu_689_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_403_p2 = ap_const_lv1_1))) then 
                bk_0_reg_331 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                bk_0_reg_331 <= bk_reg_1449;
            end if; 
        end if;
    end process;

    p_0_reg_342_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln113_fu_487_p2 = ap_const_lv1_0) and (icmp_ln69_fu_465_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((icmp_ln25_fu_427_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln71_fu_619_p2 = ap_const_lv1_1) and (grp_fu_403_p2 = ap_const_lv1_1) and (icmp_ln69_fu_465_p2 = ap_const_lv1_1)) or ((grp_fu_403_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln81_fu_603_p2 = ap_const_lv1_1) and (grp_fu_409_p2 = ap_const_lv1_1) and (icmp_ln69_fu_465_p2 = ap_const_lv1_1)) or ((grp_fu_409_p2 = ap_const_lv1_0) and (grp_fu_403_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln91_fu_587_p2 = ap_const_lv1_1) and (grp_fu_415_p2 = ap_const_lv1_1) and (icmp_ln69_fu_465_p2 = ap_const_lv1_1)) or ((grp_fu_415_p2 = ap_const_lv1_0) and (grp_fu_409_p2 = ap_const_lv1_0) and (grp_fu_403_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (or_ln101_fu_571_p2 = ap_const_lv1_1) and (icmp_ln69_fu_465_p2 = ap_const_lv1_1)) or ((icmp_ln25_fu_427_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln27_fu_689_p2 = ap_const_lv1_1) and (grp_fu_403_p2 = ap_const_lv1_1)) or ((grp_fu_403_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln37_fu_673_p2 = ap_const_lv1_1) and (grp_fu_409_p2 = ap_const_lv1_1)) or ((grp_fu_409_p2 = ap_const_lv1_0) and (grp_fu_403_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln47_fu_657_p2 = ap_const_lv1_1) and (grp_fu_415_p2 = ap_const_lv1_1)) or ((grp_fu_415_p2 = ap_const_lv1_0) and (grp_fu_409_p2 = ap_const_lv1_0) and (grp_fu_403_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (or_ln57_fu_641_p2 = ap_const_lv1_1)))) then 
                p_0_reg_342 <= ap_const_lv1_0;
            elsif ((((icmp_ln69_fu_465_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln113_fu_487_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln30_fu_1137_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln40_fu_1075_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln50_fu_1013_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln60_fu_951_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln74_fu_898_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln84_fu_835_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln94_fu_772_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln104_fu_709_p2 = ap_const_lv1_1)))) then 
                p_0_reg_342 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    read_pointer_be_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln84_fu_835_p2 = ap_const_lv1_1))) then 
                read_pointer_be <= add_ln87_fu_867_p2;
            elsif (((icmp_ln69_fu_465_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln113_fu_487_p2 = ap_const_lv1_1))) then 
                read_pointer_be <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    read_pointer_bk_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln74_fu_898_p2 = ap_const_lv1_1))) then 
                read_pointer_bk <= add_ln77_fu_920_p2;
            elsif (((icmp_ln69_fu_465_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln113_fu_487_p2 = ap_const_lv1_1))) then 
                read_pointer_bk <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    read_pointer_vi_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln94_fu_772_p2 = ap_const_lv1_1))) then 
                read_pointer_vi <= add_ln97_fu_804_p2;
            elsif (((icmp_ln69_fu_465_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln113_fu_487_p2 = ap_const_lv1_1))) then 
                read_pointer_vi <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    read_pointer_vo_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln104_fu_709_p2 = ap_const_lv1_1))) then 
                read_pointer_vo <= add_ln107_fu_741_p2;
            elsif (((icmp_ln69_fu_465_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln113_fu_487_p2 = ap_const_lv1_1))) then 
                read_pointer_vo <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    vi3_0_reg_262_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln91_fu_587_p2 = ap_const_lv1_0) and (grp_fu_409_p2 = ap_const_lv1_0) and (grp_fu_403_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_415_p2 = ap_const_lv1_1) and (icmp_ln69_fu_465_p2 = ap_const_lv1_1))) then 
                vi3_0_reg_262 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                vi3_0_reg_262 <= vi_1_reg_1356;
            end if; 
        end if;
    end process;

    vi_0_reg_309_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln47_fu_657_p2 = ap_const_lv1_0) and (grp_fu_409_p2 = ap_const_lv1_0) and (grp_fu_403_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_415_p2 = ap_const_lv1_1))) then 
                vi_0_reg_309 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                vi_0_reg_309 <= vi_reg_1413;
            end if; 
        end if;
    end process;

    vo4_0_reg_250_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln101_fu_571_p2 = ap_const_lv1_0) and (grp_fu_415_p2 = ap_const_lv1_0) and (grp_fu_409_p2 = ap_const_lv1_0) and (grp_fu_403_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln69_fu_465_p2 = ap_const_lv1_1))) then 
                vo4_0_reg_250 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                vo4_0_reg_250 <= vo_1_reg_1343;
            end if; 
        end if;
    end process;

    vo_0_reg_298_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln57_fu_641_p2 = ap_const_lv1_0) and (grp_fu_415_p2 = ap_const_lv1_0) and (grp_fu_409_p2 = ap_const_lv1_0) and (grp_fu_403_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                vo_0_reg_298 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                vo_0_reg_298 <= vo_reg_1395;
            end if; 
        end if;
    end process;

    write_pointer_be_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln40_fu_1075_p2 = ap_const_lv1_1))) then 
                write_pointer_be <= add_ln43_fu_1097_p2;
            elsif (((icmp_ln69_fu_465_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln113_fu_487_p2 = ap_const_lv1_1))) then 
                write_pointer_be <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    write_pointer_bk_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln30_fu_1137_p2 = ap_const_lv1_1))) then 
                write_pointer_bk <= add_ln33_fu_1159_p2;
            elsif (((icmp_ln69_fu_465_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln113_fu_487_p2 = ap_const_lv1_1))) then 
                write_pointer_bk <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    write_pointer_vi_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln50_fu_1013_p2 = ap_const_lv1_1))) then 
                write_pointer_vi <= add_ln53_fu_1035_p2;
            elsif (((icmp_ln69_fu_465_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln113_fu_487_p2 = ap_const_lv1_1))) then 
                write_pointer_vi <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    write_pointer_vo_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln60_fu_951_p2 = ap_const_lv1_1))) then 
                write_pointer_vo <= add_ln63_fu_973_p2;
            elsif (((icmp_ln69_fu_465_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln113_fu_487_p2 = ap_const_lv1_1))) then 
                write_pointer_vo <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln30_fu_1137_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                add_ln31_reg_1459 <= add_ln31_fu_1154_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln40_fu_1075_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                add_ln41_reg_1441 <= add_ln41_fu_1092_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln50_fu_1013_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                add_ln51_reg_1423 <= add_ln51_fu_1030_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln60_fu_951_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                add_ln61_reg_1405 <= add_ln61_fu_968_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                available_spaces_be_s_reg_1199 <= available_spaces_be;
                available_spaces_bk_s_reg_1188 <= available_spaces_bk;
                available_spaces_vi_s_reg_1210 <= available_spaces_vi;
                available_spaces_vo_s_reg_1221 <= available_spaces_vo;
                write_pointer_be_loa_reg_1205 <= write_pointer_be;
                write_pointer_bk_loa_reg_1194 <= write_pointer_bk;
                write_pointer_vi_loa_reg_1216 <= write_pointer_vi;
                write_pointer_vo_loa_reg_1227 <= write_pointer_vo;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                be_1_reg_1369 <= be_1_fu_841_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                be_reg_1431 <= be_fu_1081_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                bk_1_reg_1382 <= bk_1_fu_904_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                bk_reg_1449 <= bk_fu_1143_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln101_fu_571_p2 = ap_const_lv1_0) and (grp_fu_415_p2 = ap_const_lv1_0) and (grp_fu_409_p2 = ap_const_lv1_0) and (grp_fu_403_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln69_fu_465_p2 = ap_const_lv1_1))) then
                    mul_ln105_reg_1270(8 downto 2) <= mul_ln105_fu_581_p2(8 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln27_fu_689_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_403_p2 = ap_const_lv1_1))) then
                    mul_ln31_reg_1335(8 downto 2) <= mul_ln31_fu_699_p2(8 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln37_fu_673_p2 = ap_const_lv1_0) and (grp_fu_403_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_409_p2 = ap_const_lv1_1))) then
                    mul_ln41_reg_1327(8 downto 2) <= mul_ln41_fu_683_p2(8 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln47_fu_657_p2 = ap_const_lv1_0) and (grp_fu_409_p2 = ap_const_lv1_0) and (grp_fu_403_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_415_p2 = ap_const_lv1_1))) then
                    mul_ln51_reg_1319(8 downto 2) <= mul_ln51_fu_667_p2(8 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln57_fu_641_p2 = ap_const_lv1_0) and (grp_fu_415_p2 = ap_const_lv1_0) and (grp_fu_409_p2 = ap_const_lv1_0) and (grp_fu_403_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    mul_ln61_reg_1311(8 downto 2) <= mul_ln61_fu_651_p2(8 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln71_fu_619_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_403_p2 = ap_const_lv1_1) and (icmp_ln69_fu_465_p2 = ap_const_lv1_1))) then
                    mul_ln75_reg_1294(8 downto 2) <= mul_ln75_fu_629_p2(8 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln81_fu_603_p2 = ap_const_lv1_0) and (grp_fu_403_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_409_p2 = ap_const_lv1_1) and (icmp_ln69_fu_465_p2 = ap_const_lv1_1))) then
                    mul_ln85_reg_1286(8 downto 2) <= mul_ln85_fu_613_p2(8 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln91_fu_587_p2 = ap_const_lv1_0) and (grp_fu_409_p2 = ap_const_lv1_0) and (grp_fu_403_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_415_p2 = ap_const_lv1_1) and (icmp_ln69_fu_465_p2 = ap_const_lv1_1))) then
                    mul_ln95_reg_1278(8 downto 2) <= mul_ln95_fu_597_p2(8 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln25_fu_427_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                read_pointer_be_load_reg_1240 <= read_pointer_be;
                read_pointer_bk_load_reg_1235 <= read_pointer_bk;
                read_pointer_vi_load_reg_1245 <= read_pointer_vi;
                read_pointer_vo_load_reg_1250 <= read_pointer_vo;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                vi_1_reg_1356 <= vi_1_fu_778_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                vi_reg_1413 <= vi_fu_1019_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                vo_1_reg_1343 <= vo_1_fu_715_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                vo_reg_1395 <= vo_fu_957_p2;
            end if;
        end if;
    end process;
    mul_ln105_reg_1270(1 downto 0) <= "00";
    mul_ln95_reg_1278(1 downto 0) <= "00";
    mul_ln85_reg_1286(1 downto 0) <= "00";
    mul_ln75_reg_1294(1 downto 0) <= "00";
    mul_ln61_reg_1311(1 downto 0) <= "00";
    mul_ln51_reg_1319(1 downto 0) <= "00";
    mul_ln41_reg_1327(1 downto 0) <= "00";
    mul_ln31_reg_1335(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln25_fu_427_p2, icmp_ln69_fu_465_p2, grp_fu_403_p2, grp_fu_409_p2, grp_fu_415_p2, or_ln101_fu_571_p2, icmp_ln91_fu_587_p2, icmp_ln81_fu_603_p2, icmp_ln71_fu_619_p2, or_ln57_fu_641_p2, icmp_ln47_fu_657_p2, icmp_ln37_fu_673_p2, icmp_ln27_fu_689_p2, ap_CS_fsm_state2, icmp_ln104_fu_709_p2, ap_CS_fsm_state4, icmp_ln94_fu_772_p2, ap_CS_fsm_state6, icmp_ln84_fu_835_p2, ap_CS_fsm_state8, icmp_ln74_fu_898_p2, ap_CS_fsm_state10, icmp_ln60_fu_951_p2, ap_CS_fsm_state12, icmp_ln50_fu_1013_p2, ap_CS_fsm_state14, icmp_ln40_fu_1075_p2, ap_CS_fsm_state16, icmp_ln30_fu_1137_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((icmp_ln27_fu_689_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_403_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                elsif (((icmp_ln37_fu_673_p2 = ap_const_lv1_0) and (grp_fu_403_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_409_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                elsif (((icmp_ln47_fu_657_p2 = ap_const_lv1_0) and (grp_fu_409_p2 = ap_const_lv1_0) and (grp_fu_403_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_415_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                elsif (((or_ln57_fu_641_p2 = ap_const_lv1_0) and (grp_fu_415_p2 = ap_const_lv1_0) and (grp_fu_409_p2 = ap_const_lv1_0) and (grp_fu_403_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                elsif (((icmp_ln71_fu_619_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_403_p2 = ap_const_lv1_1) and (icmp_ln69_fu_465_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                elsif (((icmp_ln81_fu_603_p2 = ap_const_lv1_0) and (grp_fu_403_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_409_p2 = ap_const_lv1_1) and (icmp_ln69_fu_465_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                elsif (((icmp_ln91_fu_587_p2 = ap_const_lv1_0) and (grp_fu_409_p2 = ap_const_lv1_0) and (grp_fu_403_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_415_p2 = ap_const_lv1_1) and (icmp_ln69_fu_465_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif (((or_ln101_fu_571_p2 = ap_const_lv1_0) and (grp_fu_415_p2 = ap_const_lv1_0) and (grp_fu_409_p2 = ap_const_lv1_0) and (grp_fu_403_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln69_fu_465_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and ((((((((((icmp_ln25_fu_427_p2 = ap_const_lv1_1) and (icmp_ln27_fu_689_p2 = ap_const_lv1_1) and (grp_fu_403_p2 = ap_const_lv1_1)) or ((grp_fu_403_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_1) and (icmp_ln37_fu_673_p2 = ap_const_lv1_1) and (grp_fu_409_p2 = ap_const_lv1_1))) or ((grp_fu_409_p2 = ap_const_lv1_0) and (grp_fu_403_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_1) and (icmp_ln47_fu_657_p2 = ap_const_lv1_1) and (grp_fu_415_p2 = ap_const_lv1_1))) or ((grp_fu_415_p2 = ap_const_lv1_0) and (grp_fu_409_p2 = ap_const_lv1_0) and (grp_fu_403_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_1) and (or_ln57_fu_641_p2 = ap_const_lv1_1))) or ((icmp_ln25_fu_427_p2 = ap_const_lv1_0) and (icmp_ln71_fu_619_p2 = ap_const_lv1_1) and (grp_fu_403_p2 = ap_const_lv1_1))) or ((grp_fu_403_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_0) and (icmp_ln81_fu_603_p2 = ap_const_lv1_1) and (grp_fu_409_p2 = ap_const_lv1_1))) or ((grp_fu_409_p2 = ap_const_lv1_0) and (grp_fu_403_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_0) and (icmp_ln91_fu_587_p2 = ap_const_lv1_1) and (grp_fu_415_p2 = ap_const_lv1_1))) or ((grp_fu_415_p2 = ap_const_lv1_0) and (grp_fu_409_p2 = ap_const_lv1_0) and (grp_fu_403_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_0) and (or_ln101_fu_571_p2 = ap_const_lv1_1))) or ((icmp_ln69_fu_465_p2 = ap_const_lv1_0) and (icmp_ln25_fu_427_p2 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln104_fu_709_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln94_fu_772_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln84_fu_835_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln74_fu_898_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln60_fu_951_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln50_fu_1013_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state14 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln40_fu_1075_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state16 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln30_fu_1137_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln105_1_fu_730_p2 <= std_logic_vector(unsigned(zext_ln105_1_fu_726_p1) + unsigned(ap_const_lv11_4B0));
    add_ln105_fu_721_p2 <= std_logic_vector(unsigned(mul_ln105_reg_1270) + unsigned(zext_ln104_fu_705_p1));
    add_ln107_fu_741_p2 <= std_logic_vector(unsigned(read_pointer_vo_load_reg_1250) + unsigned(ap_const_lv2_1));
    add_ln108_fu_752_p2 <= std_logic_vector(unsigned(available_spaces_vo_s_reg_1221) + unsigned(ap_const_lv3_1));
    add_ln31_fu_1154_p2 <= std_logic_vector(unsigned(zext_ln30_fu_1133_p1) + unsigned(mul_ln31_reg_1335));
    add_ln33_fu_1159_p2 <= std_logic_vector(unsigned(write_pointer_bk_loa_reg_1194) + unsigned(ap_const_lv2_1));
    add_ln34_fu_1170_p2 <= std_logic_vector(unsigned(available_spaces_bk_s_reg_1188) + unsigned(ap_const_lv3_7));
    add_ln41_1_fu_1122_p2 <= std_logic_vector(unsigned(zext_ln41_2_fu_1119_p1) + unsigned(ap_const_lv10_190));
    add_ln41_fu_1092_p2 <= std_logic_vector(unsigned(mul_ln41_reg_1327) + unsigned(zext_ln40_fu_1071_p1));
    add_ln43_fu_1097_p2 <= std_logic_vector(unsigned(write_pointer_be_loa_reg_1205) + unsigned(ap_const_lv2_1));
    add_ln44_fu_1108_p2 <= std_logic_vector(unsigned(available_spaces_be_s_reg_1199) + unsigned(ap_const_lv3_7));
    add_ln51_1_fu_1060_p2 <= std_logic_vector(unsigned(zext_ln51_2_fu_1057_p1) + unsigned(ap_const_lv11_320));
    add_ln51_fu_1030_p2 <= std_logic_vector(unsigned(mul_ln51_reg_1319) + unsigned(zext_ln50_fu_1009_p1));
    add_ln53_fu_1035_p2 <= std_logic_vector(unsigned(write_pointer_vi_loa_reg_1216) + unsigned(ap_const_lv2_1));
    add_ln54_fu_1046_p2 <= std_logic_vector(unsigned(available_spaces_vi_s_reg_1210) + unsigned(ap_const_lv3_7));
    add_ln61_1_fu_998_p2 <= std_logic_vector(unsigned(zext_ln61_2_fu_995_p1) + unsigned(ap_const_lv11_4B0));
    add_ln61_fu_968_p2 <= std_logic_vector(unsigned(mul_ln61_reg_1311) + unsigned(zext_ln60_fu_947_p1));
    add_ln63_fu_973_p2 <= std_logic_vector(unsigned(write_pointer_vo_loa_reg_1227) + unsigned(ap_const_lv2_1));
    add_ln64_fu_984_p2 <= std_logic_vector(unsigned(available_spaces_vo_s_reg_1221) + unsigned(ap_const_lv3_7));
    add_ln75_fu_910_p2 <= std_logic_vector(unsigned(zext_ln74_fu_894_p1) + unsigned(mul_ln75_reg_1294));
    add_ln77_fu_920_p2 <= std_logic_vector(unsigned(read_pointer_bk_load_reg_1235) + unsigned(ap_const_lv2_1));
    add_ln78_fu_931_p2 <= std_logic_vector(unsigned(available_spaces_bk_s_reg_1188) + unsigned(ap_const_lv3_1));
    add_ln85_1_fu_856_p2 <= std_logic_vector(unsigned(zext_ln85_1_fu_852_p1) + unsigned(ap_const_lv10_190));
    add_ln85_fu_847_p2 <= std_logic_vector(unsigned(mul_ln85_reg_1286) + unsigned(zext_ln84_fu_831_p1));
    add_ln87_fu_867_p2 <= std_logic_vector(unsigned(read_pointer_be_load_reg_1240) + unsigned(ap_const_lv2_1));
    add_ln88_fu_878_p2 <= std_logic_vector(unsigned(available_spaces_be_s_reg_1199) + unsigned(ap_const_lv3_1));
    add_ln95_1_fu_793_p2 <= std_logic_vector(unsigned(zext_ln95_1_fu_789_p1) + unsigned(ap_const_lv11_320));
    add_ln95_fu_784_p2 <= std_logic_vector(unsigned(mul_ln95_reg_1278) + unsigned(zext_ln94_fu_768_p1));
    add_ln97_fu_804_p2 <= std_logic_vector(unsigned(read_pointer_vi_load_reg_1245) + unsigned(ap_const_lv2_1));
    add_ln98_fu_815_p2 <= std_logic_vector(unsigned(available_spaces_vi_s_reg_1210) + unsigned(ap_const_lv3_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= p_0_reg_342;
    be_1_fu_841_p2 <= std_logic_vector(unsigned(be2_0_reg_274) + unsigned(ap_const_lv7_1));
    be_fu_1081_p2 <= std_logic_vector(unsigned(be_0_reg_320) + unsigned(ap_const_lv7_1));
    bk_1_fu_904_p2 <= std_logic_vector(unsigned(bk1_0_reg_286) + unsigned(ap_const_lv7_1));
    bk_fu_1143_p2 <= std_logic_vector(unsigned(bk_0_reg_331) + unsigned(ap_const_lv7_1));

    edca_queues_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17, zext_ln105_3_fu_736_p1, zext_ln95_3_fu_799_p1, zext_ln85_3_fu_862_p1, zext_ln75_1_fu_915_p1, zext_ln61_3_fu_1004_p1, zext_ln51_3_fu_1066_p1, zext_ln41_3_fu_1128_p1, zext_ln31_2_fu_1181_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            edca_queues_address0 <= zext_ln31_2_fu_1181_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            edca_queues_address0 <= zext_ln41_3_fu_1128_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            edca_queues_address0 <= zext_ln51_3_fu_1066_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            edca_queues_address0 <= zext_ln61_3_fu_1004_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            edca_queues_address0 <= zext_ln75_1_fu_915_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            edca_queues_address0 <= zext_ln85_3_fu_862_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            edca_queues_address0 <= zext_ln95_3_fu_799_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            edca_queues_address0 <= zext_ln105_3_fu_736_p1(11 - 1 downto 0);
        else 
            edca_queues_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    edca_queues_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            edca_queues_ce0 <= ap_const_logic_1;
        else 
            edca_queues_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    edca_queues_we0_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            edca_queues_we0 <= ap_const_logic_1;
        else 
            edca_queues_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_403_p2 <= "1" when (ac = ap_const_lv2_0) else "0";
    grp_fu_409_p2 <= "1" when (ac = ap_const_lv2_1) else "0";
    grp_fu_415_p2 <= "1" when (ac = ap_const_lv2_2) else "0";
    grp_fu_421_p2 <= "0" when (ac = ap_const_lv2_3) else "1";
    icmp_ln101_1_fu_565_p2 <= "1" when (available_spaces_vo = ap_const_lv3_4) else "0";
    icmp_ln104_fu_709_p2 <= "1" when (vo4_0_reg_250 = ap_const_lv7_64) else "0";
    icmp_ln113_fu_487_p2 <= "1" when (operation = ap_const_lv2_2) else "0";
    icmp_ln25_fu_427_p2 <= "1" when (operation = ap_const_lv2_0) else "0";
    icmp_ln27_fu_689_p2 <= "1" when (available_spaces_bk = ap_const_lv3_0) else "0";
    icmp_ln30_fu_1137_p2 <= "1" when (bk_0_reg_331 = ap_const_lv7_64) else "0";
    icmp_ln37_fu_673_p2 <= "1" when (available_spaces_be = ap_const_lv3_0) else "0";
    icmp_ln40_fu_1075_p2 <= "1" when (be_0_reg_320 = ap_const_lv7_64) else "0";
    icmp_ln47_fu_657_p2 <= "1" when (available_spaces_vi = ap_const_lv3_0) else "0";
    icmp_ln50_fu_1013_p2 <= "1" when (vi_0_reg_309 = ap_const_lv7_64) else "0";
    icmp_ln57_1_fu_635_p2 <= "1" when (available_spaces_vo = ap_const_lv3_0) else "0";
    icmp_ln60_fu_951_p2 <= "1" when (vo_0_reg_298 = ap_const_lv7_64) else "0";
    icmp_ln69_fu_465_p2 <= "1" when (operation = ap_const_lv2_1) else "0";
    icmp_ln71_fu_619_p2 <= "1" when (available_spaces_bk = ap_const_lv3_4) else "0";
    icmp_ln74_fu_898_p2 <= "1" when (bk1_0_reg_286 = ap_const_lv7_64) else "0";
    icmp_ln81_fu_603_p2 <= "1" when (available_spaces_be = ap_const_lv3_4) else "0";
    icmp_ln84_fu_835_p2 <= "1" when (be2_0_reg_274 = ap_const_lv7_64) else "0";
    icmp_ln91_fu_587_p2 <= "1" when (available_spaces_vi = ap_const_lv3_4) else "0";
    icmp_ln94_fu_772_p2 <= "1" when (vi3_0_reg_262 = ap_const_lv7_64) else "0";

    inout_frame_address0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9, zext_ln105_2_fu_763_p1, zext_ln95_2_fu_826_p1, zext_ln85_2_fu_889_p1, zext_ln75_2_fu_942_p1, zext_ln61_1_fu_963_p1, zext_ln51_1_fu_1025_p1, zext_ln41_1_fu_1087_p1, zext_ln31_1_fu_1149_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            inout_frame_address0 <= zext_ln31_1_fu_1149_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            inout_frame_address0 <= zext_ln41_1_fu_1087_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            inout_frame_address0 <= zext_ln51_1_fu_1025_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            inout_frame_address0 <= zext_ln61_1_fu_963_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            inout_frame_address0 <= zext_ln75_2_fu_942_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            inout_frame_address0 <= zext_ln85_2_fu_889_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            inout_frame_address0 <= zext_ln95_2_fu_826_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            inout_frame_address0 <= zext_ln105_2_fu_763_p1(7 - 1 downto 0);
        else 
            inout_frame_address0 <= "XXXXXXX";
        end if; 
    end process;


    inout_frame_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            inout_frame_ce0 <= ap_const_logic_1;
        else 
            inout_frame_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    inout_frame_d0 <= edca_queues_q0;

    inout_frame_we0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            inout_frame_we0 <= ap_const_logic_1;
        else 
            inout_frame_we0 <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln105_fu_581_p0 <= mul_ln105_fu_581_p00(2 - 1 downto 0);
    mul_ln105_fu_581_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(read_pointer_vo),9));
    mul_ln105_fu_581_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln105_fu_581_p0) * unsigned(ap_const_lv9_64), 9));
    mul_ln31_fu_699_p0 <= mul_ln31_fu_699_p00(2 - 1 downto 0);
    mul_ln31_fu_699_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(write_pointer_bk),9));
    mul_ln31_fu_699_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln31_fu_699_p0) * unsigned(ap_const_lv9_64), 9));
    mul_ln41_fu_683_p0 <= mul_ln41_fu_683_p00(2 - 1 downto 0);
    mul_ln41_fu_683_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(write_pointer_be),9));
    mul_ln41_fu_683_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln41_fu_683_p0) * unsigned(ap_const_lv9_64), 9));
    mul_ln51_fu_667_p0 <= mul_ln51_fu_667_p00(2 - 1 downto 0);
    mul_ln51_fu_667_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(write_pointer_vi),9));
    mul_ln51_fu_667_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln51_fu_667_p0) * unsigned(ap_const_lv9_64), 9));
    mul_ln61_fu_651_p0 <= mul_ln61_fu_651_p00(2 - 1 downto 0);
    mul_ln61_fu_651_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(write_pointer_vo),9));
    mul_ln61_fu_651_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln61_fu_651_p0) * unsigned(ap_const_lv9_64), 9));
    mul_ln75_fu_629_p0 <= mul_ln75_fu_629_p00(2 - 1 downto 0);
    mul_ln75_fu_629_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(read_pointer_bk),9));
    mul_ln75_fu_629_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln75_fu_629_p0) * unsigned(ap_const_lv9_64), 9));
    mul_ln85_fu_613_p0 <= mul_ln85_fu_613_p00(2 - 1 downto 0);
    mul_ln85_fu_613_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(read_pointer_be),9));
    mul_ln85_fu_613_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln85_fu_613_p0) * unsigned(ap_const_lv9_64), 9));
    mul_ln95_fu_597_p0 <= mul_ln95_fu_597_p00(2 - 1 downto 0);
    mul_ln95_fu_597_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(read_pointer_vi),9));
    mul_ln95_fu_597_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln95_fu_597_p0) * unsigned(ap_const_lv9_64), 9));
    or_ln101_fu_571_p2 <= (icmp_ln101_1_fu_565_p2 or grp_fu_421_p2);
    or_ln57_fu_641_p2 <= (icmp_ln57_1_fu_635_p2 or grp_fu_421_p2);
    vi_1_fu_778_p2 <= std_logic_vector(unsigned(vi3_0_reg_262) + unsigned(ap_const_lv7_1));
    vi_fu_1019_p2 <= std_logic_vector(unsigned(vi_0_reg_309) + unsigned(ap_const_lv7_1));
    vo_1_fu_715_p2 <= std_logic_vector(unsigned(vo4_0_reg_250) + unsigned(ap_const_lv7_1));
    vo_fu_957_p2 <= std_logic_vector(unsigned(vo_0_reg_298) + unsigned(ap_const_lv7_1));
    zext_ln104_fu_705_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vo4_0_reg_250),9));
    zext_ln105_1_fu_726_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln105_fu_721_p2),11));
    zext_ln105_2_fu_763_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vo4_0_reg_250),64));
    zext_ln105_3_fu_736_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln105_1_fu_730_p2),64));
    zext_ln30_fu_1133_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bk_0_reg_331),9));
    zext_ln31_1_fu_1149_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bk_0_reg_331),64));
    zext_ln31_2_fu_1181_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln31_reg_1459),64));
    zext_ln40_fu_1071_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(be_0_reg_320),9));
    zext_ln41_1_fu_1087_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(be_0_reg_320),64));
    zext_ln41_2_fu_1119_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln41_reg_1441),10));
    zext_ln41_3_fu_1128_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln41_1_fu_1122_p2),64));
    zext_ln50_fu_1009_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vi_0_reg_309),9));
    zext_ln51_1_fu_1025_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vi_0_reg_309),64));
    zext_ln51_2_fu_1057_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln51_reg_1423),11));
    zext_ln51_3_fu_1066_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln51_1_fu_1060_p2),64));
    zext_ln60_fu_947_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vo_0_reg_298),9));
    zext_ln61_1_fu_963_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vo_0_reg_298),64));
    zext_ln61_2_fu_995_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln61_reg_1405),11));
    zext_ln61_3_fu_1004_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln61_1_fu_998_p2),64));
    zext_ln74_fu_894_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bk1_0_reg_286),9));
    zext_ln75_1_fu_915_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln75_fu_910_p2),64));
    zext_ln75_2_fu_942_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bk1_0_reg_286),64));
    zext_ln84_fu_831_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(be2_0_reg_274),9));
    zext_ln85_1_fu_852_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln85_fu_847_p2),10));
    zext_ln85_2_fu_889_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(be2_0_reg_274),64));
    zext_ln85_3_fu_862_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln85_1_fu_856_p2),64));
    zext_ln94_fu_768_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vi3_0_reg_262),9));
    zext_ln95_1_fu_789_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln95_fu_784_p2),11));
    zext_ln95_2_fu_826_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vi3_0_reg_262),64));
    zext_ln95_3_fu_799_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln95_1_fu_793_p2),64));
end behav;
