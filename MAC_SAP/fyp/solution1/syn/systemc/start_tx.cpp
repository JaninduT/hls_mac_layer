// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "start_tx.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic start_tx::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic start_tx::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> start_tx::ap_ST_fsm_state1 = "1";
const sc_lv<2> start_tx::ap_ST_fsm_state2 = "10";
const sc_lv<32> start_tx::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> start_tx::ap_const_lv1_1 = "1";
const sc_lv<32> start_tx::ap_const_lv32_1 = "1";
const sc_lv<2> start_tx::ap_const_lv2_3 = "11";
const bool start_tx::ap_const_boolean_1 = true;

start_tx::start_tx(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_enqueue_dequeue_fram_fu_44 = new enqueue_dequeue_fram("grp_enqueue_dequeue_fram_fu_44");
    grp_enqueue_dequeue_fram_fu_44->ap_clk(ap_clk);
    grp_enqueue_dequeue_fram_fu_44->ap_rst(ap_rst);
    grp_enqueue_dequeue_fram_fu_44->ap_start(grp_enqueue_dequeue_fram_fu_44_ap_start);
    grp_enqueue_dequeue_fram_fu_44->ap_done(grp_enqueue_dequeue_fram_fu_44_ap_done);
    grp_enqueue_dequeue_fram_fu_44->ap_idle(grp_enqueue_dequeue_fram_fu_44_ap_idle);
    grp_enqueue_dequeue_fram_fu_44->ap_ready(grp_enqueue_dequeue_fram_fu_44_ap_ready);
    grp_enqueue_dequeue_fram_fu_44->operation(ap_var_for_const0);
    grp_enqueue_dequeue_fram_fu_44->ac(add_ln368_reg_90);
    grp_enqueue_dequeue_fram_fu_44->inout_frame_address0(grp_enqueue_dequeue_fram_fu_44_inout_frame_address0);
    grp_enqueue_dequeue_fram_fu_44->inout_frame_ce0(grp_enqueue_dequeue_fram_fu_44_inout_frame_ce0);
    grp_enqueue_dequeue_fram_fu_44->inout_frame_we0(grp_enqueue_dequeue_fram_fu_44_inout_frame_we0);
    grp_enqueue_dequeue_fram_fu_44->inout_frame_d0(grp_enqueue_dequeue_fram_fu_44_inout_frame_d0);
    grp_enqueue_dequeue_fram_fu_44->inout_frame_q0(tx_frame_q0);
    grp_enqueue_dequeue_fram_fu_44->available_spaces_bk_i(available_spaces_bk_i);
    grp_enqueue_dequeue_fram_fu_44->available_spaces_bk_o(grp_enqueue_dequeue_fram_fu_44_available_spaces_bk_o);
    grp_enqueue_dequeue_fram_fu_44->available_spaces_bk_o_ap_vld(grp_enqueue_dequeue_fram_fu_44_available_spaces_bk_o_ap_vld);
    grp_enqueue_dequeue_fram_fu_44->write_pointer_bk_i(write_pointer_bk_i);
    grp_enqueue_dequeue_fram_fu_44->write_pointer_bk_o(grp_enqueue_dequeue_fram_fu_44_write_pointer_bk_o);
    grp_enqueue_dequeue_fram_fu_44->write_pointer_bk_o_ap_vld(grp_enqueue_dequeue_fram_fu_44_write_pointer_bk_o_ap_vld);
    grp_enqueue_dequeue_fram_fu_44->available_spaces_be_i(available_spaces_be_i);
    grp_enqueue_dequeue_fram_fu_44->available_spaces_be_o(grp_enqueue_dequeue_fram_fu_44_available_spaces_be_o);
    grp_enqueue_dequeue_fram_fu_44->available_spaces_be_o_ap_vld(grp_enqueue_dequeue_fram_fu_44_available_spaces_be_o_ap_vld);
    grp_enqueue_dequeue_fram_fu_44->write_pointer_be_i(write_pointer_be_i);
    grp_enqueue_dequeue_fram_fu_44->write_pointer_be_o(grp_enqueue_dequeue_fram_fu_44_write_pointer_be_o);
    grp_enqueue_dequeue_fram_fu_44->write_pointer_be_o_ap_vld(grp_enqueue_dequeue_fram_fu_44_write_pointer_be_o_ap_vld);
    grp_enqueue_dequeue_fram_fu_44->available_spaces_vi_i(available_spaces_vi_i);
    grp_enqueue_dequeue_fram_fu_44->available_spaces_vi_o(grp_enqueue_dequeue_fram_fu_44_available_spaces_vi_o);
    grp_enqueue_dequeue_fram_fu_44->available_spaces_vi_o_ap_vld(grp_enqueue_dequeue_fram_fu_44_available_spaces_vi_o_ap_vld);
    grp_enqueue_dequeue_fram_fu_44->write_pointer_vi_i(write_pointer_vi_i);
    grp_enqueue_dequeue_fram_fu_44->write_pointer_vi_o(grp_enqueue_dequeue_fram_fu_44_write_pointer_vi_o);
    grp_enqueue_dequeue_fram_fu_44->write_pointer_vi_o_ap_vld(grp_enqueue_dequeue_fram_fu_44_write_pointer_vi_o_ap_vld);
    grp_enqueue_dequeue_fram_fu_44->available_spaces_vo_i(available_spaces_vo_i);
    grp_enqueue_dequeue_fram_fu_44->available_spaces_vo_o(grp_enqueue_dequeue_fram_fu_44_available_spaces_vo_o);
    grp_enqueue_dequeue_fram_fu_44->available_spaces_vo_o_ap_vld(grp_enqueue_dequeue_fram_fu_44_available_spaces_vo_o_ap_vld);
    grp_enqueue_dequeue_fram_fu_44->write_pointer_vo_i(write_pointer_vo_i);
    grp_enqueue_dequeue_fram_fu_44->write_pointer_vo_o(grp_enqueue_dequeue_fram_fu_44_write_pointer_vo_o);
    grp_enqueue_dequeue_fram_fu_44->write_pointer_vo_o_ap_vld(grp_enqueue_dequeue_fram_fu_44_write_pointer_vo_o_ap_vld);
    grp_enqueue_dequeue_fram_fu_44->edca_queues_address0(grp_enqueue_dequeue_fram_fu_44_edca_queues_address0);
    grp_enqueue_dequeue_fram_fu_44->edca_queues_ce0(grp_enqueue_dequeue_fram_fu_44_edca_queues_ce0);
    grp_enqueue_dequeue_fram_fu_44->edca_queues_we0(grp_enqueue_dequeue_fram_fu_44_edca_queues_we0);
    grp_enqueue_dequeue_fram_fu_44->edca_queues_d0(grp_enqueue_dequeue_fram_fu_44_edca_queues_d0);
    grp_enqueue_dequeue_fram_fu_44->edca_queues_q0(edca_queues_q0);
    grp_enqueue_dequeue_fram_fu_44->read_pointer_bk_i(read_pointer_bk_i);
    grp_enqueue_dequeue_fram_fu_44->read_pointer_bk_o(grp_enqueue_dequeue_fram_fu_44_read_pointer_bk_o);
    grp_enqueue_dequeue_fram_fu_44->read_pointer_bk_o_ap_vld(grp_enqueue_dequeue_fram_fu_44_read_pointer_bk_o_ap_vld);
    grp_enqueue_dequeue_fram_fu_44->read_pointer_be_i(read_pointer_be_i);
    grp_enqueue_dequeue_fram_fu_44->read_pointer_be_o(grp_enqueue_dequeue_fram_fu_44_read_pointer_be_o);
    grp_enqueue_dequeue_fram_fu_44->read_pointer_be_o_ap_vld(grp_enqueue_dequeue_fram_fu_44_read_pointer_be_o_ap_vld);
    grp_enqueue_dequeue_fram_fu_44->read_pointer_vi_i(read_pointer_vi_i);
    grp_enqueue_dequeue_fram_fu_44->read_pointer_vi_o(grp_enqueue_dequeue_fram_fu_44_read_pointer_vi_o);
    grp_enqueue_dequeue_fram_fu_44->read_pointer_vi_o_ap_vld(grp_enqueue_dequeue_fram_fu_44_read_pointer_vi_o_ap_vld);
    grp_enqueue_dequeue_fram_fu_44->read_pointer_vo_i(read_pointer_vo_i);
    grp_enqueue_dequeue_fram_fu_44->read_pointer_vo_o(grp_enqueue_dequeue_fram_fu_44_read_pointer_vo_o);
    grp_enqueue_dequeue_fram_fu_44->read_pointer_vo_o_ap_vld(grp_enqueue_dequeue_fram_fu_44_read_pointer_vo_o_ap_vld);
    grp_enqueue_dequeue_fram_fu_44->ap_return(grp_enqueue_dequeue_fram_fu_44_ap_return);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln368_fu_83_p2);
    sensitive << ( trunc_ln368_fu_79_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_ap_done );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_ap_done );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_available_spaces_be_o);
    sensitive << ( available_spaces_be_i );
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_available_spaces_be_o );
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_available_spaces_be_o_ap_vld );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_available_spaces_be_o_ap_vld);
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_available_spaces_be_o_ap_vld );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_available_spaces_bk_o);
    sensitive << ( available_spaces_bk_i );
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_available_spaces_bk_o );
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_available_spaces_bk_o_ap_vld );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_available_spaces_bk_o_ap_vld);
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_available_spaces_bk_o_ap_vld );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_available_spaces_vi_o);
    sensitive << ( available_spaces_vi_i );
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_available_spaces_vi_o );
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_available_spaces_vi_o_ap_vld );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_available_spaces_vi_o_ap_vld);
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_available_spaces_vi_o_ap_vld );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_available_spaces_vo_o);
    sensitive << ( available_spaces_vo_i );
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_available_spaces_vo_o );
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_available_spaces_vo_o_ap_vld );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_available_spaces_vo_o_ap_vld);
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_available_spaces_vo_o_ap_vld );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_edca_queues_address0);
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_edca_queues_address0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_edca_queues_ce0);
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_edca_queues_ce0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_edca_queues_d0);
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_edca_queues_d0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_edca_queues_we0);
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_edca_queues_we0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_grp_enqueue_dequeue_fram_fu_44_ap_start);
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_ap_start_reg );

    SC_METHOD(thread_read_pointer_be_o);
    sensitive << ( read_pointer_be_i );
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_read_pointer_be_o );
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_read_pointer_be_o_ap_vld );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_read_pointer_be_o_ap_vld);
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_read_pointer_be_o_ap_vld );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_read_pointer_bk_o);
    sensitive << ( read_pointer_bk_i );
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_read_pointer_bk_o );
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_read_pointer_bk_o_ap_vld );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_read_pointer_bk_o_ap_vld);
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_read_pointer_bk_o_ap_vld );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_read_pointer_vi_o);
    sensitive << ( read_pointer_vi_i );
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_read_pointer_vi_o );
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_read_pointer_vi_o_ap_vld );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_read_pointer_vi_o_ap_vld);
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_read_pointer_vi_o_ap_vld );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_read_pointer_vo_o);
    sensitive << ( read_pointer_vo_i );
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_read_pointer_vo_o );
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_read_pointer_vo_o_ap_vld );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_read_pointer_vo_o_ap_vld);
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_read_pointer_vo_o_ap_vld );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_trunc_ln368_fu_79_p1);
    sensitive << ( current_txop_holder );

    SC_METHOD(thread_tx_frame_address0);
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_inout_frame_address0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tx_frame_ce0);
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_inout_frame_ce0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tx_frame_d0);
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_inout_frame_d0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tx_frame_we0);
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_inout_frame_we0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_write_pointer_be_o);
    sensitive << ( write_pointer_be_i );
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_write_pointer_be_o );
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_write_pointer_be_o_ap_vld );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_write_pointer_be_o_ap_vld);
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_write_pointer_be_o_ap_vld );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_write_pointer_bk_o);
    sensitive << ( write_pointer_bk_i );
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_write_pointer_bk_o );
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_write_pointer_bk_o_ap_vld );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_write_pointer_bk_o_ap_vld);
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_write_pointer_bk_o_ap_vld );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_write_pointer_vi_o);
    sensitive << ( write_pointer_vi_i );
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_write_pointer_vi_o );
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_write_pointer_vi_o_ap_vld );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_write_pointer_vi_o_ap_vld);
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_write_pointer_vi_o_ap_vld );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_write_pointer_vo_o);
    sensitive << ( write_pointer_vo_i );
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_write_pointer_vo_o );
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_write_pointer_vo_o_ap_vld );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_write_pointer_vo_o_ap_vld);
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_write_pointer_vo_o_ap_vld );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( grp_enqueue_dequeue_fram_fu_44_ap_done );
    sensitive << ( ap_CS_fsm_state2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "01";
    grp_enqueue_dequeue_fram_fu_44_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "start_tx_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, current_txop_holder, "(port)current_txop_holder");
    sc_trace(mVcdFile, tx_frame_address0, "(port)tx_frame_address0");
    sc_trace(mVcdFile, tx_frame_ce0, "(port)tx_frame_ce0");
    sc_trace(mVcdFile, tx_frame_we0, "(port)tx_frame_we0");
    sc_trace(mVcdFile, tx_frame_d0, "(port)tx_frame_d0");
    sc_trace(mVcdFile, tx_frame_q0, "(port)tx_frame_q0");
    sc_trace(mVcdFile, available_spaces_bk_i, "(port)available_spaces_bk_i");
    sc_trace(mVcdFile, available_spaces_bk_o, "(port)available_spaces_bk_o");
    sc_trace(mVcdFile, available_spaces_bk_o_ap_vld, "(port)available_spaces_bk_o_ap_vld");
    sc_trace(mVcdFile, write_pointer_bk_i, "(port)write_pointer_bk_i");
    sc_trace(mVcdFile, write_pointer_bk_o, "(port)write_pointer_bk_o");
    sc_trace(mVcdFile, write_pointer_bk_o_ap_vld, "(port)write_pointer_bk_o_ap_vld");
    sc_trace(mVcdFile, available_spaces_be_i, "(port)available_spaces_be_i");
    sc_trace(mVcdFile, available_spaces_be_o, "(port)available_spaces_be_o");
    sc_trace(mVcdFile, available_spaces_be_o_ap_vld, "(port)available_spaces_be_o_ap_vld");
    sc_trace(mVcdFile, write_pointer_be_i, "(port)write_pointer_be_i");
    sc_trace(mVcdFile, write_pointer_be_o, "(port)write_pointer_be_o");
    sc_trace(mVcdFile, write_pointer_be_o_ap_vld, "(port)write_pointer_be_o_ap_vld");
    sc_trace(mVcdFile, available_spaces_vi_i, "(port)available_spaces_vi_i");
    sc_trace(mVcdFile, available_spaces_vi_o, "(port)available_spaces_vi_o");
    sc_trace(mVcdFile, available_spaces_vi_o_ap_vld, "(port)available_spaces_vi_o_ap_vld");
    sc_trace(mVcdFile, write_pointer_vi_i, "(port)write_pointer_vi_i");
    sc_trace(mVcdFile, write_pointer_vi_o, "(port)write_pointer_vi_o");
    sc_trace(mVcdFile, write_pointer_vi_o_ap_vld, "(port)write_pointer_vi_o_ap_vld");
    sc_trace(mVcdFile, available_spaces_vo_i, "(port)available_spaces_vo_i");
    sc_trace(mVcdFile, available_spaces_vo_o, "(port)available_spaces_vo_o");
    sc_trace(mVcdFile, available_spaces_vo_o_ap_vld, "(port)available_spaces_vo_o_ap_vld");
    sc_trace(mVcdFile, write_pointer_vo_i, "(port)write_pointer_vo_i");
    sc_trace(mVcdFile, write_pointer_vo_o, "(port)write_pointer_vo_o");
    sc_trace(mVcdFile, write_pointer_vo_o_ap_vld, "(port)write_pointer_vo_o_ap_vld");
    sc_trace(mVcdFile, edca_queues_address0, "(port)edca_queues_address0");
    sc_trace(mVcdFile, edca_queues_ce0, "(port)edca_queues_ce0");
    sc_trace(mVcdFile, edca_queues_we0, "(port)edca_queues_we0");
    sc_trace(mVcdFile, edca_queues_d0, "(port)edca_queues_d0");
    sc_trace(mVcdFile, edca_queues_q0, "(port)edca_queues_q0");
    sc_trace(mVcdFile, read_pointer_bk_i, "(port)read_pointer_bk_i");
    sc_trace(mVcdFile, read_pointer_bk_o, "(port)read_pointer_bk_o");
    sc_trace(mVcdFile, read_pointer_bk_o_ap_vld, "(port)read_pointer_bk_o_ap_vld");
    sc_trace(mVcdFile, read_pointer_be_i, "(port)read_pointer_be_i");
    sc_trace(mVcdFile, read_pointer_be_o, "(port)read_pointer_be_o");
    sc_trace(mVcdFile, read_pointer_be_o_ap_vld, "(port)read_pointer_be_o_ap_vld");
    sc_trace(mVcdFile, read_pointer_vi_i, "(port)read_pointer_vi_i");
    sc_trace(mVcdFile, read_pointer_vi_o, "(port)read_pointer_vi_o");
    sc_trace(mVcdFile, read_pointer_vi_o_ap_vld, "(port)read_pointer_vi_o_ap_vld");
    sc_trace(mVcdFile, read_pointer_vo_i, "(port)read_pointer_vo_i");
    sc_trace(mVcdFile, read_pointer_vo_o, "(port)read_pointer_vo_o");
    sc_trace(mVcdFile, read_pointer_vo_o_ap_vld, "(port)read_pointer_vo_o_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, add_ln368_fu_83_p2, "add_ln368_fu_83_p2");
    sc_trace(mVcdFile, add_ln368_reg_90, "add_ln368_reg_90");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_ap_start, "grp_enqueue_dequeue_fram_fu_44_ap_start");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_ap_done, "grp_enqueue_dequeue_fram_fu_44_ap_done");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_ap_idle, "grp_enqueue_dequeue_fram_fu_44_ap_idle");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_ap_ready, "grp_enqueue_dequeue_fram_fu_44_ap_ready");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_inout_frame_address0, "grp_enqueue_dequeue_fram_fu_44_inout_frame_address0");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_inout_frame_ce0, "grp_enqueue_dequeue_fram_fu_44_inout_frame_ce0");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_inout_frame_we0, "grp_enqueue_dequeue_fram_fu_44_inout_frame_we0");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_inout_frame_d0, "grp_enqueue_dequeue_fram_fu_44_inout_frame_d0");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_available_spaces_bk_o, "grp_enqueue_dequeue_fram_fu_44_available_spaces_bk_o");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_available_spaces_bk_o_ap_vld, "grp_enqueue_dequeue_fram_fu_44_available_spaces_bk_o_ap_vld");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_write_pointer_bk_o, "grp_enqueue_dequeue_fram_fu_44_write_pointer_bk_o");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_write_pointer_bk_o_ap_vld, "grp_enqueue_dequeue_fram_fu_44_write_pointer_bk_o_ap_vld");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_available_spaces_be_o, "grp_enqueue_dequeue_fram_fu_44_available_spaces_be_o");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_available_spaces_be_o_ap_vld, "grp_enqueue_dequeue_fram_fu_44_available_spaces_be_o_ap_vld");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_write_pointer_be_o, "grp_enqueue_dequeue_fram_fu_44_write_pointer_be_o");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_write_pointer_be_o_ap_vld, "grp_enqueue_dequeue_fram_fu_44_write_pointer_be_o_ap_vld");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_available_spaces_vi_o, "grp_enqueue_dequeue_fram_fu_44_available_spaces_vi_o");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_available_spaces_vi_o_ap_vld, "grp_enqueue_dequeue_fram_fu_44_available_spaces_vi_o_ap_vld");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_write_pointer_vi_o, "grp_enqueue_dequeue_fram_fu_44_write_pointer_vi_o");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_write_pointer_vi_o_ap_vld, "grp_enqueue_dequeue_fram_fu_44_write_pointer_vi_o_ap_vld");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_available_spaces_vo_o, "grp_enqueue_dequeue_fram_fu_44_available_spaces_vo_o");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_available_spaces_vo_o_ap_vld, "grp_enqueue_dequeue_fram_fu_44_available_spaces_vo_o_ap_vld");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_write_pointer_vo_o, "grp_enqueue_dequeue_fram_fu_44_write_pointer_vo_o");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_write_pointer_vo_o_ap_vld, "grp_enqueue_dequeue_fram_fu_44_write_pointer_vo_o_ap_vld");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_edca_queues_address0, "grp_enqueue_dequeue_fram_fu_44_edca_queues_address0");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_edca_queues_ce0, "grp_enqueue_dequeue_fram_fu_44_edca_queues_ce0");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_edca_queues_we0, "grp_enqueue_dequeue_fram_fu_44_edca_queues_we0");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_edca_queues_d0, "grp_enqueue_dequeue_fram_fu_44_edca_queues_d0");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_read_pointer_bk_o, "grp_enqueue_dequeue_fram_fu_44_read_pointer_bk_o");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_read_pointer_bk_o_ap_vld, "grp_enqueue_dequeue_fram_fu_44_read_pointer_bk_o_ap_vld");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_read_pointer_be_o, "grp_enqueue_dequeue_fram_fu_44_read_pointer_be_o");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_read_pointer_be_o_ap_vld, "grp_enqueue_dequeue_fram_fu_44_read_pointer_be_o_ap_vld");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_read_pointer_vi_o, "grp_enqueue_dequeue_fram_fu_44_read_pointer_vi_o");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_read_pointer_vi_o_ap_vld, "grp_enqueue_dequeue_fram_fu_44_read_pointer_vi_o_ap_vld");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_read_pointer_vo_o, "grp_enqueue_dequeue_fram_fu_44_read_pointer_vo_o");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_read_pointer_vo_o_ap_vld, "grp_enqueue_dequeue_fram_fu_44_read_pointer_vo_o_ap_vld");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_ap_return, "grp_enqueue_dequeue_fram_fu_44_ap_return");
    sc_trace(mVcdFile, grp_enqueue_dequeue_fram_fu_44_ap_start_reg, "grp_enqueue_dequeue_fram_fu_44_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, trunc_ln368_fu_79_p1, "trunc_ln368_fu_79_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

start_tx::~start_tx() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_enqueue_dequeue_fram_fu_44;
}

void start_tx::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv1_1;
}

void start_tx::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_enqueue_dequeue_fram_fu_44_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            grp_enqueue_dequeue_fram_fu_44_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_enqueue_dequeue_fram_fu_44_ap_ready.read())) {
            grp_enqueue_dequeue_fram_fu_44_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        add_ln368_reg_90 = add_ln368_fu_83_p2.read();
    }
}

void start_tx::thread_add_ln368_fu_83_p2() {
    add_ln368_fu_83_p2 = (!ap_const_lv2_3.is_01() || !trunc_ln368_fu_79_p1.read().is_01())? sc_lv<2>(): (sc_bigint<2>(ap_const_lv2_3) + sc_biguint<2>(trunc_ln368_fu_79_p1.read()));
}

void start_tx::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void start_tx::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void start_tx::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(grp_enqueue_dequeue_fram_fu_44_ap_done.read(), ap_const_logic_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void start_tx::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void start_tx::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_enqueue_dequeue_fram_fu_44_ap_done.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void start_tx::thread_available_spaces_be_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, grp_enqueue_dequeue_fram_fu_44_available_spaces_be_o_ap_vld.read()))) {
        available_spaces_be_o = grp_enqueue_dequeue_fram_fu_44_available_spaces_be_o.read();
    } else {
        available_spaces_be_o = available_spaces_be_i.read();
    }
}

void start_tx::thread_available_spaces_be_o_ap_vld() {
    available_spaces_be_o_ap_vld = grp_enqueue_dequeue_fram_fu_44_available_spaces_be_o_ap_vld.read();
}

void start_tx::thread_available_spaces_bk_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, grp_enqueue_dequeue_fram_fu_44_available_spaces_bk_o_ap_vld.read()))) {
        available_spaces_bk_o = grp_enqueue_dequeue_fram_fu_44_available_spaces_bk_o.read();
    } else {
        available_spaces_bk_o = available_spaces_bk_i.read();
    }
}

void start_tx::thread_available_spaces_bk_o_ap_vld() {
    available_spaces_bk_o_ap_vld = grp_enqueue_dequeue_fram_fu_44_available_spaces_bk_o_ap_vld.read();
}

void start_tx::thread_available_spaces_vi_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, grp_enqueue_dequeue_fram_fu_44_available_spaces_vi_o_ap_vld.read()))) {
        available_spaces_vi_o = grp_enqueue_dequeue_fram_fu_44_available_spaces_vi_o.read();
    } else {
        available_spaces_vi_o = available_spaces_vi_i.read();
    }
}

void start_tx::thread_available_spaces_vi_o_ap_vld() {
    available_spaces_vi_o_ap_vld = grp_enqueue_dequeue_fram_fu_44_available_spaces_vi_o_ap_vld.read();
}

void start_tx::thread_available_spaces_vo_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, grp_enqueue_dequeue_fram_fu_44_available_spaces_vo_o_ap_vld.read()))) {
        available_spaces_vo_o = grp_enqueue_dequeue_fram_fu_44_available_spaces_vo_o.read();
    } else {
        available_spaces_vo_o = available_spaces_vo_i.read();
    }
}

void start_tx::thread_available_spaces_vo_o_ap_vld() {
    available_spaces_vo_o_ap_vld = grp_enqueue_dequeue_fram_fu_44_available_spaces_vo_o_ap_vld.read();
}

void start_tx::thread_edca_queues_address0() {
    edca_queues_address0 = grp_enqueue_dequeue_fram_fu_44_edca_queues_address0.read();
}

void start_tx::thread_edca_queues_ce0() {
    edca_queues_ce0 = grp_enqueue_dequeue_fram_fu_44_edca_queues_ce0.read();
}

void start_tx::thread_edca_queues_d0() {
    edca_queues_d0 = grp_enqueue_dequeue_fram_fu_44_edca_queues_d0.read();
}

void start_tx::thread_edca_queues_we0() {
    edca_queues_we0 = grp_enqueue_dequeue_fram_fu_44_edca_queues_we0.read();
}

void start_tx::thread_grp_enqueue_dequeue_fram_fu_44_ap_start() {
    grp_enqueue_dequeue_fram_fu_44_ap_start = grp_enqueue_dequeue_fram_fu_44_ap_start_reg.read();
}

void start_tx::thread_read_pointer_be_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, grp_enqueue_dequeue_fram_fu_44_read_pointer_be_o_ap_vld.read()))) {
        read_pointer_be_o = grp_enqueue_dequeue_fram_fu_44_read_pointer_be_o.read();
    } else {
        read_pointer_be_o = read_pointer_be_i.read();
    }
}

void start_tx::thread_read_pointer_be_o_ap_vld() {
    read_pointer_be_o_ap_vld = grp_enqueue_dequeue_fram_fu_44_read_pointer_be_o_ap_vld.read();
}

void start_tx::thread_read_pointer_bk_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, grp_enqueue_dequeue_fram_fu_44_read_pointer_bk_o_ap_vld.read()))) {
        read_pointer_bk_o = grp_enqueue_dequeue_fram_fu_44_read_pointer_bk_o.read();
    } else {
        read_pointer_bk_o = read_pointer_bk_i.read();
    }
}

void start_tx::thread_read_pointer_bk_o_ap_vld() {
    read_pointer_bk_o_ap_vld = grp_enqueue_dequeue_fram_fu_44_read_pointer_bk_o_ap_vld.read();
}

void start_tx::thread_read_pointer_vi_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, grp_enqueue_dequeue_fram_fu_44_read_pointer_vi_o_ap_vld.read()))) {
        read_pointer_vi_o = grp_enqueue_dequeue_fram_fu_44_read_pointer_vi_o.read();
    } else {
        read_pointer_vi_o = read_pointer_vi_i.read();
    }
}

void start_tx::thread_read_pointer_vi_o_ap_vld() {
    read_pointer_vi_o_ap_vld = grp_enqueue_dequeue_fram_fu_44_read_pointer_vi_o_ap_vld.read();
}

void start_tx::thread_read_pointer_vo_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, grp_enqueue_dequeue_fram_fu_44_read_pointer_vo_o_ap_vld.read()))) {
        read_pointer_vo_o = grp_enqueue_dequeue_fram_fu_44_read_pointer_vo_o.read();
    } else {
        read_pointer_vo_o = read_pointer_vo_i.read();
    }
}

void start_tx::thread_read_pointer_vo_o_ap_vld() {
    read_pointer_vo_o_ap_vld = grp_enqueue_dequeue_fram_fu_44_read_pointer_vo_o_ap_vld.read();
}

void start_tx::thread_trunc_ln368_fu_79_p1() {
    trunc_ln368_fu_79_p1 = current_txop_holder.read().range(2-1, 0);
}

void start_tx::thread_tx_frame_address0() {
    tx_frame_address0 = grp_enqueue_dequeue_fram_fu_44_inout_frame_address0.read();
}

void start_tx::thread_tx_frame_ce0() {
    tx_frame_ce0 = grp_enqueue_dequeue_fram_fu_44_inout_frame_ce0.read();
}

void start_tx::thread_tx_frame_d0() {
    tx_frame_d0 = grp_enqueue_dequeue_fram_fu_44_inout_frame_d0.read();
}

void start_tx::thread_tx_frame_we0() {
    tx_frame_we0 = grp_enqueue_dequeue_fram_fu_44_inout_frame_we0.read();
}

void start_tx::thread_write_pointer_be_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, grp_enqueue_dequeue_fram_fu_44_write_pointer_be_o_ap_vld.read()))) {
        write_pointer_be_o = grp_enqueue_dequeue_fram_fu_44_write_pointer_be_o.read();
    } else {
        write_pointer_be_o = write_pointer_be_i.read();
    }
}

void start_tx::thread_write_pointer_be_o_ap_vld() {
    write_pointer_be_o_ap_vld = grp_enqueue_dequeue_fram_fu_44_write_pointer_be_o_ap_vld.read();
}

void start_tx::thread_write_pointer_bk_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, grp_enqueue_dequeue_fram_fu_44_write_pointer_bk_o_ap_vld.read()))) {
        write_pointer_bk_o = grp_enqueue_dequeue_fram_fu_44_write_pointer_bk_o.read();
    } else {
        write_pointer_bk_o = write_pointer_bk_i.read();
    }
}

void start_tx::thread_write_pointer_bk_o_ap_vld() {
    write_pointer_bk_o_ap_vld = grp_enqueue_dequeue_fram_fu_44_write_pointer_bk_o_ap_vld.read();
}

void start_tx::thread_write_pointer_vi_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, grp_enqueue_dequeue_fram_fu_44_write_pointer_vi_o_ap_vld.read()))) {
        write_pointer_vi_o = grp_enqueue_dequeue_fram_fu_44_write_pointer_vi_o.read();
    } else {
        write_pointer_vi_o = write_pointer_vi_i.read();
    }
}

void start_tx::thread_write_pointer_vi_o_ap_vld() {
    write_pointer_vi_o_ap_vld = grp_enqueue_dequeue_fram_fu_44_write_pointer_vi_o_ap_vld.read();
}

void start_tx::thread_write_pointer_vo_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, grp_enqueue_dequeue_fram_fu_44_write_pointer_vo_o_ap_vld.read()))) {
        write_pointer_vo_o = grp_enqueue_dequeue_fram_fu_44_write_pointer_vo_o.read();
    } else {
        write_pointer_vo_o = write_pointer_vo_i.read();
    }
}

void start_tx::thread_write_pointer_vo_o_ap_vld() {
    write_pointer_vo_o_ap_vld = grp_enqueue_dequeue_fram_fu_44_write_pointer_vo_o_ap_vld.read();
}

void start_tx::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(grp_enqueue_dequeue_fram_fu_44_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        default : 
            ap_NS_fsm = "XX";
            break;
    }
}

}

