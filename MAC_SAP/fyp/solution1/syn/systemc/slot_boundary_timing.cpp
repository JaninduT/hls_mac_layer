// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "slot_boundary_timing.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic slot_boundary_timing::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic slot_boundary_timing::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<9> slot_boundary_timing::ap_ST_fsm_state1 = "1";
const sc_lv<9> slot_boundary_timing::ap_ST_fsm_state2 = "10";
const sc_lv<9> slot_boundary_timing::ap_ST_fsm_state3 = "100";
const sc_lv<9> slot_boundary_timing::ap_ST_fsm_state4 = "1000";
const sc_lv<9> slot_boundary_timing::ap_ST_fsm_state5 = "10000";
const sc_lv<9> slot_boundary_timing::ap_ST_fsm_state6 = "100000";
const sc_lv<9> slot_boundary_timing::ap_ST_fsm_state7 = "1000000";
const sc_lv<9> slot_boundary_timing::ap_ST_fsm_state8 = "10000000";
const sc_lv<9> slot_boundary_timing::ap_ST_fsm_state9 = "100000000";
const bool slot_boundary_timing::ap_const_boolean_1 = true;
const sc_lv<32> slot_boundary_timing::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> slot_boundary_timing::ap_const_lv1_0 = "0";
const sc_lv<32> slot_boundary_timing::ap_const_lv32_1 = "1";
const sc_lv<32> slot_boundary_timing::ap_const_lv32_2 = "10";
const sc_lv<32> slot_boundary_timing::ap_const_lv32_3 = "11";
const sc_lv<32> slot_boundary_timing::ap_const_lv32_6 = "110";
const sc_lv<32> slot_boundary_timing::ap_const_lv32_7 = "111";
const sc_lv<32> slot_boundary_timing::ap_const_lv32_5 = "101";
const sc_lv<1> slot_boundary_timing::ap_const_lv1_1 = "1";
const bool slot_boundary_timing::ap_const_boolean_0 = false;
const sc_lv<32> slot_boundary_timing::ap_const_lv32_4 = "100";
const sc_lv<32> slot_boundary_timing::ap_const_lv32_8 = "1000";
const sc_lv<3> slot_boundary_timing::ap_const_lv3_0 = "000";
const sc_lv<3> slot_boundary_timing::ap_const_lv3_1 = "1";
const sc_lv<3> slot_boundary_timing::ap_const_lv3_2 = "10";
const sc_lv<3> slot_boundary_timing::ap_const_lv3_3 = "11";
const sc_lv<3> slot_boundary_timing::ap_const_lv3_4 = "100";

slot_boundary_timing::slot_boundary_timing(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_start_timer_fu_53 = new start_timer("grp_start_timer_fu_53");
    grp_start_timer_fu_53->ap_clk(ap_clk);
    grp_start_timer_fu_53->ap_rst(ap_rst);
    grp_start_timer_fu_53->ap_start(grp_start_timer_fu_53_ap_start);
    grp_start_timer_fu_53->ap_done(grp_start_timer_fu_53_ap_done);
    grp_start_timer_fu_53->ap_idle(grp_start_timer_fu_53_ap_idle);
    grp_start_timer_fu_53->ap_ready(grp_start_timer_fu_53_ap_ready);
    grp_start_timer_fu_53->count_idle(grp_start_timer_fu_53_count_idle);
    grp_start_timer_fu_53->medium_state(medium_state);
    grp_start_timer_fu_53->ap_return(grp_start_timer_fu_53_ap_return);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state6_on_subcall_done);
    sensitive << ( grp_start_timer_fu_53_ap_done );
    sensitive << ( ap_predicate_op33_call_state6 );
    sensitive << ( ap_predicate_op35_call_state6 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_block_state6_on_subcall_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_idle_waiting_write_a_phi_fu_32_p16);
    sensitive << ( icmp_ln187_reg_94 );
    sensitive << ( icmp_ln203_reg_98 );
    sensitive << ( icmp_ln213_reg_102 );
    sensitive << ( grp_start_timer_fu_53_ap_return );
    sensitive << ( sifs_timeout_1_reg_122 );
    sensitive << ( sifs_timeout_reg_131 );
    sensitive << ( idle_waiting_write_a_reg_28 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_predicate_op33_call_state6);
    sensitive << ( icmp_ln187_reg_94 );
    sensitive << ( icmp_ln203_reg_98 );
    sensitive << ( icmp_ln213_reg_102 );
    sensitive << ( sifs_timeout_1_reg_122 );

    SC_METHOD(thread_ap_predicate_op35_call_state6);
    sensitive << ( icmp_ln187_reg_94 );
    sensitive << ( sifs_timeout_reg_131 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_block_state6_on_subcall_done );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_phi_mux_idle_waiting_write_a_phi_fu_32_p16 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_block_state6_on_subcall_done );
    sensitive << ( ap_return_preg );

    SC_METHOD(thread_grp_start_timer_fu_53_ap_start);
    sensitive << ( grp_start_timer_fu_53_ap_start_reg );

    SC_METHOD(thread_grp_start_timer_fu_53_count_idle);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_predicate_op33_call_state6 );
    sensitive << ( ap_predicate_op35_call_state6 );

    SC_METHOD(thread_icmp_ln187_fu_64_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( timing_mode );

    SC_METHOD(thread_icmp_ln203_fu_70_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( timing_mode );
    sensitive << ( icmp_ln187_fu_64_p2 );

    SC_METHOD(thread_icmp_ln213_fu_76_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( timing_mode );
    sensitive << ( icmp_ln187_fu_64_p2 );
    sensitive << ( icmp_ln203_fu_70_p2 );

    SC_METHOD(thread_icmp_ln229_fu_82_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( timing_mode );
    sensitive << ( icmp_ln187_fu_64_p2 );
    sensitive << ( icmp_ln203_fu_70_p2 );
    sensitive << ( icmp_ln213_fu_76_p2 );

    SC_METHOD(thread_icmp_ln239_fu_88_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( timing_mode );
    sensitive << ( icmp_ln187_fu_64_p2 );
    sensitive << ( icmp_ln203_fu_70_p2 );
    sensitive << ( icmp_ln213_fu_76_p2 );
    sensitive << ( icmp_ln229_fu_82_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln187_fu_64_p2 );
    sensitive << ( icmp_ln203_fu_70_p2 );
    sensitive << ( icmp_ln213_fu_76_p2 );
    sensitive << ( grp_start_timer_fu_53_ap_return );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_start_timer_fu_53_ap_done );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln229_fu_82_p2 );
    sensitive << ( icmp_ln239_fu_88_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_block_state6_on_subcall_done );

    ap_CS_fsm = "000000001";
    grp_start_timer_fu_53_ap_start_reg = SC_LOGIC_0;
    ap_return_preg = "0";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "slot_boundary_timing_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, timing_mode, "(port)timing_mode");
    sc_trace(mVcdFile, medium_state, "(port)medium_state");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, icmp_ln187_fu_64_p2, "icmp_ln187_fu_64_p2");
    sc_trace(mVcdFile, icmp_ln187_reg_94, "icmp_ln187_reg_94");
    sc_trace(mVcdFile, icmp_ln203_fu_70_p2, "icmp_ln203_fu_70_p2");
    sc_trace(mVcdFile, icmp_ln203_reg_98, "icmp_ln203_reg_98");
    sc_trace(mVcdFile, icmp_ln213_fu_76_p2, "icmp_ln213_fu_76_p2");
    sc_trace(mVcdFile, icmp_ln213_reg_102, "icmp_ln213_reg_102");
    sc_trace(mVcdFile, grp_start_timer_fu_53_ap_return, "grp_start_timer_fu_53_ap_return");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, grp_start_timer_fu_53_ap_ready, "grp_start_timer_fu_53_ap_ready");
    sc_trace(mVcdFile, grp_start_timer_fu_53_ap_done, "grp_start_timer_fu_53_ap_done");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, sifs_timeout_1_reg_122, "sifs_timeout_1_reg_122");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, sifs_timeout_reg_131, "sifs_timeout_reg_131");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, grp_start_timer_fu_53_ap_start, "grp_start_timer_fu_53_ap_start");
    sc_trace(mVcdFile, grp_start_timer_fu_53_ap_idle, "grp_start_timer_fu_53_ap_idle");
    sc_trace(mVcdFile, grp_start_timer_fu_53_count_idle, "grp_start_timer_fu_53_count_idle");
    sc_trace(mVcdFile, ap_phi_mux_idle_waiting_write_a_phi_fu_32_p16, "ap_phi_mux_idle_waiting_write_a_phi_fu_32_p16");
    sc_trace(mVcdFile, idle_waiting_write_a_reg_28, "idle_waiting_write_a_reg_28");
    sc_trace(mVcdFile, icmp_ln229_fu_82_p2, "icmp_ln229_fu_82_p2");
    sc_trace(mVcdFile, icmp_ln239_fu_88_p2, "icmp_ln239_fu_88_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_predicate_op33_call_state6, "ap_predicate_op33_call_state6");
    sc_trace(mVcdFile, ap_predicate_op35_call_state6, "ap_predicate_op35_call_state6");
    sc_trace(mVcdFile, ap_block_state6_on_subcall_done, "ap_block_state6_on_subcall_done");
    sc_trace(mVcdFile, grp_start_timer_fu_53_ap_start_reg, "grp_start_timer_fu_53_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

slot_boundary_timing::~slot_boundary_timing() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_start_timer_fu_53;
}

void slot_boundary_timing::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
             esl_seteq<1,1,1>(ap_block_state6_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_return_preg = ap_phi_mux_idle_waiting_write_a_phi_fu_32_p16.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_start_timer_fu_53_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
              esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
              esl_seteq<1,1,1>(icmp_ln187_fu_64_p2.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(icmp_ln203_fu_70_p2.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln213_fu_76_p2.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln229_fu_82_p2.read()) && 
              esl_seteq<1,1,1>(icmp_ln239_fu_88_p2.read(), ap_const_lv1_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
              esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
              esl_seteq<1,1,1>(icmp_ln187_fu_64_p2.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(icmp_ln203_fu_70_p2.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln213_fu_76_p2.read()) && 
              esl_seteq<1,1,1>(icmp_ln229_fu_82_p2.read(), ap_const_lv1_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
              esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
              esl_seteq<1,1,1>(icmp_ln187_fu_64_p2.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(icmp_ln203_fu_70_p2.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(icmp_ln213_fu_76_p2.read(), ap_const_lv1_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
              esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
              esl_seteq<1,1,1>(icmp_ln187_fu_64_p2.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(icmp_ln203_fu_70_p2.read(), ap_const_lv1_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
              esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
              esl_seteq<1,1,1>(icmp_ln187_fu_64_p2.read(), ap_const_lv1_1)) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
            grp_start_timer_fu_53_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_start_timer_fu_53_ap_ready.read())) {
            grp_start_timer_fu_53_ap_start_reg = ap_const_logic_0;
        }
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(grp_start_timer_fu_53_ap_done.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(grp_start_timer_fu_53_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) || 
         (esl_seteq<1,1,1>(grp_start_timer_fu_53_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(icmp_ln187_reg_94.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(sifs_timeout_reg_131.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_block_state6_on_subcall_done.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(icmp_ln187_reg_94.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(icmp_ln203_reg_98.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(icmp_ln213_reg_102.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(sifs_timeout_1_reg_122.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_block_state6_on_subcall_done.read(), ap_const_boolean_0)))) {
        idle_waiting_write_a_reg_28 = grp_start_timer_fu_53_ap_return.read();
    } else if (((esl_seteq<1,1,1>(grp_start_timer_fu_53_ap_done.read(), ap_const_logic_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, grp_start_timer_fu_53_ap_return.read())) || 
                (esl_seteq<1,1,1>(grp_start_timer_fu_53_ap_done.read(), ap_const_logic_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, grp_start_timer_fu_53_ap_return.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                 esl_seteq<1,1,1>(icmp_ln187_fu_64_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(icmp_ln203_fu_70_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln213_fu_76_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln229_fu_82_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln239_fu_88_p2.read())))) {
        idle_waiting_write_a_reg_28 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        icmp_ln187_reg_94 = icmp_ln187_fu_64_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(icmp_ln187_fu_64_p2.read(), ap_const_lv1_0))) {
        icmp_ln203_reg_98 = icmp_ln203_fu_70_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(icmp_ln187_fu_64_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(icmp_ln203_fu_70_p2.read(), ap_const_lv1_0))) {
        icmp_ln213_reg_102 = icmp_ln213_fu_76_p2.read();
    }
    if ((esl_seteq<1,1,1>(grp_start_timer_fu_53_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        sifs_timeout_1_reg_122 = grp_start_timer_fu_53_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(grp_start_timer_fu_53_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        sifs_timeout_reg_131 = grp_start_timer_fu_53_ap_return.read();
    }
}

void slot_boundary_timing::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void slot_boundary_timing::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void slot_boundary_timing::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void slot_boundary_timing::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void slot_boundary_timing::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void slot_boundary_timing::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void slot_boundary_timing::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void slot_boundary_timing::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void slot_boundary_timing::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void slot_boundary_timing::thread_ap_block_state6_on_subcall_done() {
    ap_block_state6_on_subcall_done = ((esl_seteq<1,1,1>(ap_const_logic_0, grp_start_timer_fu_53_ap_done.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op33_call_state6.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, grp_start_timer_fu_53_ap_done.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op35_call_state6.read())));
}

void slot_boundary_timing::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(ap_block_state6_on_subcall_done.read(), ap_const_boolean_0)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void slot_boundary_timing::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void slot_boundary_timing::thread_ap_phi_mux_idle_waiting_write_a_phi_fu_32_p16() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(icmp_ln187_reg_94.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(sifs_timeout_reg_131.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(icmp_ln187_reg_94.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(icmp_ln203_reg_98.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(icmp_ln213_reg_102.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(sifs_timeout_1_reg_122.read(), ap_const_lv1_1)))) {
        ap_phi_mux_idle_waiting_write_a_phi_fu_32_p16 = grp_start_timer_fu_53_ap_return.read();
    } else {
        ap_phi_mux_idle_waiting_write_a_phi_fu_32_p16 = idle_waiting_write_a_reg_28.read();
    }
}

void slot_boundary_timing::thread_ap_predicate_op33_call_state6() {
    ap_predicate_op33_call_state6 = (esl_seteq<1,1,1>(icmp_ln187_reg_94.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(icmp_ln203_reg_98.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(icmp_ln213_reg_102.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(sifs_timeout_1_reg_122.read(), ap_const_lv1_1));
}

void slot_boundary_timing::thread_ap_predicate_op35_call_state6() {
    ap_predicate_op35_call_state6 = (esl_seteq<1,1,1>(icmp_ln187_reg_94.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(sifs_timeout_reg_131.read(), ap_const_lv1_1));
}

void slot_boundary_timing::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_block_state6_on_subcall_done.read(), ap_const_boolean_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void slot_boundary_timing::thread_ap_return() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_block_state6_on_subcall_done.read(), ap_const_boolean_0))) {
        ap_return = ap_phi_mux_idle_waiting_write_a_phi_fu_32_p16.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void slot_boundary_timing::thread_grp_start_timer_fu_53_ap_start() {
    grp_start_timer_fu_53_ap_start = grp_start_timer_fu_53_ap_start_reg.read();
}

void slot_boundary_timing::thread_grp_start_timer_fu_53_count_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        grp_start_timer_fu_53_count_idle = ap_const_lv1_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                 esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op33_call_state6.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                 esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op35_call_state6.read())))) {
        grp_start_timer_fu_53_count_idle = ap_const_lv1_1;
    } else {
        grp_start_timer_fu_53_count_idle = "X";
    }
}

void slot_boundary_timing::thread_icmp_ln187_fu_64_p2() {
    icmp_ln187_fu_64_p2 = (!timing_mode.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(timing_mode.read() == ap_const_lv3_0);
}

void slot_boundary_timing::thread_icmp_ln203_fu_70_p2() {
    icmp_ln203_fu_70_p2 = (!timing_mode.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<1>(): sc_lv<1>(timing_mode.read() == ap_const_lv3_1);
}

void slot_boundary_timing::thread_icmp_ln213_fu_76_p2() {
    icmp_ln213_fu_76_p2 = (!timing_mode.read().is_01() || !ap_const_lv3_2.is_01())? sc_lv<1>(): sc_lv<1>(timing_mode.read() == ap_const_lv3_2);
}

void slot_boundary_timing::thread_icmp_ln229_fu_82_p2() {
    icmp_ln229_fu_82_p2 = (!timing_mode.read().is_01() || !ap_const_lv3_3.is_01())? sc_lv<1>(): sc_lv<1>(timing_mode.read() == ap_const_lv3_3);
}

void slot_boundary_timing::thread_icmp_ln239_fu_88_p2() {
    icmp_ln239_fu_88_p2 = (!timing_mode.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(timing_mode.read() == ap_const_lv3_4);
}

void slot_boundary_timing::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(icmp_ln187_fu_64_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(icmp_ln203_fu_70_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln213_fu_76_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln229_fu_82_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln239_fu_88_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(icmp_ln187_fu_64_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(icmp_ln203_fu_70_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln213_fu_76_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln229_fu_82_p2.read()) && esl_seteq<1,1,1>(icmp_ln239_fu_88_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(icmp_ln187_fu_64_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(icmp_ln203_fu_70_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln213_fu_76_p2.read()) && esl_seteq<1,1,1>(icmp_ln229_fu_82_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(icmp_ln187_fu_64_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(icmp_ln203_fu_70_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(icmp_ln213_fu_76_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(icmp_ln187_fu_64_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(icmp_ln203_fu_70_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(icmp_ln187_fu_64_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(grp_start_timer_fu_53_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(grp_start_timer_fu_53_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(grp_start_timer_fu_53_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, grp_start_timer_fu_53_ap_return.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else if ((esl_seteq<1,1,1>(grp_start_timer_fu_53_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(grp_start_timer_fu_53_ap_return.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_block_state6_on_subcall_done.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(grp_start_timer_fu_53_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(grp_start_timer_fu_53_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(grp_start_timer_fu_53_ap_return.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else if ((esl_seteq<1,1,1>(grp_start_timer_fu_53_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, grp_start_timer_fu_53_ap_return.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<9>) ("XXXXXXXXX");
            break;
    }
}

}

