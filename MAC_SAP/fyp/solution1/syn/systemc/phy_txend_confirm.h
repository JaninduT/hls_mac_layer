// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _phy_txend_confirm_HH_
#define _phy_txend_confirm_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "start_tx.h"
#include "backoff_vo.h"
#include "start_backoff_vi.h"
#include "start_backoff_be.h"
#include "start_backoff_bk.h"
#include "slot_boundary_timing.h"

namespace ap_rtl {

struct phy_txend_confirm : public sc_module {
    // Port declarations 80
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<1> > medium_state;
    sc_in< sc_lv<3> > current_txop_holder_i;
    sc_out< sc_lv<3> > current_txop_holder_o;
    sc_out< sc_logic > current_txop_holder_o_ap_vld;
    sc_out< sc_lv<7> > frame_to_transfer_address0;
    sc_out< sc_logic > frame_to_transfer_ce0;
    sc_out< sc_logic > frame_to_transfer_we0;
    sc_out< sc_lv<8> > frame_to_transfer_d0;
    sc_in< sc_lv<8> > frame_to_transfer_q0;
    sc_in< sc_lv<3> > available_spaces_vo_i;
    sc_out< sc_lv<3> > available_spaces_vo_o;
    sc_out< sc_logic > available_spaces_vo_o_ap_vld;
    sc_in< sc_lv<10> > vo_backoff_counter_i;
    sc_out< sc_lv<10> > vo_backoff_counter_o;
    sc_out< sc_logic > vo_backoff_counter_o_ap_vld;
    sc_in< sc_lv<32> > rand_state_i;
    sc_out< sc_lv<32> > rand_state_o;
    sc_out< sc_logic > rand_state_o_ap_vld;
    sc_in< sc_lv<3> > available_spaces_vi_i;
    sc_out< sc_lv<3> > available_spaces_vi_o;
    sc_out< sc_logic > available_spaces_vi_o_ap_vld;
    sc_in< sc_lv<10> > vi_backoff_counter_i;
    sc_out< sc_lv<10> > vi_backoff_counter_o;
    sc_out< sc_logic > vi_backoff_counter_o_ap_vld;
    sc_in< sc_lv<10> > CW_vi_i;
    sc_out< sc_lv<10> > CW_vi_o;
    sc_out< sc_logic > CW_vi_o_ap_vld;
    sc_in< sc_lv<3> > available_spaces_be_i;
    sc_out< sc_lv<3> > available_spaces_be_o;
    sc_out< sc_logic > available_spaces_be_o_ap_vld;
    sc_in< sc_lv<10> > be_backoff_counter_i;
    sc_out< sc_lv<10> > be_backoff_counter_o;
    sc_out< sc_logic > be_backoff_counter_o_ap_vld;
    sc_in< sc_lv<10> > CW_be_i;
    sc_out< sc_lv<10> > CW_be_o;
    sc_out< sc_logic > CW_be_o_ap_vld;
    sc_in< sc_lv<3> > available_spaces_bk_i;
    sc_out< sc_lv<3> > available_spaces_bk_o;
    sc_out< sc_logic > available_spaces_bk_o_ap_vld;
    sc_in< sc_lv<10> > bk_backoff_counter_i;
    sc_out< sc_lv<10> > bk_backoff_counter_o;
    sc_out< sc_logic > bk_backoff_counter_o_ap_vld;
    sc_in< sc_lv<10> > CW_bk_i;
    sc_out< sc_lv<10> > CW_bk_o;
    sc_out< sc_logic > CW_bk_o_ap_vld;
    sc_in< sc_lv<2> > write_pointer_bk_i;
    sc_out< sc_lv<2> > write_pointer_bk_o;
    sc_out< sc_logic > write_pointer_bk_o_ap_vld;
    sc_in< sc_lv<2> > write_pointer_be_i;
    sc_out< sc_lv<2> > write_pointer_be_o;
    sc_out< sc_logic > write_pointer_be_o_ap_vld;
    sc_in< sc_lv<2> > write_pointer_vi_i;
    sc_out< sc_lv<2> > write_pointer_vi_o;
    sc_out< sc_logic > write_pointer_vi_o_ap_vld;
    sc_in< sc_lv<2> > write_pointer_vo_i;
    sc_out< sc_lv<2> > write_pointer_vo_o;
    sc_out< sc_logic > write_pointer_vo_o_ap_vld;
    sc_out< sc_lv<11> > edca_queues_address0;
    sc_out< sc_logic > edca_queues_ce0;
    sc_out< sc_logic > edca_queues_we0;
    sc_out< sc_lv<8> > edca_queues_d0;
    sc_in< sc_lv<8> > edca_queues_q0;
    sc_in< sc_lv<2> > read_pointer_bk_i;
    sc_out< sc_lv<2> > read_pointer_bk_o;
    sc_out< sc_logic > read_pointer_bk_o_ap_vld;
    sc_in< sc_lv<2> > read_pointer_be_i;
    sc_out< sc_lv<2> > read_pointer_be_o;
    sc_out< sc_logic > read_pointer_be_o_ap_vld;
    sc_in< sc_lv<2> > read_pointer_vi_i;
    sc_out< sc_lv<2> > read_pointer_vi_o;
    sc_out< sc_logic > read_pointer_vi_o_ap_vld;
    sc_in< sc_lv<2> > read_pointer_vo_i;
    sc_out< sc_lv<2> > read_pointer_vo_o;
    sc_out< sc_logic > read_pointer_vo_o_ap_vld;


    // Module declarations
    phy_txend_confirm(sc_module_name name);
    SC_HAS_PROCESS(phy_txend_confirm);

    ~phy_txend_confirm();

    sc_trace_file* mVcdFile;

    start_tx* grp_start_tx_fu_117;
    backoff_vo* grp_backoff_vo_fu_151;
    start_backoff_vi* grp_start_backoff_vi_fu_163;
    start_backoff_be* grp_start_backoff_be_fu_176;
    start_backoff_bk* grp_start_backoff_bk_fu_189;
    slot_boundary_timing* grp_slot_boundary_timing_fu_202;
    sc_signal< sc_lv<17> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > grp_slot_boundary_timing_fu_202_ap_return;
    sc_signal< sc_lv<1> > idle_waited_reg_341;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > grp_slot_boundary_timing_fu_202_ap_ready;
    sc_signal< sc_logic > grp_slot_boundary_timing_fu_202_ap_done;
    sc_signal< sc_lv<1> > tmp_fu_221_p3;
    sc_signal< sc_lv<1> > tmp_reg_346;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > icmp_ln268_fu_233_p2;
    sc_signal< sc_lv<1> > icmp_ln268_reg_350;
    sc_signal< sc_lv<1> > icmp_ln269_fu_251_p2;
    sc_signal< sc_lv<1> > icmp_ln269_reg_354;
    sc_signal< sc_lv<1> > tmp_2_fu_261_p3;
    sc_signal< sc_lv<1> > tmp_2_reg_358;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > grp_start_backoff_vi_fu_163_ap_ready;
    sc_signal< sc_logic > grp_start_backoff_vi_fu_163_ap_done;
    sc_signal< bool > ap_predicate_op39_call_state8;
    sc_signal< bool > ap_predicate_op41_call_state8;
    sc_signal< bool > ap_block_state8_on_subcall_done;
    sc_signal< sc_lv<1> > icmp_ln286_fu_273_p2;
    sc_signal< sc_lv<1> > icmp_ln286_reg_362;
    sc_signal< sc_lv<1> > icmp_ln287_fu_301_p2;
    sc_signal< sc_lv<1> > icmp_ln287_reg_366;
    sc_signal< sc_lv<1> > tmp_4_fu_311_p3;
    sc_signal< sc_lv<1> > tmp_4_reg_370;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > grp_start_backoff_be_fu_176_ap_ready;
    sc_signal< sc_logic > grp_start_backoff_be_fu_176_ap_done;
    sc_signal< bool > ap_predicate_op59_call_state11;
    sc_signal< bool > ap_predicate_op61_call_state11;
    sc_signal< bool > ap_block_state11_on_subcall_done;
    sc_signal< sc_lv<1> > icmp_ln304_fu_323_p2;
    sc_signal< sc_lv<1> > icmp_ln304_reg_374;
    sc_signal< sc_lv<1> > grp_fu_211_p2;
    sc_signal< sc_lv<1> > icmp_ln305_reg_378;
    sc_signal< sc_lv<3> > current_txop_holder_3_reg_382;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_logic > grp_start_backoff_bk_fu_189_ap_ready;
    sc_signal< sc_logic > grp_start_backoff_bk_fu_189_ap_done;
    sc_signal< bool > ap_predicate_op78_call_state14;
    sc_signal< bool > ap_predicate_op80_call_state14;
    sc_signal< bool > ap_block_state14_on_subcall_done;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_logic > grp_start_tx_fu_117_ap_start;
    sc_signal< sc_logic > grp_start_tx_fu_117_ap_done;
    sc_signal< sc_logic > grp_start_tx_fu_117_ap_idle;
    sc_signal< sc_logic > grp_start_tx_fu_117_ap_ready;
    sc_signal< sc_lv<7> > grp_start_tx_fu_117_tx_frame_address0;
    sc_signal< sc_logic > grp_start_tx_fu_117_tx_frame_ce0;
    sc_signal< sc_logic > grp_start_tx_fu_117_tx_frame_we0;
    sc_signal< sc_lv<8> > grp_start_tx_fu_117_tx_frame_d0;
    sc_signal< sc_lv<3> > grp_start_tx_fu_117_available_spaces_bk_o;
    sc_signal< sc_logic > grp_start_tx_fu_117_available_spaces_bk_o_ap_vld;
    sc_signal< sc_lv<2> > grp_start_tx_fu_117_write_pointer_bk_o;
    sc_signal< sc_logic > grp_start_tx_fu_117_write_pointer_bk_o_ap_vld;
    sc_signal< sc_lv<3> > grp_start_tx_fu_117_available_spaces_be_o;
    sc_signal< sc_logic > grp_start_tx_fu_117_available_spaces_be_o_ap_vld;
    sc_signal< sc_lv<2> > grp_start_tx_fu_117_write_pointer_be_o;
    sc_signal< sc_logic > grp_start_tx_fu_117_write_pointer_be_o_ap_vld;
    sc_signal< sc_lv<3> > grp_start_tx_fu_117_available_spaces_vi_o;
    sc_signal< sc_logic > grp_start_tx_fu_117_available_spaces_vi_o_ap_vld;
    sc_signal< sc_lv<2> > grp_start_tx_fu_117_write_pointer_vi_o;
    sc_signal< sc_logic > grp_start_tx_fu_117_write_pointer_vi_o_ap_vld;
    sc_signal< sc_lv<3> > grp_start_tx_fu_117_available_spaces_vo_o;
    sc_signal< sc_logic > grp_start_tx_fu_117_available_spaces_vo_o_ap_vld;
    sc_signal< sc_lv<2> > grp_start_tx_fu_117_write_pointer_vo_o;
    sc_signal< sc_logic > grp_start_tx_fu_117_write_pointer_vo_o_ap_vld;
    sc_signal< sc_lv<11> > grp_start_tx_fu_117_edca_queues_address0;
    sc_signal< sc_logic > grp_start_tx_fu_117_edca_queues_ce0;
    sc_signal< sc_logic > grp_start_tx_fu_117_edca_queues_we0;
    sc_signal< sc_lv<8> > grp_start_tx_fu_117_edca_queues_d0;
    sc_signal< sc_lv<2> > grp_start_tx_fu_117_read_pointer_bk_o;
    sc_signal< sc_logic > grp_start_tx_fu_117_read_pointer_bk_o_ap_vld;
    sc_signal< sc_lv<2> > grp_start_tx_fu_117_read_pointer_be_o;
    sc_signal< sc_logic > grp_start_tx_fu_117_read_pointer_be_o_ap_vld;
    sc_signal< sc_lv<2> > grp_start_tx_fu_117_read_pointer_vi_o;
    sc_signal< sc_logic > grp_start_tx_fu_117_read_pointer_vi_o_ap_vld;
    sc_signal< sc_lv<2> > grp_start_tx_fu_117_read_pointer_vo_o;
    sc_signal< sc_logic > grp_start_tx_fu_117_read_pointer_vo_o_ap_vld;
    sc_signal< sc_logic > grp_backoff_vo_fu_151_ap_start;
    sc_signal< sc_logic > grp_backoff_vo_fu_151_ap_done;
    sc_signal< sc_logic > grp_backoff_vo_fu_151_ap_idle;
    sc_signal< sc_logic > grp_backoff_vo_fu_151_ap_ready;
    sc_signal< sc_lv<3> > grp_backoff_vo_fu_151_current_txop_holder;
    sc_signal< sc_logic > grp_backoff_vo_fu_151_current_txop_holder_ap_vld;
    sc_signal< sc_lv<10> > grp_backoff_vo_fu_151_vo_backoff_counter_o;
    sc_signal< sc_logic > grp_backoff_vo_fu_151_vo_backoff_counter_o_ap_vld;
    sc_signal< sc_lv<32> > grp_backoff_vo_fu_151_rand_state_o;
    sc_signal< sc_logic > grp_backoff_vo_fu_151_rand_state_o_ap_vld;
    sc_signal< sc_logic > grp_start_backoff_vi_fu_163_ap_start;
    sc_signal< sc_logic > grp_start_backoff_vi_fu_163_ap_idle;
    sc_signal< sc_lv<1> > grp_start_backoff_vi_fu_163_invoke_reason;
    sc_signal< sc_lv<10> > grp_start_backoff_vi_fu_163_CW_vi_o;
    sc_signal< sc_logic > grp_start_backoff_vi_fu_163_CW_vi_o_ap_vld;
    sc_signal< sc_lv<32> > grp_start_backoff_vi_fu_163_rand_state_o;
    sc_signal< sc_logic > grp_start_backoff_vi_fu_163_rand_state_o_ap_vld;
    sc_signal< sc_lv<10> > grp_start_backoff_vi_fu_163_vi_backoff_counter;
    sc_signal< sc_logic > grp_start_backoff_vi_fu_163_vi_backoff_counter_ap_vld;
    sc_signal< sc_logic > grp_start_backoff_be_fu_176_ap_start;
    sc_signal< sc_logic > grp_start_backoff_be_fu_176_ap_idle;
    sc_signal< sc_lv<1> > grp_start_backoff_be_fu_176_invoke_reason;
    sc_signal< sc_lv<10> > grp_start_backoff_be_fu_176_CW_be_o;
    sc_signal< sc_logic > grp_start_backoff_be_fu_176_CW_be_o_ap_vld;
    sc_signal< sc_lv<32> > grp_start_backoff_be_fu_176_rand_state_o;
    sc_signal< sc_logic > grp_start_backoff_be_fu_176_rand_state_o_ap_vld;
    sc_signal< sc_lv<10> > grp_start_backoff_be_fu_176_be_backoff_counter;
    sc_signal< sc_logic > grp_start_backoff_be_fu_176_be_backoff_counter_ap_vld;
    sc_signal< sc_logic > grp_start_backoff_bk_fu_189_ap_start;
    sc_signal< sc_logic > grp_start_backoff_bk_fu_189_ap_idle;
    sc_signal< sc_lv<1> > grp_start_backoff_bk_fu_189_invoke_reason;
    sc_signal< sc_lv<10> > grp_start_backoff_bk_fu_189_CW_bk_o;
    sc_signal< sc_logic > grp_start_backoff_bk_fu_189_CW_bk_o_ap_vld;
    sc_signal< sc_lv<32> > grp_start_backoff_bk_fu_189_rand_state_o;
    sc_signal< sc_logic > grp_start_backoff_bk_fu_189_rand_state_o_ap_vld;
    sc_signal< sc_lv<10> > grp_start_backoff_bk_fu_189_bk_backoff_counter;
    sc_signal< sc_logic > grp_start_backoff_bk_fu_189_bk_backoff_counter_ap_vld;
    sc_signal< sc_logic > grp_slot_boundary_timing_fu_202_ap_start;
    sc_signal< sc_logic > grp_slot_boundary_timing_fu_202_ap_idle;
    sc_signal< sc_lv<3> > grp_slot_boundary_timing_fu_202_timing_mode;
    sc_signal< sc_lv<1> > ap_phi_mux_idle_waited_0_phi_fu_110_p4;
    sc_signal< sc_lv<1> > idle_waited_0_reg_107;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > grp_start_tx_fu_117_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_logic > grp_backoff_vo_fu_151_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > grp_start_backoff_vi_fu_163_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > grp_start_backoff_be_fu_176_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > grp_start_backoff_bk_fu_189_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_logic > grp_slot_boundary_timing_fu_202_ap_start_reg;
    sc_signal< bool > ap_block_state17_on_subcall_done;
    sc_signal< sc_lv<10> > add_ln278_fu_239_p2;
    sc_signal< sc_lv<10> > add_ln296_fu_279_p2;
    sc_signal< sc_lv<10> > add_ln314_fu_329_p2;
    sc_signal< sc_lv<2> > tmp_3_fu_291_p4;
    sc_signal< sc_lv<17> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<17> ap_ST_fsm_state1;
    static const sc_lv<17> ap_ST_fsm_state2;
    static const sc_lv<17> ap_ST_fsm_state3;
    static const sc_lv<17> ap_ST_fsm_state4;
    static const sc_lv<17> ap_ST_fsm_state5;
    static const sc_lv<17> ap_ST_fsm_state6;
    static const sc_lv<17> ap_ST_fsm_state7;
    static const sc_lv<17> ap_ST_fsm_state8;
    static const sc_lv<17> ap_ST_fsm_state9;
    static const sc_lv<17> ap_ST_fsm_state10;
    static const sc_lv<17> ap_ST_fsm_state11;
    static const sc_lv<17> ap_ST_fsm_state12;
    static const sc_lv<17> ap_ST_fsm_state13;
    static const sc_lv<17> ap_ST_fsm_state14;
    static const sc_lv<17> ap_ST_fsm_state15;
    static const sc_lv<17> ap_ST_fsm_state16;
    static const sc_lv<17> ap_ST_fsm_state17;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_7;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<10> ap_const_lv10_3FF;
    static const sc_lv<2> ap_const_lv2_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_CW_be_o();
    void thread_CW_be_o_ap_vld();
    void thread_CW_bk_o();
    void thread_CW_bk_o_ap_vld();
    void thread_CW_vi_o();
    void thread_CW_vi_o_ap_vld();
    void thread_add_ln278_fu_239_p2();
    void thread_add_ln296_fu_279_p2();
    void thread_add_ln314_fu_329_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state11_on_subcall_done();
    void thread_ap_block_state14_on_subcall_done();
    void thread_ap_block_state17_on_subcall_done();
    void thread_ap_block_state8_on_subcall_done();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_idle_waited_0_phi_fu_110_p4();
    void thread_ap_predicate_op39_call_state8();
    void thread_ap_predicate_op41_call_state8();
    void thread_ap_predicate_op59_call_state11();
    void thread_ap_predicate_op61_call_state11();
    void thread_ap_predicate_op78_call_state14();
    void thread_ap_predicate_op80_call_state14();
    void thread_ap_ready();
    void thread_available_spaces_be_o();
    void thread_available_spaces_be_o_ap_vld();
    void thread_available_spaces_bk_o();
    void thread_available_spaces_bk_o_ap_vld();
    void thread_available_spaces_vi_o();
    void thread_available_spaces_vi_o_ap_vld();
    void thread_available_spaces_vo_o();
    void thread_available_spaces_vo_o_ap_vld();
    void thread_be_backoff_counter_o();
    void thread_be_backoff_counter_o_ap_vld();
    void thread_bk_backoff_counter_o();
    void thread_bk_backoff_counter_o_ap_vld();
    void thread_current_txop_holder_o();
    void thread_current_txop_holder_o_ap_vld();
    void thread_edca_queues_address0();
    void thread_edca_queues_ce0();
    void thread_edca_queues_d0();
    void thread_edca_queues_we0();
    void thread_frame_to_transfer_address0();
    void thread_frame_to_transfer_ce0();
    void thread_frame_to_transfer_d0();
    void thread_frame_to_transfer_we0();
    void thread_grp_backoff_vo_fu_151_ap_start();
    void thread_grp_fu_211_p2();
    void thread_grp_slot_boundary_timing_fu_202_ap_start();
    void thread_grp_slot_boundary_timing_fu_202_timing_mode();
    void thread_grp_start_backoff_be_fu_176_ap_start();
    void thread_grp_start_backoff_be_fu_176_invoke_reason();
    void thread_grp_start_backoff_bk_fu_189_ap_start();
    void thread_grp_start_backoff_bk_fu_189_invoke_reason();
    void thread_grp_start_backoff_vi_fu_163_ap_start();
    void thread_grp_start_backoff_vi_fu_163_invoke_reason();
    void thread_grp_start_tx_fu_117_ap_start();
    void thread_icmp_ln268_fu_233_p2();
    void thread_icmp_ln269_fu_251_p2();
    void thread_icmp_ln286_fu_273_p2();
    void thread_icmp_ln287_fu_301_p2();
    void thread_icmp_ln304_fu_323_p2();
    void thread_rand_state_o();
    void thread_rand_state_o_ap_vld();
    void thread_read_pointer_be_o();
    void thread_read_pointer_be_o_ap_vld();
    void thread_read_pointer_bk_o();
    void thread_read_pointer_bk_o_ap_vld();
    void thread_read_pointer_vi_o();
    void thread_read_pointer_vi_o_ap_vld();
    void thread_read_pointer_vo_o();
    void thread_read_pointer_vo_o_ap_vld();
    void thread_tmp_2_fu_261_p3();
    void thread_tmp_3_fu_291_p4();
    void thread_tmp_4_fu_311_p3();
    void thread_tmp_fu_221_p3();
    void thread_vi_backoff_counter_o();
    void thread_vi_backoff_counter_o_ap_vld();
    void thread_vo_backoff_counter_o();
    void thread_vo_backoff_counter_o_ap_vld();
    void thread_write_pointer_be_o();
    void thread_write_pointer_be_o_ap_vld();
    void thread_write_pointer_bk_o();
    void thread_write_pointer_bk_o_ap_vld();
    void thread_write_pointer_vi_o();
    void thread_write_pointer_vi_o_ap_vld();
    void thread_write_pointer_vo_o();
    void thread_write_pointer_vo_o_ap_vld();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
