// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _enqueue_dequeue_fram_HH_
#define _enqueue_dequeue_fram_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "enqueue_dequeue_fbkb.h"

namespace ap_rtl {

struct enqueue_dequeue_fram : public sc_module {
    // Port declarations 11
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<2> > ac;
    sc_out< sc_lv<7> > inout_frame_address0;
    sc_out< sc_logic > inout_frame_ce0;
    sc_in< sc_lv<8> > inout_frame_q0;
    sc_out< sc_lv<3> > ap_return;


    // Module declarations
    enqueue_dequeue_fram(sc_module_name name);
    SC_HAS_PROCESS(enqueue_dequeue_fram);

    ~enqueue_dequeue_fram();

    sc_trace_file* mVcdFile;

    enqueue_dequeue_fbkb* edca_queues_U;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > available_spaces_bk;
    sc_signal< sc_lv<2> > write_pointer_bk;
    sc_signal< sc_lv<11> > edca_queues_address0;
    sc_signal< sc_logic > edca_queues_ce0;
    sc_signal< sc_logic > edca_queues_we0;
    sc_signal< sc_lv<3> > available_spaces_be;
    sc_signal< sc_lv<2> > write_pointer_be;
    sc_signal< sc_lv<3> > available_spaces_vi;
    sc_signal< sc_lv<2> > write_pointer_vi;
    sc_signal< sc_lv<3> > available_spaces_vo;
    sc_signal< sc_lv<2> > write_pointer_vo;
    sc_signal< sc_lv<3> > available_spaces_vo_s_reg_606;
    sc_signal< sc_lv<1> > icmp_ln52_fu_236_p2;
    sc_signal< sc_lv<1> > icmp_ln65_fu_242_p2;
    sc_signal< sc_lv<1> > icmp_ln78_fu_248_p2;
    sc_signal< sc_lv<1> > icmp_ln91_fu_254_p2;
    sc_signal< sc_lv<2> > write_pointer_vo_loa_reg_614;
    sc_signal< sc_lv<9> > mul_ln96_fu_278_p2;
    sc_signal< sc_lv<9> > mul_ln96_reg_619;
    sc_signal< sc_lv<1> > icmp_ln92_fu_264_p2;
    sc_signal< sc_lv<3> > available_spaces_vi_s_reg_624;
    sc_signal< sc_lv<2> > write_pointer_vi_loa_reg_632;
    sc_signal< sc_lv<9> > mul_ln83_fu_302_p2;
    sc_signal< sc_lv<9> > mul_ln83_reg_637;
    sc_signal< sc_lv<1> > icmp_ln79_fu_288_p2;
    sc_signal< sc_lv<3> > available_spaces_be_s_reg_642;
    sc_signal< sc_lv<2> > write_pointer_be_loa_reg_650;
    sc_signal< sc_lv<9> > mul_ln70_fu_326_p2;
    sc_signal< sc_lv<9> > mul_ln70_reg_655;
    sc_signal< sc_lv<1> > icmp_ln66_fu_312_p2;
    sc_signal< sc_lv<3> > available_spaces_bk_s_reg_660;
    sc_signal< sc_lv<2> > write_pointer_bk_loa_reg_668;
    sc_signal< sc_lv<9> > mul_ln57_fu_350_p2;
    sc_signal< sc_lv<9> > mul_ln57_reg_673;
    sc_signal< sc_lv<1> > icmp_ln53_fu_336_p2;
    sc_signal< sc_lv<7> > vo_fu_366_p2;
    sc_signal< sc_lv<7> > vo_reg_681;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln95_fu_360_p2;
    sc_signal< sc_lv<9> > add_ln96_fu_377_p2;
    sc_signal< sc_lv<9> > add_ln96_reg_691;
    sc_signal< sc_lv<7> > vi_fu_428_p2;
    sc_signal< sc_lv<7> > vi_reg_699;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln82_fu_422_p2;
    sc_signal< sc_lv<9> > add_ln83_fu_439_p2;
    sc_signal< sc_lv<9> > add_ln83_reg_709;
    sc_signal< sc_lv<7> > be_fu_490_p2;
    sc_signal< sc_lv<7> > be_reg_717;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > icmp_ln69_fu_484_p2;
    sc_signal< sc_lv<9> > add_ln70_fu_501_p2;
    sc_signal< sc_lv<9> > add_ln70_reg_727;
    sc_signal< sc_lv<7> > bk_fu_552_p2;
    sc_signal< sc_lv<7> > bk_reg_735;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > icmp_ln56_fu_546_p2;
    sc_signal< sc_lv<9> > add_ln57_fu_563_p2;
    sc_signal< sc_lv<9> > add_ln57_reg_745;
    sc_signal< sc_lv<7> > vo_0_reg_155;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<7> > vi_0_reg_166;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<7> > be_0_reg_177;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<7> > bk_0_reg_188;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<3> > p_0_reg_199;
    sc_signal< sc_lv<64> > zext_ln96_1_fu_372_p1;
    sc_signal< sc_lv<64> > zext_ln96_3_fu_413_p1;
    sc_signal< sc_lv<64> > zext_ln83_1_fu_434_p1;
    sc_signal< sc_lv<64> > zext_ln83_3_fu_475_p1;
    sc_signal< sc_lv<64> > zext_ln70_1_fu_496_p1;
    sc_signal< sc_lv<64> > zext_ln70_3_fu_537_p1;
    sc_signal< sc_lv<64> > zext_ln57_1_fu_558_p1;
    sc_signal< sc_lv<64> > zext_ln57_2_fu_590_p1;
    sc_signal< sc_lv<3> > add_ln63_fu_579_p2;
    sc_signal< sc_lv<2> > add_ln62_fu_568_p2;
    sc_signal< sc_lv<3> > add_ln76_fu_517_p2;
    sc_signal< sc_lv<2> > add_ln75_fu_506_p2;
    sc_signal< sc_lv<3> > add_ln89_fu_455_p2;
    sc_signal< sc_lv<2> > add_ln88_fu_444_p2;
    sc_signal< sc_lv<3> > add_ln102_fu_393_p2;
    sc_signal< sc_lv<2> > add_ln101_fu_382_p2;
    sc_signal< sc_lv<2> > mul_ln96_fu_278_p0;
    sc_signal< sc_lv<2> > mul_ln83_fu_302_p0;
    sc_signal< sc_lv<2> > mul_ln70_fu_326_p0;
    sc_signal< sc_lv<2> > mul_ln57_fu_350_p0;
    sc_signal< sc_lv<9> > zext_ln95_fu_356_p1;
    sc_signal< sc_lv<11> > zext_ln96_2_fu_404_p1;
    sc_signal< sc_lv<11> > add_ln96_1_fu_407_p2;
    sc_signal< sc_lv<9> > zext_ln82_fu_418_p1;
    sc_signal< sc_lv<11> > zext_ln83_2_fu_466_p1;
    sc_signal< sc_lv<11> > add_ln83_1_fu_469_p2;
    sc_signal< sc_lv<9> > zext_ln69_fu_480_p1;
    sc_signal< sc_lv<10> > zext_ln70_2_fu_528_p1;
    sc_signal< sc_lv<10> > add_ln70_1_fu_531_p2;
    sc_signal< sc_lv<9> > zext_ln56_fu_542_p1;
    sc_signal< sc_lv<3> > ap_return_preg;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    sc_signal< sc_lv<9> > mul_ln57_fu_350_p00;
    sc_signal< sc_lv<9> > mul_ln70_fu_326_p00;
    sc_signal< sc_lv<9> > mul_ln83_fu_302_p00;
    sc_signal< sc_lv<9> > mul_ln96_fu_278_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<9> ap_const_lv9_64;
    static const sc_lv<7> ap_const_lv7_64;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<11> ap_const_lv11_4B0;
    static const sc_lv<11> ap_const_lv11_320;
    static const sc_lv<10> ap_const_lv10_190;
    static const sc_lv<32> ap_const_lv32_9;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln101_fu_382_p2();
    void thread_add_ln102_fu_393_p2();
    void thread_add_ln57_fu_563_p2();
    void thread_add_ln62_fu_568_p2();
    void thread_add_ln63_fu_579_p2();
    void thread_add_ln70_1_fu_531_p2();
    void thread_add_ln70_fu_501_p2();
    void thread_add_ln75_fu_506_p2();
    void thread_add_ln76_fu_517_p2();
    void thread_add_ln83_1_fu_469_p2();
    void thread_add_ln83_fu_439_p2();
    void thread_add_ln88_fu_444_p2();
    void thread_add_ln89_fu_455_p2();
    void thread_add_ln96_1_fu_407_p2();
    void thread_add_ln96_fu_377_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_be_fu_490_p2();
    void thread_bk_fu_552_p2();
    void thread_edca_queues_address0();
    void thread_edca_queues_ce0();
    void thread_edca_queues_we0();
    void thread_icmp_ln52_fu_236_p2();
    void thread_icmp_ln53_fu_336_p2();
    void thread_icmp_ln56_fu_546_p2();
    void thread_icmp_ln65_fu_242_p2();
    void thread_icmp_ln66_fu_312_p2();
    void thread_icmp_ln69_fu_484_p2();
    void thread_icmp_ln78_fu_248_p2();
    void thread_icmp_ln79_fu_288_p2();
    void thread_icmp_ln82_fu_422_p2();
    void thread_icmp_ln91_fu_254_p2();
    void thread_icmp_ln92_fu_264_p2();
    void thread_icmp_ln95_fu_360_p2();
    void thread_inout_frame_address0();
    void thread_inout_frame_ce0();
    void thread_mul_ln57_fu_350_p0();
    void thread_mul_ln57_fu_350_p00();
    void thread_mul_ln57_fu_350_p2();
    void thread_mul_ln70_fu_326_p0();
    void thread_mul_ln70_fu_326_p00();
    void thread_mul_ln70_fu_326_p2();
    void thread_mul_ln83_fu_302_p0();
    void thread_mul_ln83_fu_302_p00();
    void thread_mul_ln83_fu_302_p2();
    void thread_mul_ln96_fu_278_p0();
    void thread_mul_ln96_fu_278_p00();
    void thread_mul_ln96_fu_278_p2();
    void thread_vi_fu_428_p2();
    void thread_vo_fu_366_p2();
    void thread_zext_ln56_fu_542_p1();
    void thread_zext_ln57_1_fu_558_p1();
    void thread_zext_ln57_2_fu_590_p1();
    void thread_zext_ln69_fu_480_p1();
    void thread_zext_ln70_1_fu_496_p1();
    void thread_zext_ln70_2_fu_528_p1();
    void thread_zext_ln70_3_fu_537_p1();
    void thread_zext_ln82_fu_418_p1();
    void thread_zext_ln83_1_fu_434_p1();
    void thread_zext_ln83_2_fu_466_p1();
    void thread_zext_ln83_3_fu_475_p1();
    void thread_zext_ln95_fu_356_p1();
    void thread_zext_ln96_1_fu_372_p1();
    void thread_zext_ln96_2_fu_404_p1();
    void thread_zext_ln96_3_fu_413_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
