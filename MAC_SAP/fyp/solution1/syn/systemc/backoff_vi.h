// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _backoff_vi_HH_
#define _backoff_vi_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct backoff_vi : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<3> > current_txop_holder_i;
    sc_out< sc_lv<3> > current_txop_holder_o;
    sc_out< sc_logic > current_txop_holder_o_ap_vld;


    // Module declarations
    backoff_vi(sc_module_name name);
    SC_HAS_PROCESS(backoff_vi);

    ~backoff_vi();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<10> > vi_backoff_counter;
    sc_signal< sc_lv<10> > add_ln221_fu_44_p2;
    sc_signal< sc_lv<1> > icmp_ln212_fu_38_p2;
    sc_signal< sc_lv<1> > icmp_ln213_fu_56_p2;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_state1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<10> ap_const_lv10_3FF;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln221_fu_44_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_current_txop_holder_o();
    void thread_current_txop_holder_o_ap_vld();
    void thread_icmp_ln212_fu_38_p2();
    void thread_icmp_ln213_fu_56_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
