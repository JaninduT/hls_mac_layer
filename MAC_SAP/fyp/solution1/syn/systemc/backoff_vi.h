// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _backoff_vi_HH_
#define _backoff_vi_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "backoff_vi_fmul_3bkb.h"
#include "backoff_vi_uitofpcud.h"
#include "backoff_vi_sitofpdEe.h"
#include "backoff_vi_mul_mueOg.h"

namespace ap_rtl {

struct backoff_vi : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<3> > current_txop_holder_i;
    sc_out< sc_lv<3> > current_txop_holder_o;
    sc_out< sc_logic > current_txop_holder_o_ap_vld;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    backoff_vi(sc_module_name name);
    SC_HAS_PROCESS(backoff_vi);

    ~backoff_vi();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    backoff_vi_fmul_3bkb<1,4,32,32,32>* backoff_vi_fmul_3bkb_U1;
    backoff_vi_uitofpcud<1,6,32,32>* backoff_vi_uitofpcud_U2;
    backoff_vi_sitofpdEe<1,6,32,32>* backoff_vi_sitofpdEe_U3;
    backoff_vi_mul_mueOg<1,1,17,17,32>* backoff_vi_mul_mueOg_U4;
    sc_signal< sc_lv<17> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<10> > vi_backoff_counter;
    sc_signal< sc_lv<10> > CW_vi;
    sc_signal< sc_lv<32> > rand_state;
    sc_signal< sc_lv<1> > icmp_ln219_fu_125_p2;
    sc_signal< sc_lv<1> > icmp_ln219_reg_412;
    sc_signal< sc_lv<1> > icmp_ln220_fu_143_p2;
    sc_signal< sc_lv<1> > icmp_ln220_reg_416;
    sc_signal< sc_lv<10> > or_ln284_fu_165_p2;
    sc_signal< sc_lv<1> > icmp_ln283_fu_153_p2;
    sc_signal< sc_lv<32> > low_1_fu_189_p2;
    sc_signal< sc_lv<32> > low_1_reg_433;
    sc_signal< sc_lv<32> > high_2_fu_405_p2;
    sc_signal< sc_lv<32> > high_2_reg_438;
    sc_signal< sc_lv<16> > trunc_ln_reg_443;
    sc_signal< sc_lv<32> > x_2_fu_265_p2;
    sc_signal< sc_lv<32> > x_2_reg_448;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > grp_fu_115_p1;
    sc_signal< sc_lv<32> > tmp_i_i_reg_458;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > grp_fu_118_p1;
    sc_signal< sc_lv<32> > tmp_i_reg_463;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<32> > grp_fu_110_p2;
    sc_signal< sc_lv<32> > tmp_4_i_i_reg_468;
    sc_signal< sc_lv<23> > tmp_V_1_fu_296_p1;
    sc_signal< sc_lv<23> > tmp_V_1_reg_473;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<9> > add_ln339_fu_304_p2;
    sc_signal< sc_lv<9> > add_ln339_reg_478;
    sc_signal< sc_lv<1> > isNeg_reg_483;
    sc_signal< sc_lv<8> > sub_ln1311_fu_318_p2;
    sc_signal< sc_lv<8> > sub_ln1311_reg_489;
    sc_signal< sc_lv<10> > empty_reg_100;
    sc_signal< sc_lv<10> > add_ln228_fu_131_p2;
    sc_signal< sc_lv<10> > select_ln1312_fu_392_p3;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<32> > grp_fu_110_p0;
    sc_signal< sc_lv<32> > grp_fu_110_p1;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > grp_fu_118_p0;
    sc_signal< sc_lv<10> > shl_ln284_fu_159_p2;
    sc_signal< sc_lv<15> > low_fu_181_p1;
    sc_signal< sc_lv<15> > low_1_fu_189_p0;
    sc_signal< sc_lv<17> > high_fu_195_p4;
    sc_signal< sc_lv<16> > trunc_ln9_fu_218_p1;
    sc_signal< sc_lv<16> > add_ln10_fu_225_p2;
    sc_signal< sc_lv<32> > zext_ln10_fu_221_p1;
    sc_signal< sc_lv<32> > zext_ln10_1_fu_230_p1;
    sc_signal< sc_lv<32> > x_fu_234_p2;
    sc_signal< sc_lv<32> > x_1_fu_240_p2;
    sc_signal< sc_lv<31> > trunc_ln11_fu_245_p1;
    sc_signal< sc_lv<1> > tmp_fu_253_p3;
    sc_signal< sc_lv<32> > zext_ln12_fu_249_p1;
    sc_signal< sc_lv<32> > zext_ln12_1_fu_261_p1;
    sc_signal< sc_lv<32> > p_Val2_s_fu_282_p1;
    sc_signal< sc_lv<8> > tmp_V_fu_286_p4;
    sc_signal< sc_lv<9> > zext_ln339_fu_300_p1;
    sc_signal< sc_lv<25> > mantissa_V_fu_324_p4;
    sc_signal< sc_lv<9> > sext_ln1311_fu_337_p1;
    sc_signal< sc_lv<9> > ush_fu_340_p3;
    sc_signal< sc_lv<32> > sext_ln1311_1_fu_346_p1;
    sc_signal< sc_lv<25> > sext_ln1311_2_fu_350_p1;
    sc_signal< sc_lv<63> > zext_ln682_fu_333_p1;
    sc_signal< sc_lv<63> > zext_ln1287_fu_354_p1;
    sc_signal< sc_lv<25> > r_V_fu_358_p2;
    sc_signal< sc_lv<1> > tmp_3_fu_370_p3;
    sc_signal< sc_lv<63> > r_V_1_fu_364_p2;
    sc_signal< sc_lv<10> > zext_ln662_fu_378_p1;
    sc_signal< sc_lv<10> > tmp_2_fu_382_p4;
    sc_signal< sc_lv<17> > high_2_fu_405_p0;
    sc_signal< sc_lv<17> > high_2_fu_405_p1;
    sc_signal< sc_lv<17> > ap_NS_fsm;
    sc_signal< sc_lv<32> > high_2_fu_405_p10;
    sc_signal< sc_lv<32> > low_1_fu_189_p00;
    sc_signal< bool > ap_condition_60;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<17> ap_ST_fsm_state1;
    static const sc_lv<17> ap_ST_fsm_state2;
    static const sc_lv<17> ap_ST_fsm_state3;
    static const sc_lv<17> ap_ST_fsm_state4;
    static const sc_lv<17> ap_ST_fsm_state5;
    static const sc_lv<17> ap_ST_fsm_state6;
    static const sc_lv<17> ap_ST_fsm_state7;
    static const sc_lv<17> ap_ST_fsm_state8;
    static const sc_lv<17> ap_ST_fsm_state9;
    static const sc_lv<17> ap_ST_fsm_state10;
    static const sc_lv<17> ap_ST_fsm_state11;
    static const sc_lv<17> ap_ST_fsm_state12;
    static const sc_lv<17> ap_ST_fsm_state13;
    static const sc_lv<17> ap_ST_fsm_state14;
    static const sc_lv<17> ap_ST_fsm_state15;
    static const sc_lv<17> ap_ST_fsm_state16;
    static const sc_lv<17> ap_ST_fsm_state17;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<32> ap_const_lv32_30000000;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<10> ap_const_lv10_3FF;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<32> ap_const_lv32_BC8F;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<16> ap_const_lv16_F;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<9> ap_const_lv9_181;
    static const sc_lv<8> ap_const_lv8_7F;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_21;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln10_fu_225_p2();
    void thread_add_ln228_fu_131_p2();
    void thread_add_ln339_fu_304_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_condition_60();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_current_txop_holder_o();
    void thread_current_txop_holder_o_ap_vld();
    void thread_grp_fu_110_p0();
    void thread_grp_fu_110_p1();
    void thread_grp_fu_118_p0();
    void thread_high_2_fu_405_p0();
    void thread_high_2_fu_405_p1();
    void thread_high_2_fu_405_p10();
    void thread_high_fu_195_p4();
    void thread_icmp_ln219_fu_125_p2();
    void thread_icmp_ln220_fu_143_p2();
    void thread_icmp_ln283_fu_153_p2();
    void thread_low_1_fu_189_p0();
    void thread_low_1_fu_189_p00();
    void thread_low_1_fu_189_p2();
    void thread_low_fu_181_p1();
    void thread_mantissa_V_fu_324_p4();
    void thread_or_ln284_fu_165_p2();
    void thread_p_Val2_s_fu_282_p1();
    void thread_r_V_1_fu_364_p2();
    void thread_r_V_fu_358_p2();
    void thread_select_ln1312_fu_392_p3();
    void thread_sext_ln1311_1_fu_346_p1();
    void thread_sext_ln1311_2_fu_350_p1();
    void thread_sext_ln1311_fu_337_p1();
    void thread_shl_ln284_fu_159_p2();
    void thread_sub_ln1311_fu_318_p2();
    void thread_tmp_2_fu_382_p4();
    void thread_tmp_3_fu_370_p3();
    void thread_tmp_V_1_fu_296_p1();
    void thread_tmp_V_fu_286_p4();
    void thread_tmp_fu_253_p3();
    void thread_trunc_ln11_fu_245_p1();
    void thread_trunc_ln9_fu_218_p1();
    void thread_ush_fu_340_p3();
    void thread_x_1_fu_240_p2();
    void thread_x_2_fu_265_p2();
    void thread_x_fu_234_p2();
    void thread_zext_ln10_1_fu_230_p1();
    void thread_zext_ln10_fu_221_p1();
    void thread_zext_ln1287_fu_354_p1();
    void thread_zext_ln12_1_fu_261_p1();
    void thread_zext_ln12_fu_249_p1();
    void thread_zext_ln339_fu_300_p1();
    void thread_zext_ln662_fu_378_p1();
    void thread_zext_ln682_fu_333_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
