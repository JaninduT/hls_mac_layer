<profile>

<section name = "Vivado HLS Report for 'initial_edca_process'" level="0">
<item name = "Date">Thu Nov 19 12:13:15 2020
</item>
<item name = "Version">2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)</item>
<item name = "Project">fyp</item>
<item name = "Solution">solution1</item>
<item name = "Product family">artix7</item>
<item name = "Target device">xc7a35t-cpg236-1</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="4">Clock, Target, Estimated, Uncertainty</keys>
<column name="ap_clk">10.00 ns, 8.017 ns, 1.25 ns</column>
</table>
</item>
</section>
</item>
<item name = "Latency">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="8">, min, max, min, max, min, max, Type</keys>
<column name="">?, ?, ?, ?, ?, ?, none</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="9">Instance, Module, min, max, min, max, min, max, Type</keys>
<column name="grp_start_tx_fu_119">start_tx, 2, 203, 20.000 ns, 2.030 us, 2, 203, none</column>
<column name="grp_backoff_vo_fu_153">backoff_vo, 1, 38, 10.000 ns, 0.380 us, 1, 38, none</column>
<column name="grp_start_backoff_vi_fu_165">start_backoff_vi, 38, 38, 0.380 us, 0.380 us, 38, 38, none</column>
<column name="grp_start_backoff_be_fu_178">start_backoff_be, 38, 38, 0.380 us, 0.380 us, 38, 38, none</column>
<column name="grp_start_backoff_bk_fu_191">start_backoff_bk, 38, 38, 0.380 us, 0.380 us, 38, 38, none</column>
<column name="grp_slot_boundary_timing_fu_204">slot_boundary_timing, ?, ?, ?, ?, ?, ?, none</column>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
<column name="- Loop 1">?, ?, ?, -, -, ?, no</column>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="6">Name, BRAM_18K, DSP48E, FF, LUT, URAM</keys>
<column name="DSP">-, -, -, -, -</column>
<column name="Expression">-, -, 0, 136, -</column>
<column name="FIFO">-, -, -, -, -</column>
<column name="Instance">-, 8, 2582, 4708, -</column>
<column name="Memory">-, -, -, -, -</column>
<column name="Multiplexer">-, -, -, 557, -</column>
<column name="Register">-, -, 37, -, -</column>
<specialColumn name="Available">100, 90, 41600, 20800, 0</specialColumn>
<specialColumn name="Utilization (%)">0, 8, 6, 25, 0</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="7">Instance, Module, BRAM_18K, DSP48E, FF, LUT, URAM</keys>
<column name="grp_backoff_vo_fu_153">backoff_vo, 0, 2, 559, 710, 0</column>
<column name="grp_slot_boundary_timing_fu_204">slot_boundary_timing, 0, 0, 59, 298, 0</column>
<column name="grp_start_backoff_be_fu_178">start_backoff_be, 0, 2, 567, 714, 0</column>
<column name="grp_start_backoff_bk_fu_191">start_backoff_bk, 0, 2, 567, 714, 0</column>
<column name="grp_start_backoff_vi_fu_165">start_backoff_vi, 0, 2, 567, 714, 0</column>
<column name="grp_start_tx_fu_119">start_tx, 0, 0, 263, 1558, 0</column>
</table>
</item>
<item name = "DSP48E"><table name="" hasTotal="0">
<keys size="3">Instance, Module, Expression</keys>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="10">Memory, Module, BRAM_18K, FF, LUT, URAM, Words, Bits, Banks, W*Bits*Banks</keys>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="8">Name, BRAM_18K, FF, LUT, URAM, Depth, Bits, Size:D*B</keys>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP48E, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
<column name="add_ln278_fu_241_p2">+, 0, 0, 17, 10, 2</column>
<column name="add_ln296_fu_281_p2">+, 0, 0, 17, 10, 2</column>
<column name="add_ln314_fu_331_p2">+, 0, 0, 17, 10, 2</column>
<column name="ap_block_state17_on_subcall_done">and, 0, 0, 2, 1, 1</column>
<column name="ap_predicate_op39_call_state8">and, 0, 0, 2, 1, 1</column>
<column name="ap_predicate_op41_call_state8">and, 0, 0, 2, 1, 1</column>
<column name="ap_predicate_op59_call_state11">and, 0, 0, 2, 1, 1</column>
<column name="ap_predicate_op61_call_state11">and, 0, 0, 2, 1, 1</column>
<column name="ap_predicate_op78_call_state14">and, 0, 0, 2, 1, 1</column>
<column name="ap_predicate_op80_call_state14">and, 0, 0, 2, 1, 1</column>
<column name="grp_fu_213_p2">icmp, 0, 0, 9, 3, 1</column>
<column name="icmp_ln268_fu_235_p2">icmp, 0, 0, 13, 10, 1</column>
<column name="icmp_ln269_fu_253_p2">icmp, 0, 0, 9, 3, 2</column>
<column name="icmp_ln286_fu_275_p2">icmp, 0, 0, 13, 10, 1</column>
<column name="icmp_ln287_fu_303_p2">icmp, 0, 0, 8, 2, 1</column>
<column name="icmp_ln304_fu_325_p2">icmp, 0, 0, 13, 10, 1</column>
<column name="ap_block_state11_on_subcall_done">or, 0, 0, 2, 1, 1</column>
<column name="ap_block_state14_on_subcall_done">or, 0, 0, 2, 1, 1</column>
<column name="ap_block_state8_on_subcall_done">or, 0, 0, 2, 1, 1</column>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
<column name="CW_be_o">9, 2, 10, 20</column>
<column name="CW_be_o_ap_vld">9, 2, 1, 2</column>
<column name="CW_bk_o">9, 2, 10, 20</column>
<column name="CW_bk_o_ap_vld">9, 2, 1, 2</column>
<column name="CW_vi_o">9, 2, 10, 20</column>
<column name="CW_vi_o_ap_vld">9, 2, 1, 2</column>
<column name="ap_NS_fsm">89, 18, 1, 18</column>
<column name="available_spaces_be_o">9, 2, 3, 6</column>
<column name="available_spaces_be_o_ap_vld">9, 2, 1, 2</column>
<column name="available_spaces_bk_o">9, 2, 3, 6</column>
<column name="available_spaces_bk_o_ap_vld">9, 2, 1, 2</column>
<column name="available_spaces_vi_o">9, 2, 3, 6</column>
<column name="available_spaces_vi_o_ap_vld">9, 2, 1, 2</column>
<column name="available_spaces_vo_o">9, 2, 3, 6</column>
<column name="available_spaces_vo_o_ap_vld">9, 2, 1, 2</column>
<column name="be_backoff_counter_o">15, 3, 10, 30</column>
<column name="be_backoff_counter_o_ap_vld">15, 3, 1, 3</column>
<column name="bk_backoff_counter_o">15, 3, 10, 30</column>
<column name="bk_backoff_counter_o_ap_vld">15, 3, 1, 3</column>
<column name="current_txop_holder_o">33, 6, 3, 18</column>
<column name="current_txop_holder_o_ap_vld">15, 3, 1, 3</column>
<column name="grp_slot_boundary_timing_fu_204_timing_mode">15, 3, 3, 9</column>
<column name="grp_start_backoff_be_fu_178_invoke_reason">15, 3, 1, 3</column>
<column name="grp_start_backoff_bk_fu_191_invoke_reason">15, 3, 1, 3</column>
<column name="grp_start_backoff_vi_fu_165_invoke_reason">15, 3, 1, 3</column>
<column name="idle_waited_0_reg_109">9, 2, 1, 2</column>
<column name="rand_state_o">27, 5, 32, 160</column>
<column name="rand_state_o_ap_vld">27, 5, 1, 5</column>
<column name="read_pointer_be_o">9, 2, 2, 4</column>
<column name="read_pointer_bk_o">9, 2, 2, 4</column>
<column name="read_pointer_vi_o">9, 2, 2, 4</column>
<column name="read_pointer_vo_o">9, 2, 2, 4</column>
<column name="vi_backoff_counter_o">15, 3, 10, 30</column>
<column name="vi_backoff_counter_o_ap_vld">15, 3, 1, 3</column>
<column name="vo_backoff_counter_o">9, 2, 10, 20</column>
<column name="write_pointer_be_o">9, 2, 2, 4</column>
<column name="write_pointer_bk_o">9, 2, 2, 4</column>
<column name="write_pointer_vi_o">9, 2, 2, 4</column>
<column name="write_pointer_vo_o">9, 2, 2, 4</column>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
<column name="ap_CS_fsm">17, 0, 17, 0</column>
<column name="current_txop_holder_6_reg_384">3, 0, 3, 0</column>
<column name="grp_backoff_vo_fu_153_ap_start_reg">1, 0, 1, 0</column>
<column name="grp_slot_boundary_timing_fu_204_ap_start_reg">1, 0, 1, 0</column>
<column name="grp_start_backoff_be_fu_178_ap_start_reg">1, 0, 1, 0</column>
<column name="grp_start_backoff_bk_fu_191_ap_start_reg">1, 0, 1, 0</column>
<column name="grp_start_backoff_vi_fu_165_ap_start_reg">1, 0, 1, 0</column>
<column name="grp_start_tx_fu_119_ap_start_reg">1, 0, 1, 0</column>
<column name="icmp_ln268_reg_352">1, 0, 1, 0</column>
<column name="icmp_ln269_reg_356">1, 0, 1, 0</column>
<column name="icmp_ln286_reg_364">1, 0, 1, 0</column>
<column name="icmp_ln287_reg_368">1, 0, 1, 0</column>
<column name="icmp_ln304_reg_376">1, 0, 1, 0</column>
<column name="icmp_ln305_reg_380">1, 0, 1, 0</column>
<column name="idle_waited_0_reg_109">1, 0, 1, 0</column>
<column name="idle_waited_reg_343">1, 0, 1, 0</column>
<column name="tmp_7_reg_360">1, 0, 1, 0</column>
<column name="tmp_9_reg_372">1, 0, 1, 0</column>
<column name="tmp_reg_348">1, 0, 1, 0</column>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="ap_clk">in, 1, ap_ctrl_hs, initial_edca_process, return value</column>
<column name="ap_rst">in, 1, ap_ctrl_hs, initial_edca_process, return value</column>
<column name="ap_start">in, 1, ap_ctrl_hs, initial_edca_process, return value</column>
<column name="ap_done">out, 1, ap_ctrl_hs, initial_edca_process, return value</column>
<column name="ap_idle">out, 1, ap_ctrl_hs, initial_edca_process, return value</column>
<column name="ap_ready">out, 1, ap_ctrl_hs, initial_edca_process, return value</column>
<column name="medium_state">in, 1, ap_none, medium_state, pointer</column>
<column name="current_txop_holder_i">in, 3, ap_ovld, current_txop_holder, pointer</column>
<column name="current_txop_holder_o">out, 3, ap_ovld, current_txop_holder, pointer</column>
<column name="current_txop_holder_o_ap_vld">out, 1, ap_ovld, current_txop_holder, pointer</column>
<column name="frame_to_transfer_address0">out, 7, ap_memory, frame_to_transfer, array</column>
<column name="frame_to_transfer_ce0">out, 1, ap_memory, frame_to_transfer, array</column>
<column name="frame_to_transfer_we0">out, 1, ap_memory, frame_to_transfer, array</column>
<column name="frame_to_transfer_d0">out, 8, ap_memory, frame_to_transfer, array</column>
<column name="frame_to_transfer_q0">in, 8, ap_memory, frame_to_transfer, array</column>
<column name="available_spaces_vo_i">in, 3, ap_ovld, available_spaces_vo, pointer</column>
<column name="available_spaces_vo_o">out, 3, ap_ovld, available_spaces_vo, pointer</column>
<column name="available_spaces_vo_o_ap_vld">out, 1, ap_ovld, available_spaces_vo, pointer</column>
<column name="vo_backoff_counter_i">in, 10, ap_ovld, vo_backoff_counter, pointer</column>
<column name="vo_backoff_counter_o">out, 10, ap_ovld, vo_backoff_counter, pointer</column>
<column name="vo_backoff_counter_o_ap_vld">out, 1, ap_ovld, vo_backoff_counter, pointer</column>
<column name="rand_state_i">in, 32, ap_ovld, rand_state, pointer</column>
<column name="rand_state_o">out, 32, ap_ovld, rand_state, pointer</column>
<column name="rand_state_o_ap_vld">out, 1, ap_ovld, rand_state, pointer</column>
<column name="available_spaces_vi_i">in, 3, ap_ovld, available_spaces_vi, pointer</column>
<column name="available_spaces_vi_o">out, 3, ap_ovld, available_spaces_vi, pointer</column>
<column name="available_spaces_vi_o_ap_vld">out, 1, ap_ovld, available_spaces_vi, pointer</column>
<column name="vi_backoff_counter_i">in, 10, ap_ovld, vi_backoff_counter, pointer</column>
<column name="vi_backoff_counter_o">out, 10, ap_ovld, vi_backoff_counter, pointer</column>
<column name="vi_backoff_counter_o_ap_vld">out, 1, ap_ovld, vi_backoff_counter, pointer</column>
<column name="CW_vi_i">in, 10, ap_ovld, CW_vi, pointer</column>
<column name="CW_vi_o">out, 10, ap_ovld, CW_vi, pointer</column>
<column name="CW_vi_o_ap_vld">out, 1, ap_ovld, CW_vi, pointer</column>
<column name="available_spaces_be_i">in, 3, ap_ovld, available_spaces_be, pointer</column>
<column name="available_spaces_be_o">out, 3, ap_ovld, available_spaces_be, pointer</column>
<column name="available_spaces_be_o_ap_vld">out, 1, ap_ovld, available_spaces_be, pointer</column>
<column name="be_backoff_counter_i">in, 10, ap_ovld, be_backoff_counter, pointer</column>
<column name="be_backoff_counter_o">out, 10, ap_ovld, be_backoff_counter, pointer</column>
<column name="be_backoff_counter_o_ap_vld">out, 1, ap_ovld, be_backoff_counter, pointer</column>
<column name="CW_be_i">in, 10, ap_ovld, CW_be, pointer</column>
<column name="CW_be_o">out, 10, ap_ovld, CW_be, pointer</column>
<column name="CW_be_o_ap_vld">out, 1, ap_ovld, CW_be, pointer</column>
<column name="available_spaces_bk_i">in, 3, ap_ovld, available_spaces_bk, pointer</column>
<column name="available_spaces_bk_o">out, 3, ap_ovld, available_spaces_bk, pointer</column>
<column name="available_spaces_bk_o_ap_vld">out, 1, ap_ovld, available_spaces_bk, pointer</column>
<column name="bk_backoff_counter_i">in, 10, ap_ovld, bk_backoff_counter, pointer</column>
<column name="bk_backoff_counter_o">out, 10, ap_ovld, bk_backoff_counter, pointer</column>
<column name="bk_backoff_counter_o_ap_vld">out, 1, ap_ovld, bk_backoff_counter, pointer</column>
<column name="CW_bk_i">in, 10, ap_ovld, CW_bk, pointer</column>
<column name="CW_bk_o">out, 10, ap_ovld, CW_bk, pointer</column>
<column name="CW_bk_o_ap_vld">out, 1, ap_ovld, CW_bk, pointer</column>
<column name="write_pointer_bk_i">in, 2, ap_ovld, write_pointer_bk, pointer</column>
<column name="write_pointer_bk_o">out, 2, ap_ovld, write_pointer_bk, pointer</column>
<column name="write_pointer_bk_o_ap_vld">out, 1, ap_ovld, write_pointer_bk, pointer</column>
<column name="write_pointer_be_i">in, 2, ap_ovld, write_pointer_be, pointer</column>
<column name="write_pointer_be_o">out, 2, ap_ovld, write_pointer_be, pointer</column>
<column name="write_pointer_be_o_ap_vld">out, 1, ap_ovld, write_pointer_be, pointer</column>
<column name="write_pointer_vi_i">in, 2, ap_ovld, write_pointer_vi, pointer</column>
<column name="write_pointer_vi_o">out, 2, ap_ovld, write_pointer_vi, pointer</column>
<column name="write_pointer_vi_o_ap_vld">out, 1, ap_ovld, write_pointer_vi, pointer</column>
<column name="write_pointer_vo_i">in, 2, ap_ovld, write_pointer_vo, pointer</column>
<column name="write_pointer_vo_o">out, 2, ap_ovld, write_pointer_vo, pointer</column>
<column name="write_pointer_vo_o_ap_vld">out, 1, ap_ovld, write_pointer_vo, pointer</column>
<column name="edca_queues_address0">out, 11, ap_memory, edca_queues, array</column>
<column name="edca_queues_ce0">out, 1, ap_memory, edca_queues, array</column>
<column name="edca_queues_we0">out, 1, ap_memory, edca_queues, array</column>
<column name="edca_queues_d0">out, 8, ap_memory, edca_queues, array</column>
<column name="edca_queues_q0">in, 8, ap_memory, edca_queues, array</column>
<column name="read_pointer_bk_i">in, 2, ap_ovld, read_pointer_bk, pointer</column>
<column name="read_pointer_bk_o">out, 2, ap_ovld, read_pointer_bk, pointer</column>
<column name="read_pointer_bk_o_ap_vld">out, 1, ap_ovld, read_pointer_bk, pointer</column>
<column name="read_pointer_be_i">in, 2, ap_ovld, read_pointer_be, pointer</column>
<column name="read_pointer_be_o">out, 2, ap_ovld, read_pointer_be, pointer</column>
<column name="read_pointer_be_o_ap_vld">out, 1, ap_ovld, read_pointer_be, pointer</column>
<column name="read_pointer_vi_i">in, 2, ap_ovld, read_pointer_vi, pointer</column>
<column name="read_pointer_vi_o">out, 2, ap_ovld, read_pointer_vi, pointer</column>
<column name="read_pointer_vi_o_ap_vld">out, 1, ap_ovld, read_pointer_vi, pointer</column>
<column name="read_pointer_vo_i">in, 2, ap_ovld, read_pointer_vo, pointer</column>
<column name="read_pointer_vo_o">out, 2, ap_ovld, read_pointer_vo, pointer</column>
<column name="read_pointer_vo_o_ap_vld">out, 1, ap_ovld, read_pointer_vo, pointer</column>
</table>
</item>
</section>
</profile>
