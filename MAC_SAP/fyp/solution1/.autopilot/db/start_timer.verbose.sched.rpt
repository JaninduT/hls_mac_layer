

================================================================
== Vivado HLS Report for 'start_timer'
================================================================
* Date:           Thu Nov 19 12:13:05 2020

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        fyp
* Solution:       solution1
* Product family: artix7
* Target device:  xc7a35t-cpg236-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 6.173 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1  |        ?|        ?|         1|          -|          -|     ?|    no    |
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 3 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.70>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%total_count = alloca i7, align 1"   --->   Operation 4 'alloca' 'total_count' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%tc = alloca i16, align 2"   --->   Operation 5 'alloca' 'tc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (1.66ns)   --->   "store volatile i7 0, i7* %total_count, align 1" [fyp/timer.c:4]   --->   Operation 6 'store' <Predicate = true> <Delay = 1.66>
ST_1 : Operation 7 [1/1] (1.70ns)   --->   "store volatile i16 0, i16* %tc, align 2" [fyp/timer.c:5]   --->   Operation 7 'store' <Predicate = true> <Delay = 1.70>

State 2 <SV = 1> <Delay = 1.66>
ST_2 : Operation 8 [1/1] (0.00ns)   --->   "%count_idle_read = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %count_idle) nounwind"   --->   Operation 8 'read' 'count_idle_read' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 9 [1/1] (1.66ns)   --->   "store volatile i7 -56, i7* %total_count, align 1" [fyp/timer.c:6]   --->   Operation 9 'store' <Predicate = true> <Delay = 1.66>
ST_2 : Operation 10 [1/1] (1.66ns)   --->   "br label %1" [fyp/timer.c:8]   --->   Operation 10 'br' <Predicate = true> <Delay = 1.66>

State 3 <SV = 2> <Delay = 6.17>
ST_3 : Operation 11 [1/1] (0.00ns)   --->   "%i_0 = phi i20 [ 0, %0 ], [ %i, %6 ]"   --->   Operation 11 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 12 [1/1] (0.00ns)   --->   "%zext_ln8 = zext i20 %i_0 to i21" [fyp/timer.c:8]   --->   Operation 12 'zext' 'zext_ln8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 13 [1/1] (0.00ns)   --->   "%total_count_load = load volatile i7* %total_count, align 1" [fyp/timer.c:8]   --->   Operation 13 'load' 'total_count_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 14 [1/1] (0.00ns)   --->   "%sext_ln8_1 = sext i7 %total_count_load to i8" [fyp/timer.c:8]   --->   Operation 14 'sext' 'sext_ln8_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 15 [1/1] (0.00ns)   --->   "%zext_ln8_1 = zext i8 %sext_ln8_1 to i9" [fyp/timer.c:8]   --->   Operation 15 'zext' 'zext_ln8_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 16 [1/1] (2.11ns)   --->   "%add_ln8 = add i9 %zext_ln8_1, -2" [fyp/timer.c:8]   --->   Operation 16 'add' 'add_ln8' <Predicate = true> <Delay = 2.11> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 17 [1/1] (0.00ns)   --->   "%sext_ln8 = sext i9 %add_ln8 to i21" [fyp/timer.c:8]   --->   Operation 17 'sext' 'sext_ln8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 18 [1/1] (2.39ns)   --->   "%icmp_ln8 = icmp slt i21 %zext_ln8, %sext_ln8" [fyp/timer.c:8]   --->   Operation 18 'icmp' 'icmp_ln8' <Predicate = true> <Delay = 2.39> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.39> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 19 [1/1] (2.28ns)   --->   "%i = add i20 %i_0, 1" [fyp/timer.c:8]   --->   Operation 19 'add' 'i' <Predicate = true> <Delay = 2.28> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 20 [1/1] (1.66ns)   --->   "br i1 %icmp_ln8, label %2, label %._crit_edge" [fyp/timer.c:8]   --->   Operation 20 'br' <Predicate = true> <Delay = 1.66>
ST_3 : Operation 21 [1/1] (0.00ns)   --->   "br i1 %count_idle_read, label %3, label %5" [fyp/timer.c:9]   --->   Operation 21 'br' <Predicate = (icmp_ln8)> <Delay = 0.00>
ST_3 : Operation 22 [1/1] (0.00ns)   --->   "%tc_load = load volatile i16* %tc, align 2" [fyp/timer.c:17]   --->   Operation 22 'load' 'tc_load' <Predicate = (icmp_ln8 & !count_idle_read)> <Delay = 0.00>
ST_3 : Operation 23 [1/1] (2.14ns)   --->   "%tc_1 = add i16 %tc_load, 1" [fyp/timer.c:17]   --->   Operation 23 'add' 'tc_1' <Predicate = (icmp_ln8 & !count_idle_read)> <Delay = 2.14> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 24 [1/1] (1.70ns)   --->   "store volatile i16 %tc_1, i16* %tc, align 2" [fyp/timer.c:17]   --->   Operation 24 'store' <Predicate = (icmp_ln8 & !count_idle_read)> <Delay = 1.70>
ST_3 : Operation 25 [1/1] (0.00ns)   --->   "br label %6"   --->   Operation 25 'br' <Predicate = (icmp_ln8 & !count_idle_read)> <Delay = 0.00>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%medium_state_read = call i1 @_ssdm_op_Read.ap_auto.volatile.i1P(i1* %medium_state) nounwind" [fyp/timer.c:10]   --->   Operation 26 'read' 'medium_state_read' <Predicate = (icmp_ln8 & count_idle_read)> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (1.66ns)   --->   "br i1 %medium_state_read, label %4, label %._crit_edge" [fyp/timer.c:10]   --->   Operation 27 'br' <Predicate = (icmp_ln8 & count_idle_read)> <Delay = 1.66>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%tc_load_1 = load volatile i16* %tc, align 2" [fyp/timer.c:11]   --->   Operation 28 'load' 'tc_load_1' <Predicate = (icmp_ln8 & count_idle_read & medium_state_read)> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (2.14ns)   --->   "%tc_2 = add i16 %tc_load_1, 1" [fyp/timer.c:11]   --->   Operation 29 'add' 'tc_2' <Predicate = (icmp_ln8 & count_idle_read & medium_state_read)> <Delay = 2.14> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 30 [1/1] (1.70ns)   --->   "store volatile i16 %tc_2, i16* %tc, align 2" [fyp/timer.c:11]   --->   Operation 30 'store' <Predicate = (icmp_ln8 & count_idle_read & medium_state_read)> <Delay = 1.70>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "br label %6" [fyp/timer.c:16]   --->   Operation 31 'br' <Predicate = (icmp_ln8 & count_idle_read & medium_state_read)> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "br label %1" [fyp/timer.c:8]   --->   Operation 32 'br' <Predicate = (icmp_ln8 & medium_state_read) | (icmp_ln8 & !count_idle_read)> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%timeout_write_assign = phi i1 [ true, %1 ], [ false, %3 ]"   --->   Operation 33 'phi' 'timeout_write_assign' <Predicate = (count_idle_read & !medium_state_read) | (!icmp_ln8)> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "ret i1 %timeout_write_assign" [fyp/timer.c:22]   --->   Operation 34 'ret' <Predicate = (count_idle_read & !medium_state_read) | (!icmp_ln8)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.71ns
The critical path consists of the following:
	'alloca' operation ('tc') [5]  (0 ns)
	'store' operation ('store_ln5', fyp/timer.c:5) of constant 0 on local variable 'tc' [7]  (1.71 ns)

 <State 2>: 1.66ns
The critical path consists of the following:
	'store' operation ('store_ln6', fyp/timer.c:6) of constant 72 on local variable 'total_count' [8]  (1.66 ns)

 <State 3>: 6.17ns
The critical path consists of the following:
	'load' operation ('total_count_load', fyp/timer.c:8) on local variable 'total_count' [13]  (0 ns)
	'add' operation ('add_ln8', fyp/timer.c:8) [16]  (2.12 ns)
	'icmp' operation ('icmp_ln8', fyp/timer.c:8) [18]  (2.39 ns)
	multiplexor before 'phi' operation ('timeout') [39]  (1.66 ns)
	'phi' operation ('timeout') [39]  (0 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
