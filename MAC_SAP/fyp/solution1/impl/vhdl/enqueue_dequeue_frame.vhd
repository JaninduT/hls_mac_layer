-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity enqueue_dequeue_frame is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    operation : IN STD_LOGIC_VECTOR (0 downto 0);
    ac : IN STD_LOGIC_VECTOR (1 downto 0);
    inout_frame_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    inout_frame_ce0 : OUT STD_LOGIC;
    inout_frame_we0 : OUT STD_LOGIC;
    inout_frame_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    inout_frame_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of enqueue_dequeue_frame is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "enqueue_dequeue_frame,hls_ip_2019_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7a35t-cpg236-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.485500,HLS_SYN_LAT=102,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=279,HLS_SYN_LUT=1217,HLS_VERSION=2019_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (17 downto 0) := "000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (17 downto 0) := "000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (17 downto 0) := "000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (17 downto 0) := "000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (17 downto 0) := "000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (17 downto 0) := "000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (17 downto 0) := "000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (17 downto 0) := "000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (17 downto 0) := "000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (17 downto 0) := "001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (17 downto 0) := "010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv9_64 : STD_LOGIC_VECTOR (8 downto 0) := "001100100";
    constant ap_const_lv7_64 : STD_LOGIC_VECTOR (6 downto 0) := "1100100";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal available_spaces_bk : STD_LOGIC_VECTOR (2 downto 0) := "100";
    signal available_spaces_be : STD_LOGIC_VECTOR (2 downto 0) := "100";
    signal available_spaces_vi : STD_LOGIC_VECTOR (2 downto 0) := "100";
    signal available_spaces_vo : STD_LOGIC_VECTOR (2 downto 0) := "100";
    signal write_pointer_bk : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal edca_fifo_bk_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal edca_fifo_bk_ce0 : STD_LOGIC;
    signal edca_fifo_bk_we0 : STD_LOGIC;
    signal edca_fifo_bk_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal write_pointer_be : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal edca_fifo_be_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal edca_fifo_be_ce0 : STD_LOGIC;
    signal edca_fifo_be_we0 : STD_LOGIC;
    signal edca_fifo_be_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal write_pointer_vi : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal edca_fifo_vi_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal edca_fifo_vi_ce0 : STD_LOGIC;
    signal edca_fifo_vi_we0 : STD_LOGIC;
    signal edca_fifo_vi_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal write_pointer_vo : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal edca_fifo_vo_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal edca_fifo_vo_ce0 : STD_LOGIC;
    signal edca_fifo_vo_we0 : STD_LOGIC;
    signal edca_fifo_vo_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal read_pointer_bk : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal read_pointer_be : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal read_pointer_vi : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal read_pointer_vo : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal available_spaces_bk_s_reg_1058 : STD_LOGIC_VECTOR (2 downto 0);
    signal available_spaces_be_s_reg_1064 : STD_LOGIC_VECTOR (2 downto 0);
    signal available_spaces_vi_s_reg_1070 : STD_LOGIC_VECTOR (2 downto 0);
    signal available_spaces_vo_s_reg_1076 : STD_LOGIC_VECTOR (2 downto 0);
    signal write_pointer_vo_loa_reg_1091 : STD_LOGIC_VECTOR (1 downto 0);
    signal operation_read_read_fu_106_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln173_fu_438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_420_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln164_fu_480_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln164_reg_1096 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln160_fu_466_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_pointer_vi_loa_reg_1104 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln154_fu_500_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln154_reg_1109 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln150_fu_486_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_pointer_be_loa_reg_1117 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln144_fu_520_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln144_reg_1122 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln140_fu_506_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_pointer_bk_loa_reg_1130 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln134_fu_540_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln134_reg_1135 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln130_fu_526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal read_pointer_vo_load_reg_1149 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln208_fu_566_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln208_reg_1154 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln204_fu_552_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal read_pointer_vi_load_reg_1162 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln198_fu_586_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln198_reg_1167 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln194_fu_572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal read_pointer_be_load_reg_1175 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln188_fu_606_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln188_reg_1180 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln184_fu_592_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal read_pointer_bk_load_reg_1188 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln178_fu_626_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln178_reg_1193 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln174_fu_612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal vo_1_fu_642_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal vo_1_reg_1201 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln163_fu_636_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln164_fu_653_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln164_reg_1211 : STD_LOGIC_VECTOR (8 downto 0);
    signal vi_1_fu_694_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal vi_1_reg_1219 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln153_fu_688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln154_fu_705_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln154_reg_1229 : STD_LOGIC_VECTOR (8 downto 0);
    signal be_1_fu_746_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal be_1_reg_1237 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln143_fu_740_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln144_fu_757_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln144_reg_1247 : STD_LOGIC_VECTOR (8 downto 0);
    signal bk_1_fu_798_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal bk_1_reg_1255 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal icmp_ln133_fu_792_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln134_fu_809_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln134_reg_1265 : STD_LOGIC_VECTOR (8 downto 0);
    signal vo_fu_850_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal vo_reg_1273 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal icmp_ln207_fu_844_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal vi_fu_903_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal vi_reg_1286 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal icmp_ln197_fu_897_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal be_fu_956_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal be_reg_1299 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal icmp_ln187_fu_950_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bk_fu_1009_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal bk_reg_1312 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal icmp_ln177_fu_1003_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal vo_0_reg_273 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal vi_0_reg_284 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal be_0_reg_295 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal bk_0_reg_306 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal vo4_0_reg_317 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal vi3_0_reg_329 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal be2_0_reg_341 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal bk1_0_reg_353 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal p_0_reg_365 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln164_1_fu_648_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln164_2_fu_680_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln154_1_fu_700_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln154_2_fu_732_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln144_1_fu_752_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln144_2_fu_784_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln134_1_fu_804_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln134_2_fu_836_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln208_1_fu_861_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln208_2_fu_888_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln198_1_fu_914_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln198_2_fu_941_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln188_1_fu_967_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln188_2_fu_994_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln178_1_fu_1020_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln178_2_fu_1047_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln137_fu_825_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln181_fu_1036_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln147_fu_773_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln191_fu_983_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln157_fu_721_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln201_fu_930_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln167_fu_669_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln211_fu_877_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln136_fu_814_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln146_fu_762_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln156_fu_710_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln166_fu_658_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln180_fu_1025_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln190_fu_972_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln200_fu_919_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln210_fu_866_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_432_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_1_fu_460_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln164_fu_480_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln154_fu_500_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln144_fu_520_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln134_fu_540_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln204_1_fu_546_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln208_fu_566_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln198_fu_586_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln188_fu_606_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln178_fu_626_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln163_fu_632_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln153_fu_684_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln143_fu_736_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln133_fu_788_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln207_fu_840_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln208_fu_856_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln197_fu_893_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln198_fu_909_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln187_fu_946_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln188_fu_962_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln177_fu_999_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln178_fu_1015_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln134_fu_540_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln144_fu_520_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln154_fu_500_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln164_fu_480_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln178_fu_626_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln188_fu_606_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln198_fu_586_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln208_fu_566_p00 : STD_LOGIC_VECTOR (8 downto 0);

    component enqueue_dequeue_fbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    edca_fifo_bk_U : component enqueue_dequeue_fbkb
    generic map (
        DataWidth => 8,
        AddressRange => 400,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => edca_fifo_bk_address0,
        ce0 => edca_fifo_bk_ce0,
        we0 => edca_fifo_bk_we0,
        d0 => inout_frame_q0,
        q0 => edca_fifo_bk_q0);

    edca_fifo_be_U : component enqueue_dequeue_fbkb
    generic map (
        DataWidth => 8,
        AddressRange => 400,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => edca_fifo_be_address0,
        ce0 => edca_fifo_be_ce0,
        we0 => edca_fifo_be_we0,
        d0 => inout_frame_q0,
        q0 => edca_fifo_be_q0);

    edca_fifo_vi_U : component enqueue_dequeue_fbkb
    generic map (
        DataWidth => 8,
        AddressRange => 400,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => edca_fifo_vi_address0,
        ce0 => edca_fifo_vi_ce0,
        we0 => edca_fifo_vi_we0,
        d0 => inout_frame_q0,
        q0 => edca_fifo_vi_q0);

    edca_fifo_vo_U : component enqueue_dequeue_fbkb
    generic map (
        DataWidth => 8,
        AddressRange => 400,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => edca_fifo_vo_address0,
        ce0 => edca_fifo_vo_ce0,
        we0 => edca_fifo_vo_we0,
        d0 => inout_frame_q0,
        q0 => edca_fifo_vo_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    available_spaces_be_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln187_fu_950_p2 = ap_const_lv1_1))) then 
                available_spaces_be <= add_ln191_fu_983_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln143_fu_740_p2 = ap_const_lv1_1))) then 
                available_spaces_be <= add_ln147_fu_773_p2;
            end if; 
        end if;
    end process;

    available_spaces_bk_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln177_fu_1003_p2 = ap_const_lv1_1))) then 
                available_spaces_bk <= add_ln181_fu_1036_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln133_fu_792_p2 = ap_const_lv1_1))) then 
                available_spaces_bk <= add_ln137_fu_825_p2;
            end if; 
        end if;
    end process;

    available_spaces_vi_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln197_fu_897_p2 = ap_const_lv1_1))) then 
                available_spaces_vi <= add_ln201_fu_930_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln153_fu_688_p2 = ap_const_lv1_1))) then 
                available_spaces_vi <= add_ln157_fu_721_p2;
            end if; 
        end if;
    end process;

    available_spaces_vo_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln207_fu_844_p2 = ap_const_lv1_1))) then 
                available_spaces_vo <= add_ln211_fu_877_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln163_fu_636_p2 = ap_const_lv1_1))) then 
                available_spaces_vo <= add_ln167_fu_669_p2;
            end if; 
        end if;
    end process;

    be2_0_reg_341_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_420_p2 = ap_const_lv1_1) and (icmp_ln184_fu_592_p2 = ap_const_lv1_0) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_1))) then 
                be2_0_reg_341 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                be2_0_reg_341 <= be_reg_1299;
            end if; 
        end if;
    end process;

    be_0_reg_295_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_420_p2 = ap_const_lv1_1) and (icmp_ln140_fu_506_p2 = ap_const_lv1_0) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_0))) then 
                be_0_reg_295 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                be_0_reg_295 <= be_1_reg_1237;
            end if; 
        end if;
    end process;

    bk1_0_reg_353_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln173_fu_438_p2 = ap_const_lv1_1) and (icmp_ln174_fu_612_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_1))) then 
                bk1_0_reg_353 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                bk1_0_reg_353 <= bk_reg_1312;
            end if; 
        end if;
    end process;

    bk_0_reg_306_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln173_fu_438_p2 = ap_const_lv1_1) and (icmp_ln130_fu_526_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_0))) then 
                bk_0_reg_306 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                bk_0_reg_306 <= bk_1_reg_1255;
            end if; 
        end if;
    end process;

    p_0_reg_365_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln174_fu_612_p2 = ap_const_lv1_1) and (icmp_ln173_fu_438_p2 = ap_const_lv1_1) and (operation_read_read_fu_106_p2 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln184_fu_592_p2 = ap_const_lv1_1) and (grp_fu_420_p2 = ap_const_lv1_1) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln194_fu_572_p2 = ap_const_lv1_1) and (grp_fu_426_p2 = ap_const_lv1_1) and (grp_fu_420_p2 = ap_const_lv1_0) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (or_ln204_fu_552_p2 = ap_const_lv1_1) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln130_fu_526_p2 = ap_const_lv1_1) and (icmp_ln173_fu_438_p2 = ap_const_lv1_1) and (operation_read_read_fu_106_p2 = ap_const_lv1_0)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln140_fu_506_p2 = ap_const_lv1_1) and (grp_fu_420_p2 = ap_const_lv1_1) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_0)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln150_fu_486_p2 = ap_const_lv1_1) and (grp_fu_426_p2 = ap_const_lv1_1) and (grp_fu_420_p2 = ap_const_lv1_0) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_0)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (or_ln160_fu_466_p2 = ap_const_lv1_1) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_0)))) then 
                p_0_reg_365 <= ap_const_lv1_0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln177_fu_1003_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln187_fu_950_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln197_fu_897_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln207_fu_844_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln133_fu_792_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln143_fu_740_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln153_fu_688_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln163_fu_636_p2 = ap_const_lv1_1)))) then 
                p_0_reg_365 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    vi3_0_reg_329_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_426_p2 = ap_const_lv1_1) and (icmp_ln194_fu_572_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_1))) then 
                vi3_0_reg_329 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                vi3_0_reg_329 <= vi_reg_1286;
            end if; 
        end if;
    end process;

    vi_0_reg_284_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_426_p2 = ap_const_lv1_1) and (icmp_ln150_fu_486_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_0))) then 
                vi_0_reg_284 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                vi_0_reg_284 <= vi_1_reg_1219;
            end if; 
        end if;
    end process;

    vo4_0_reg_317_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (or_ln204_fu_552_p2 = ap_const_lv1_0) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_1))) then 
                vo4_0_reg_317 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                vo4_0_reg_317 <= vo_reg_1273;
            end if; 
        end if;
    end process;

    vo_0_reg_273_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (or_ln160_fu_466_p2 = ap_const_lv1_0) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_0))) then 
                vo_0_reg_273 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                vo_0_reg_273 <= vo_1_reg_1201;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln133_fu_792_p2 = ap_const_lv1_0))) then
                add_ln134_reg_1265 <= add_ln134_fu_809_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln143_fu_740_p2 = ap_const_lv1_0))) then
                add_ln144_reg_1247 <= add_ln144_fu_757_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln153_fu_688_p2 = ap_const_lv1_0))) then
                add_ln154_reg_1229 <= add_ln154_fu_705_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln163_fu_636_p2 = ap_const_lv1_0))) then
                add_ln164_reg_1211 <= add_ln164_fu_653_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                available_spaces_be_s_reg_1064 <= available_spaces_be;
                available_spaces_bk_s_reg_1058 <= available_spaces_bk;
                available_spaces_vi_s_reg_1070 <= available_spaces_vi;
                available_spaces_vo_s_reg_1076 <= available_spaces_vo;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                be_1_reg_1237 <= be_1_fu_746_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                be_reg_1299 <= be_fu_956_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                bk_1_reg_1255 <= bk_1_fu_798_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                bk_reg_1312 <= bk_fu_1009_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln173_fu_438_p2 = ap_const_lv1_1) and (icmp_ln130_fu_526_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_0))) then
                    mul_ln134_reg_1135(8 downto 2) <= mul_ln134_fu_540_p2(8 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_420_p2 = ap_const_lv1_1) and (icmp_ln140_fu_506_p2 = ap_const_lv1_0) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_0))) then
                    mul_ln144_reg_1122(8 downto 2) <= mul_ln144_fu_520_p2(8 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_426_p2 = ap_const_lv1_1) and (icmp_ln150_fu_486_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_0))) then
                    mul_ln154_reg_1109(8 downto 2) <= mul_ln154_fu_500_p2(8 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (or_ln160_fu_466_p2 = ap_const_lv1_0) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_0))) then
                    mul_ln164_reg_1096(8 downto 2) <= mul_ln164_fu_480_p2(8 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln173_fu_438_p2 = ap_const_lv1_1) and (icmp_ln174_fu_612_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_1))) then
                    mul_ln178_reg_1193(8 downto 2) <= mul_ln178_fu_626_p2(8 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_420_p2 = ap_const_lv1_1) and (icmp_ln184_fu_592_p2 = ap_const_lv1_0) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_1))) then
                    mul_ln188_reg_1180(8 downto 2) <= mul_ln188_fu_606_p2(8 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_426_p2 = ap_const_lv1_1) and (icmp_ln194_fu_572_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_1))) then
                    mul_ln198_reg_1167(8 downto 2) <= mul_ln198_fu_586_p2(8 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (or_ln204_fu_552_p2 = ap_const_lv1_0) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_1))) then
                    mul_ln208_reg_1154(8 downto 2) <= mul_ln208_fu_566_p2(8 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln187_fu_950_p2 = ap_const_lv1_1))) then
                read_pointer_be <= add_ln190_fu_972_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_420_p2 = ap_const_lv1_1) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_1))) then
                read_pointer_be_load_reg_1175 <= read_pointer_be;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln177_fu_1003_p2 = ap_const_lv1_1))) then
                read_pointer_bk <= add_ln180_fu_1025_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln173_fu_438_p2 = ap_const_lv1_1) and (operation_read_read_fu_106_p2 = ap_const_lv1_1))) then
                read_pointer_bk_load_reg_1188 <= read_pointer_bk;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln197_fu_897_p2 = ap_const_lv1_1))) then
                read_pointer_vi <= add_ln200_fu_919_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_426_p2 = ap_const_lv1_1) and (grp_fu_420_p2 = ap_const_lv1_0) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_1))) then
                read_pointer_vi_load_reg_1162 <= read_pointer_vi;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln207_fu_844_p2 = ap_const_lv1_1))) then
                read_pointer_vo <= add_ln210_fu_866_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_1))) then
                read_pointer_vo_load_reg_1149 <= read_pointer_vo;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                vi_1_reg_1219 <= vi_1_fu_694_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                vi_reg_1286 <= vi_fu_903_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                vo_1_reg_1201 <= vo_1_fu_642_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                vo_reg_1273 <= vo_fu_850_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln143_fu_740_p2 = ap_const_lv1_1))) then
                write_pointer_be <= add_ln146_fu_762_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_420_p2 = ap_const_lv1_1) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_0))) then
                write_pointer_be_loa_reg_1117 <= write_pointer_be;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln133_fu_792_p2 = ap_const_lv1_1))) then
                write_pointer_bk <= add_ln136_fu_814_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln173_fu_438_p2 = ap_const_lv1_1) and (operation_read_read_fu_106_p2 = ap_const_lv1_0))) then
                write_pointer_bk_loa_reg_1130 <= write_pointer_bk;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln153_fu_688_p2 = ap_const_lv1_1))) then
                write_pointer_vi <= add_ln156_fu_710_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_426_p2 = ap_const_lv1_1) and (grp_fu_420_p2 = ap_const_lv1_0) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_0))) then
                write_pointer_vi_loa_reg_1104 <= write_pointer_vi;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln163_fu_636_p2 = ap_const_lv1_1))) then
                write_pointer_vo <= add_ln166_fu_658_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_0))) then
                write_pointer_vo_loa_reg_1091 <= write_pointer_vo;
            end if;
        end if;
    end process;
    mul_ln164_reg_1096(1 downto 0) <= "00";
    mul_ln154_reg_1109(1 downto 0) <= "00";
    mul_ln144_reg_1122(1 downto 0) <= "00";
    mul_ln134_reg_1135(1 downto 0) <= "00";
    mul_ln208_reg_1154(1 downto 0) <= "00";
    mul_ln198_reg_1167(1 downto 0) <= "00";
    mul_ln188_reg_1180(1 downto 0) <= "00";
    mul_ln178_reg_1193(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, operation_read_read_fu_106_p2, icmp_ln173_fu_438_p2, grp_fu_420_p2, grp_fu_426_p2, or_ln160_fu_466_p2, icmp_ln150_fu_486_p2, icmp_ln140_fu_506_p2, icmp_ln130_fu_526_p2, or_ln204_fu_552_p2, icmp_ln194_fu_572_p2, icmp_ln184_fu_592_p2, icmp_ln174_fu_612_p2, ap_CS_fsm_state2, icmp_ln163_fu_636_p2, ap_CS_fsm_state4, icmp_ln153_fu_688_p2, ap_CS_fsm_state6, icmp_ln143_fu_740_p2, ap_CS_fsm_state8, icmp_ln133_fu_792_p2, ap_CS_fsm_state10, icmp_ln207_fu_844_p2, ap_CS_fsm_state12, icmp_ln197_fu_897_p2, ap_CS_fsm_state14, icmp_ln187_fu_950_p2, ap_CS_fsm_state16, icmp_ln177_fu_1003_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln173_fu_438_p2 = ap_const_lv1_1) and (icmp_ln174_fu_612_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_420_p2 = ap_const_lv1_1) and (icmp_ln184_fu_592_p2 = ap_const_lv1_0) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_426_p2 = ap_const_lv1_1) and (icmp_ln194_fu_572_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (or_ln204_fu_552_p2 = ap_const_lv1_0) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln173_fu_438_p2 = ap_const_lv1_1) and (icmp_ln130_fu_526_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_420_p2 = ap_const_lv1_1) and (icmp_ln140_fu_506_p2 = ap_const_lv1_0) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (grp_fu_426_p2 = ap_const_lv1_1) and (icmp_ln150_fu_486_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (or_ln160_fu_466_p2 = ap_const_lv1_0) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (((((((((icmp_ln174_fu_612_p2 = ap_const_lv1_1) and (icmp_ln173_fu_438_p2 = ap_const_lv1_1) and (operation_read_read_fu_106_p2 = ap_const_lv1_1)) or ((icmp_ln184_fu_592_p2 = ap_const_lv1_1) and (grp_fu_420_p2 = ap_const_lv1_1) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_1))) or ((icmp_ln194_fu_572_p2 = ap_const_lv1_1) and (grp_fu_426_p2 = ap_const_lv1_1) and (grp_fu_420_p2 = ap_const_lv1_0) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_1))) or ((or_ln204_fu_552_p2 = ap_const_lv1_1) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_1))) or ((icmp_ln130_fu_526_p2 = ap_const_lv1_1) and (icmp_ln173_fu_438_p2 = ap_const_lv1_1) and (operation_read_read_fu_106_p2 = ap_const_lv1_0))) or ((icmp_ln140_fu_506_p2 = ap_const_lv1_1) and (grp_fu_420_p2 = ap_const_lv1_1) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_0))) or ((icmp_ln150_fu_486_p2 = ap_const_lv1_1) and (grp_fu_426_p2 = ap_const_lv1_1) and (grp_fu_420_p2 = ap_const_lv1_0) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_0))) or ((or_ln160_fu_466_p2 = ap_const_lv1_1) and (grp_fu_426_p2 = ap_const_lv1_0) and (grp_fu_420_p2 = ap_const_lv1_0) and (icmp_ln173_fu_438_p2 = ap_const_lv1_0) and (operation_read_read_fu_106_p2 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln163_fu_636_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln153_fu_688_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln143_fu_740_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln133_fu_792_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln207_fu_844_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln197_fu_897_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state14 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln187_fu_950_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state16 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln177_fu_1003_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln134_fu_809_p2 <= std_logic_vector(unsigned(zext_ln133_fu_788_p1) + unsigned(mul_ln134_reg_1135));
    add_ln136_fu_814_p2 <= std_logic_vector(unsigned(write_pointer_bk_loa_reg_1130) + unsigned(ap_const_lv2_1));
    add_ln137_fu_825_p2 <= std_logic_vector(unsigned(available_spaces_bk_s_reg_1058) + unsigned(ap_const_lv3_7));
    add_ln144_fu_757_p2 <= std_logic_vector(unsigned(zext_ln143_fu_736_p1) + unsigned(mul_ln144_reg_1122));
    add_ln146_fu_762_p2 <= std_logic_vector(unsigned(write_pointer_be_loa_reg_1117) + unsigned(ap_const_lv2_1));
    add_ln147_fu_773_p2 <= std_logic_vector(unsigned(available_spaces_be_s_reg_1064) + unsigned(ap_const_lv3_7));
    add_ln154_fu_705_p2 <= std_logic_vector(unsigned(zext_ln153_fu_684_p1) + unsigned(mul_ln154_reg_1109));
    add_ln156_fu_710_p2 <= std_logic_vector(unsigned(write_pointer_vi_loa_reg_1104) + unsigned(ap_const_lv2_1));
    add_ln157_fu_721_p2 <= std_logic_vector(unsigned(available_spaces_vi_s_reg_1070) + unsigned(ap_const_lv3_7));
    add_ln164_fu_653_p2 <= std_logic_vector(unsigned(zext_ln163_fu_632_p1) + unsigned(mul_ln164_reg_1096));
    add_ln166_fu_658_p2 <= std_logic_vector(unsigned(write_pointer_vo_loa_reg_1091) + unsigned(ap_const_lv2_1));
    add_ln167_fu_669_p2 <= std_logic_vector(unsigned(available_spaces_vo_s_reg_1076) + unsigned(ap_const_lv3_7));
    add_ln178_fu_1015_p2 <= std_logic_vector(unsigned(zext_ln177_fu_999_p1) + unsigned(mul_ln178_reg_1193));
    add_ln180_fu_1025_p2 <= std_logic_vector(unsigned(read_pointer_bk_load_reg_1188) + unsigned(ap_const_lv2_1));
    add_ln181_fu_1036_p2 <= std_logic_vector(unsigned(available_spaces_bk_s_reg_1058) + unsigned(ap_const_lv3_1));
    add_ln188_fu_962_p2 <= std_logic_vector(unsigned(zext_ln187_fu_946_p1) + unsigned(mul_ln188_reg_1180));
    add_ln190_fu_972_p2 <= std_logic_vector(unsigned(read_pointer_be_load_reg_1175) + unsigned(ap_const_lv2_1));
    add_ln191_fu_983_p2 <= std_logic_vector(unsigned(available_spaces_be_s_reg_1064) + unsigned(ap_const_lv3_1));
    add_ln198_fu_909_p2 <= std_logic_vector(unsigned(zext_ln197_fu_893_p1) + unsigned(mul_ln198_reg_1167));
    add_ln200_fu_919_p2 <= std_logic_vector(unsigned(read_pointer_vi_load_reg_1162) + unsigned(ap_const_lv2_1));
    add_ln201_fu_930_p2 <= std_logic_vector(unsigned(available_spaces_vi_s_reg_1070) + unsigned(ap_const_lv3_1));
    add_ln208_fu_856_p2 <= std_logic_vector(unsigned(zext_ln207_fu_840_p1) + unsigned(mul_ln208_reg_1154));
    add_ln210_fu_866_p2 <= std_logic_vector(unsigned(read_pointer_vo_load_reg_1149) + unsigned(ap_const_lv2_1));
    add_ln211_fu_877_p2 <= std_logic_vector(unsigned(available_spaces_vo_s_reg_1076) + unsigned(ap_const_lv3_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= p_0_reg_365;
    be_1_fu_746_p2 <= std_logic_vector(unsigned(be_0_reg_295) + unsigned(ap_const_lv7_1));
    be_fu_956_p2 <= std_logic_vector(unsigned(be2_0_reg_341) + unsigned(ap_const_lv7_1));
    bk_1_fu_798_p2 <= std_logic_vector(unsigned(bk_0_reg_306) + unsigned(ap_const_lv7_1));
    bk_fu_1009_p2 <= std_logic_vector(unsigned(bk1_0_reg_353) + unsigned(ap_const_lv7_1));

    edca_fifo_be_address0_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state7, zext_ln144_2_fu_784_p1, zext_ln188_1_fu_967_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            edca_fifo_be_address0 <= zext_ln188_1_fu_967_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            edca_fifo_be_address0 <= zext_ln144_2_fu_784_p1(9 - 1 downto 0);
        else 
            edca_fifo_be_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    edca_fifo_be_ce0_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            edca_fifo_be_ce0 <= ap_const_logic_1;
        else 
            edca_fifo_be_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    edca_fifo_be_we0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            edca_fifo_be_we0 <= ap_const_logic_1;
        else 
            edca_fifo_be_we0 <= ap_const_logic_0;
        end if; 
    end process;


    edca_fifo_bk_address0_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state9, zext_ln134_2_fu_836_p1, zext_ln178_1_fu_1020_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            edca_fifo_bk_address0 <= zext_ln178_1_fu_1020_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            edca_fifo_bk_address0 <= zext_ln134_2_fu_836_p1(9 - 1 downto 0);
        else 
            edca_fifo_bk_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    edca_fifo_bk_ce0_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            edca_fifo_bk_ce0 <= ap_const_logic_1;
        else 
            edca_fifo_bk_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    edca_fifo_bk_we0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            edca_fifo_bk_we0 <= ap_const_logic_1;
        else 
            edca_fifo_bk_we0 <= ap_const_logic_0;
        end if; 
    end process;


    edca_fifo_vi_address0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state5, zext_ln154_2_fu_732_p1, zext_ln198_1_fu_914_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            edca_fifo_vi_address0 <= zext_ln198_1_fu_914_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            edca_fifo_vi_address0 <= zext_ln154_2_fu_732_p1(9 - 1 downto 0);
        else 
            edca_fifo_vi_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    edca_fifo_vi_ce0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            edca_fifo_vi_ce0 <= ap_const_logic_1;
        else 
            edca_fifo_vi_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    edca_fifo_vi_we0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            edca_fifo_vi_we0 <= ap_const_logic_1;
        else 
            edca_fifo_vi_we0 <= ap_const_logic_0;
        end if; 
    end process;


    edca_fifo_vo_address0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state3, zext_ln164_2_fu_680_p1, zext_ln208_1_fu_861_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            edca_fifo_vo_address0 <= zext_ln208_1_fu_861_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            edca_fifo_vo_address0 <= zext_ln164_2_fu_680_p1(9 - 1 downto 0);
        else 
            edca_fifo_vo_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    edca_fifo_vo_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            edca_fifo_vo_ce0 <= ap_const_logic_1;
        else 
            edca_fifo_vo_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    edca_fifo_vo_we0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            edca_fifo_vo_we0 <= ap_const_logic_1;
        else 
            edca_fifo_vo_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_420_p2 <= "1" when (ac = ap_const_lv2_1) else "0";
    grp_fu_426_p2 <= "1" when (ac = ap_const_lv2_2) else "0";
    grp_fu_432_p2 <= "0" when (ac = ap_const_lv2_3) else "1";
    icmp_ln130_fu_526_p2 <= "1" when (available_spaces_bk = ap_const_lv3_0) else "0";
    icmp_ln133_fu_792_p2 <= "1" when (bk_0_reg_306 = ap_const_lv7_64) else "0";
    icmp_ln140_fu_506_p2 <= "1" when (available_spaces_be = ap_const_lv3_0) else "0";
    icmp_ln143_fu_740_p2 <= "1" when (be_0_reg_295 = ap_const_lv7_64) else "0";
    icmp_ln150_fu_486_p2 <= "1" when (available_spaces_vi = ap_const_lv3_0) else "0";
    icmp_ln153_fu_688_p2 <= "1" when (vi_0_reg_284 = ap_const_lv7_64) else "0";
    icmp_ln160_1_fu_460_p2 <= "1" when (available_spaces_vo = ap_const_lv3_0) else "0";
    icmp_ln163_fu_636_p2 <= "1" when (vo_0_reg_273 = ap_const_lv7_64) else "0";
    icmp_ln173_fu_438_p2 <= "1" when (ac = ap_const_lv2_0) else "0";
    icmp_ln174_fu_612_p2 <= "1" when (available_spaces_bk = ap_const_lv3_4) else "0";
    icmp_ln177_fu_1003_p2 <= "1" when (bk1_0_reg_353 = ap_const_lv7_64) else "0";
    icmp_ln184_fu_592_p2 <= "1" when (available_spaces_be = ap_const_lv3_4) else "0";
    icmp_ln187_fu_950_p2 <= "1" when (be2_0_reg_341 = ap_const_lv7_64) else "0";
    icmp_ln194_fu_572_p2 <= "1" when (available_spaces_vi = ap_const_lv3_4) else "0";
    icmp_ln197_fu_897_p2 <= "1" when (vi3_0_reg_329 = ap_const_lv7_64) else "0";
    icmp_ln204_1_fu_546_p2 <= "1" when (available_spaces_vo = ap_const_lv3_4) else "0";
    icmp_ln207_fu_844_p2 <= "1" when (vo4_0_reg_317 = ap_const_lv7_64) else "0";

    inout_frame_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17, zext_ln164_1_fu_648_p1, zext_ln154_1_fu_700_p1, zext_ln144_1_fu_752_p1, zext_ln134_1_fu_804_p1, zext_ln208_2_fu_888_p1, zext_ln198_2_fu_941_p1, zext_ln188_2_fu_994_p1, zext_ln178_2_fu_1047_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            inout_frame_address0 <= zext_ln178_2_fu_1047_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            inout_frame_address0 <= zext_ln188_2_fu_994_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            inout_frame_address0 <= zext_ln198_2_fu_941_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            inout_frame_address0 <= zext_ln208_2_fu_888_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            inout_frame_address0 <= zext_ln134_1_fu_804_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            inout_frame_address0 <= zext_ln144_1_fu_752_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            inout_frame_address0 <= zext_ln154_1_fu_700_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            inout_frame_address0 <= zext_ln164_1_fu_648_p1(7 - 1 downto 0);
        else 
            inout_frame_address0 <= "XXXXXXX";
        end if; 
    end process;


    inout_frame_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            inout_frame_ce0 <= ap_const_logic_1;
        else 
            inout_frame_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    inout_frame_d0_assign_proc : process(edca_fifo_bk_q0, edca_fifo_be_q0, edca_fifo_vi_q0, edca_fifo_vo_q0, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            inout_frame_d0 <= edca_fifo_bk_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            inout_frame_d0 <= edca_fifo_be_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            inout_frame_d0 <= edca_fifo_vi_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            inout_frame_d0 <= edca_fifo_vo_q0;
        else 
            inout_frame_d0 <= "XXXXXXXX";
        end if; 
    end process;


    inout_frame_we0_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            inout_frame_we0 <= ap_const_logic_1;
        else 
            inout_frame_we0 <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln134_fu_540_p0 <= mul_ln134_fu_540_p00(2 - 1 downto 0);
    mul_ln134_fu_540_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(write_pointer_bk),9));
    mul_ln134_fu_540_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln134_fu_540_p0) * unsigned(ap_const_lv9_64), 9));
    mul_ln144_fu_520_p0 <= mul_ln144_fu_520_p00(2 - 1 downto 0);
    mul_ln144_fu_520_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(write_pointer_be),9));
    mul_ln144_fu_520_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln144_fu_520_p0) * unsigned(ap_const_lv9_64), 9));
    mul_ln154_fu_500_p0 <= mul_ln154_fu_500_p00(2 - 1 downto 0);
    mul_ln154_fu_500_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(write_pointer_vi),9));
    mul_ln154_fu_500_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln154_fu_500_p0) * unsigned(ap_const_lv9_64), 9));
    mul_ln164_fu_480_p0 <= mul_ln164_fu_480_p00(2 - 1 downto 0);
    mul_ln164_fu_480_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(write_pointer_vo),9));
    mul_ln164_fu_480_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln164_fu_480_p0) * unsigned(ap_const_lv9_64), 9));
    mul_ln178_fu_626_p0 <= mul_ln178_fu_626_p00(2 - 1 downto 0);
    mul_ln178_fu_626_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(read_pointer_bk),9));
    mul_ln178_fu_626_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln178_fu_626_p0) * unsigned(ap_const_lv9_64), 9));
    mul_ln188_fu_606_p0 <= mul_ln188_fu_606_p00(2 - 1 downto 0);
    mul_ln188_fu_606_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(read_pointer_be),9));
    mul_ln188_fu_606_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln188_fu_606_p0) * unsigned(ap_const_lv9_64), 9));
    mul_ln198_fu_586_p0 <= mul_ln198_fu_586_p00(2 - 1 downto 0);
    mul_ln198_fu_586_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(read_pointer_vi),9));
    mul_ln198_fu_586_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln198_fu_586_p0) * unsigned(ap_const_lv9_64), 9));
    mul_ln208_fu_566_p0 <= mul_ln208_fu_566_p00(2 - 1 downto 0);
    mul_ln208_fu_566_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(read_pointer_vo),9));
    mul_ln208_fu_566_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln208_fu_566_p0) * unsigned(ap_const_lv9_64), 9));
    operation_read_read_fu_106_p2 <= operation;
    or_ln160_fu_466_p2 <= (icmp_ln160_1_fu_460_p2 or grp_fu_432_p2);
    or_ln204_fu_552_p2 <= (icmp_ln204_1_fu_546_p2 or grp_fu_432_p2);
    vi_1_fu_694_p2 <= std_logic_vector(unsigned(vi_0_reg_284) + unsigned(ap_const_lv7_1));
    vi_fu_903_p2 <= std_logic_vector(unsigned(vi3_0_reg_329) + unsigned(ap_const_lv7_1));
    vo_1_fu_642_p2 <= std_logic_vector(unsigned(vo_0_reg_273) + unsigned(ap_const_lv7_1));
    vo_fu_850_p2 <= std_logic_vector(unsigned(vo4_0_reg_317) + unsigned(ap_const_lv7_1));
    zext_ln133_fu_788_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bk_0_reg_306),9));
    zext_ln134_1_fu_804_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bk_0_reg_306),64));
    zext_ln134_2_fu_836_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln134_reg_1265),64));
    zext_ln143_fu_736_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(be_0_reg_295),9));
    zext_ln144_1_fu_752_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(be_0_reg_295),64));
    zext_ln144_2_fu_784_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln144_reg_1247),64));
    zext_ln153_fu_684_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vi_0_reg_284),9));
    zext_ln154_1_fu_700_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vi_0_reg_284),64));
    zext_ln154_2_fu_732_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln154_reg_1229),64));
    zext_ln163_fu_632_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vo_0_reg_273),9));
    zext_ln164_1_fu_648_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vo_0_reg_273),64));
    zext_ln164_2_fu_680_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln164_reg_1211),64));
    zext_ln177_fu_999_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bk1_0_reg_353),9));
    zext_ln178_1_fu_1020_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln178_fu_1015_p2),64));
    zext_ln178_2_fu_1047_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bk1_0_reg_353),64));
    zext_ln187_fu_946_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(be2_0_reg_341),9));
    zext_ln188_1_fu_967_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln188_fu_962_p2),64));
    zext_ln188_2_fu_994_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(be2_0_reg_341),64));
    zext_ln197_fu_893_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vi3_0_reg_329),9));
    zext_ln198_1_fu_914_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln198_fu_909_p2),64));
    zext_ln198_2_fu_941_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vi3_0_reg_329),64));
    zext_ln207_fu_840_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vo4_0_reg_317),9));
    zext_ln208_1_fu_861_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln208_fu_856_p2),64));
    zext_ln208_2_fu_888_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vo4_0_reg_317),64));
end behav;
