-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity initial_edca_process is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    medium_state : IN STD_LOGIC_VECTOR (0 downto 0);
    current_txop_holder_i : IN STD_LOGIC_VECTOR (2 downto 0);
    current_txop_holder_o : OUT STD_LOGIC_VECTOR (2 downto 0);
    current_txop_holder_o_ap_vld : OUT STD_LOGIC;
    frame_to_transfer_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    frame_to_transfer_ce0 : OUT STD_LOGIC;
    frame_to_transfer_we0 : OUT STD_LOGIC;
    frame_to_transfer_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    frame_to_transfer_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    available_spaces_vo_i : IN STD_LOGIC_VECTOR (2 downto 0);
    available_spaces_vo_o : OUT STD_LOGIC_VECTOR (2 downto 0);
    available_spaces_vo_o_ap_vld : OUT STD_LOGIC;
    vo_backoff_counter_i : IN STD_LOGIC_VECTOR (9 downto 0);
    vo_backoff_counter_o : OUT STD_LOGIC_VECTOR (9 downto 0);
    vo_backoff_counter_o_ap_vld : OUT STD_LOGIC;
    rand_state_i : IN STD_LOGIC_VECTOR (31 downto 0);
    rand_state_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    rand_state_o_ap_vld : OUT STD_LOGIC;
    available_spaces_vi_i : IN STD_LOGIC_VECTOR (2 downto 0);
    available_spaces_vi_o : OUT STD_LOGIC_VECTOR (2 downto 0);
    available_spaces_vi_o_ap_vld : OUT STD_LOGIC;
    vi_backoff_counter_i : IN STD_LOGIC_VECTOR (9 downto 0);
    vi_backoff_counter_o : OUT STD_LOGIC_VECTOR (9 downto 0);
    vi_backoff_counter_o_ap_vld : OUT STD_LOGIC;
    CW_vi_i : IN STD_LOGIC_VECTOR (9 downto 0);
    CW_vi_o : OUT STD_LOGIC_VECTOR (9 downto 0);
    CW_vi_o_ap_vld : OUT STD_LOGIC;
    available_spaces_be_i : IN STD_LOGIC_VECTOR (2 downto 0);
    available_spaces_be_o : OUT STD_LOGIC_VECTOR (2 downto 0);
    available_spaces_be_o_ap_vld : OUT STD_LOGIC;
    be_backoff_counter_i : IN STD_LOGIC_VECTOR (9 downto 0);
    be_backoff_counter_o : OUT STD_LOGIC_VECTOR (9 downto 0);
    be_backoff_counter_o_ap_vld : OUT STD_LOGIC;
    CW_be_i : IN STD_LOGIC_VECTOR (9 downto 0);
    CW_be_o : OUT STD_LOGIC_VECTOR (9 downto 0);
    CW_be_o_ap_vld : OUT STD_LOGIC;
    available_spaces_bk_i : IN STD_LOGIC_VECTOR (2 downto 0);
    available_spaces_bk_o : OUT STD_LOGIC_VECTOR (2 downto 0);
    available_spaces_bk_o_ap_vld : OUT STD_LOGIC;
    bk_backoff_counter_i : IN STD_LOGIC_VECTOR (9 downto 0);
    bk_backoff_counter_o : OUT STD_LOGIC_VECTOR (9 downto 0);
    bk_backoff_counter_o_ap_vld : OUT STD_LOGIC;
    CW_bk_i : IN STD_LOGIC_VECTOR (9 downto 0);
    CW_bk_o : OUT STD_LOGIC_VECTOR (9 downto 0);
    CW_bk_o_ap_vld : OUT STD_LOGIC;
    write_pointer_bk_i : IN STD_LOGIC_VECTOR (1 downto 0);
    write_pointer_bk_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    write_pointer_bk_o_ap_vld : OUT STD_LOGIC;
    write_pointer_be_i : IN STD_LOGIC_VECTOR (1 downto 0);
    write_pointer_be_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    write_pointer_be_o_ap_vld : OUT STD_LOGIC;
    write_pointer_vi_i : IN STD_LOGIC_VECTOR (1 downto 0);
    write_pointer_vi_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    write_pointer_vi_o_ap_vld : OUT STD_LOGIC;
    write_pointer_vo_i : IN STD_LOGIC_VECTOR (1 downto 0);
    write_pointer_vo_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    write_pointer_vo_o_ap_vld : OUT STD_LOGIC;
    edca_queues_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    edca_queues_ce0 : OUT STD_LOGIC;
    edca_queues_we0 : OUT STD_LOGIC;
    edca_queues_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    edca_queues_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    read_pointer_bk_i : IN STD_LOGIC_VECTOR (1 downto 0);
    read_pointer_bk_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    read_pointer_bk_o_ap_vld : OUT STD_LOGIC;
    read_pointer_be_i : IN STD_LOGIC_VECTOR (1 downto 0);
    read_pointer_be_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    read_pointer_be_o_ap_vld : OUT STD_LOGIC;
    read_pointer_vi_i : IN STD_LOGIC_VECTOR (1 downto 0);
    read_pointer_vi_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    read_pointer_vi_o_ap_vld : OUT STD_LOGIC;
    read_pointer_vo_i : IN STD_LOGIC_VECTOR (1 downto 0);
    read_pointer_vo_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    read_pointer_vo_o_ap_vld : OUT STD_LOGIC );
end;


architecture behav of initial_edca_process is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (16 downto 0) := "00000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (16 downto 0) := "00000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (16 downto 0) := "00000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (16 downto 0) := "00000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (16 downto 0) := "00000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (16 downto 0) := "00000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (16 downto 0) := "00001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (16 downto 0) := "00010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (16 downto 0) := "00100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (16 downto 0) := "01000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (16 downto 0) := "10000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_slot_boundary_timing_fu_204_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal idle_waited_reg_343 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_slot_boundary_timing_fu_204_ap_ready : STD_LOGIC;
    signal grp_slot_boundary_timing_fu_204_ap_done : STD_LOGIC;
    signal tmp_fu_223_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_348 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln268_fu_235_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln268_reg_352 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln269_fu_253_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln269_reg_356 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_263_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_360 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_start_backoff_vi_fu_165_ap_ready : STD_LOGIC;
    signal grp_start_backoff_vi_fu_165_ap_done : STD_LOGIC;
    signal ap_predicate_op39_call_state8 : BOOLEAN;
    signal ap_predicate_op41_call_state8 : BOOLEAN;
    signal ap_block_state8_on_subcall_done : BOOLEAN;
    signal icmp_ln286_fu_275_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln286_reg_364 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln287_fu_303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln287_reg_368 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_313_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_372 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_start_backoff_be_fu_178_ap_ready : STD_LOGIC;
    signal grp_start_backoff_be_fu_178_ap_done : STD_LOGIC;
    signal ap_predicate_op59_call_state11 : BOOLEAN;
    signal ap_predicate_op61_call_state11 : BOOLEAN;
    signal ap_block_state11_on_subcall_done : BOOLEAN;
    signal icmp_ln304_fu_325_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln304_reg_376 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_213_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln305_reg_380 : STD_LOGIC_VECTOR (0 downto 0);
    signal current_txop_holder_6_reg_384 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal grp_start_backoff_bk_fu_191_ap_ready : STD_LOGIC;
    signal grp_start_backoff_bk_fu_191_ap_done : STD_LOGIC;
    signal ap_predicate_op78_call_state14 : BOOLEAN;
    signal ap_predicate_op80_call_state14 : BOOLEAN;
    signal ap_block_state14_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal grp_start_tx_fu_119_ap_start : STD_LOGIC;
    signal grp_start_tx_fu_119_ap_done : STD_LOGIC;
    signal grp_start_tx_fu_119_ap_idle : STD_LOGIC;
    signal grp_start_tx_fu_119_ap_ready : STD_LOGIC;
    signal grp_start_tx_fu_119_tx_frame_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_start_tx_fu_119_tx_frame_ce0 : STD_LOGIC;
    signal grp_start_tx_fu_119_tx_frame_we0 : STD_LOGIC;
    signal grp_start_tx_fu_119_tx_frame_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_start_tx_fu_119_available_spaces_bk_o : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_start_tx_fu_119_available_spaces_bk_o_ap_vld : STD_LOGIC;
    signal grp_start_tx_fu_119_write_pointer_bk_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_start_tx_fu_119_write_pointer_bk_o_ap_vld : STD_LOGIC;
    signal grp_start_tx_fu_119_available_spaces_be_o : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_start_tx_fu_119_available_spaces_be_o_ap_vld : STD_LOGIC;
    signal grp_start_tx_fu_119_write_pointer_be_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_start_tx_fu_119_write_pointer_be_o_ap_vld : STD_LOGIC;
    signal grp_start_tx_fu_119_available_spaces_vi_o : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_start_tx_fu_119_available_spaces_vi_o_ap_vld : STD_LOGIC;
    signal grp_start_tx_fu_119_write_pointer_vi_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_start_tx_fu_119_write_pointer_vi_o_ap_vld : STD_LOGIC;
    signal grp_start_tx_fu_119_available_spaces_vo_o : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_start_tx_fu_119_available_spaces_vo_o_ap_vld : STD_LOGIC;
    signal grp_start_tx_fu_119_write_pointer_vo_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_start_tx_fu_119_write_pointer_vo_o_ap_vld : STD_LOGIC;
    signal grp_start_tx_fu_119_edca_queues_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_start_tx_fu_119_edca_queues_ce0 : STD_LOGIC;
    signal grp_start_tx_fu_119_edca_queues_we0 : STD_LOGIC;
    signal grp_start_tx_fu_119_edca_queues_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_start_tx_fu_119_read_pointer_bk_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_start_tx_fu_119_read_pointer_bk_o_ap_vld : STD_LOGIC;
    signal grp_start_tx_fu_119_read_pointer_be_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_start_tx_fu_119_read_pointer_be_o_ap_vld : STD_LOGIC;
    signal grp_start_tx_fu_119_read_pointer_vi_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_start_tx_fu_119_read_pointer_vi_o_ap_vld : STD_LOGIC;
    signal grp_start_tx_fu_119_read_pointer_vo_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_start_tx_fu_119_read_pointer_vo_o_ap_vld : STD_LOGIC;
    signal grp_backoff_vo_fu_153_ap_start : STD_LOGIC;
    signal grp_backoff_vo_fu_153_ap_done : STD_LOGIC;
    signal grp_backoff_vo_fu_153_ap_idle : STD_LOGIC;
    signal grp_backoff_vo_fu_153_ap_ready : STD_LOGIC;
    signal grp_backoff_vo_fu_153_current_txop_holder : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_backoff_vo_fu_153_current_txop_holder_ap_vld : STD_LOGIC;
    signal grp_backoff_vo_fu_153_vo_backoff_counter_o : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_backoff_vo_fu_153_vo_backoff_counter_o_ap_vld : STD_LOGIC;
    signal grp_backoff_vo_fu_153_rand_state_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_backoff_vo_fu_153_rand_state_o_ap_vld : STD_LOGIC;
    signal grp_start_backoff_vi_fu_165_ap_start : STD_LOGIC;
    signal grp_start_backoff_vi_fu_165_ap_idle : STD_LOGIC;
    signal grp_start_backoff_vi_fu_165_invoke_reason : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_start_backoff_vi_fu_165_CW_vi_o : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_start_backoff_vi_fu_165_CW_vi_o_ap_vld : STD_LOGIC;
    signal grp_start_backoff_vi_fu_165_rand_state_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_start_backoff_vi_fu_165_rand_state_o_ap_vld : STD_LOGIC;
    signal grp_start_backoff_vi_fu_165_vi_backoff_counter : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_start_backoff_vi_fu_165_vi_backoff_counter_ap_vld : STD_LOGIC;
    signal grp_start_backoff_be_fu_178_ap_start : STD_LOGIC;
    signal grp_start_backoff_be_fu_178_ap_idle : STD_LOGIC;
    signal grp_start_backoff_be_fu_178_invoke_reason : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_start_backoff_be_fu_178_CW_be_o : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_start_backoff_be_fu_178_CW_be_o_ap_vld : STD_LOGIC;
    signal grp_start_backoff_be_fu_178_rand_state_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_start_backoff_be_fu_178_rand_state_o_ap_vld : STD_LOGIC;
    signal grp_start_backoff_be_fu_178_be_backoff_counter : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_start_backoff_be_fu_178_be_backoff_counter_ap_vld : STD_LOGIC;
    signal grp_start_backoff_bk_fu_191_ap_start : STD_LOGIC;
    signal grp_start_backoff_bk_fu_191_ap_idle : STD_LOGIC;
    signal grp_start_backoff_bk_fu_191_invoke_reason : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_start_backoff_bk_fu_191_CW_bk_o : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_start_backoff_bk_fu_191_CW_bk_o_ap_vld : STD_LOGIC;
    signal grp_start_backoff_bk_fu_191_rand_state_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_start_backoff_bk_fu_191_rand_state_o_ap_vld : STD_LOGIC;
    signal grp_start_backoff_bk_fu_191_bk_backoff_counter : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_start_backoff_bk_fu_191_bk_backoff_counter_ap_vld : STD_LOGIC;
    signal grp_slot_boundary_timing_fu_204_ap_start : STD_LOGIC;
    signal grp_slot_boundary_timing_fu_204_ap_idle : STD_LOGIC;
    signal grp_slot_boundary_timing_fu_204_timing_mode : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_idle_waited_0_phi_fu_112_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal idle_waited_0_reg_109 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_start_tx_fu_119_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal grp_backoff_vo_fu_153_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_start_backoff_vi_fu_165_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_start_backoff_be_fu_178_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal grp_start_backoff_bk_fu_191_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal grp_slot_boundary_timing_fu_204_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state17_on_subcall_done : BOOLEAN;
    signal add_ln278_fu_241_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln296_fu_281_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln314_fu_331_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_8_fu_293_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (16 downto 0);

    component start_tx IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        current_txop_holder : IN STD_LOGIC_VECTOR (2 downto 0);
        tx_frame_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        tx_frame_ce0 : OUT STD_LOGIC;
        tx_frame_we0 : OUT STD_LOGIC;
        tx_frame_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        tx_frame_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        available_spaces_bk_i : IN STD_LOGIC_VECTOR (2 downto 0);
        available_spaces_bk_o : OUT STD_LOGIC_VECTOR (2 downto 0);
        available_spaces_bk_o_ap_vld : OUT STD_LOGIC;
        write_pointer_bk_i : IN STD_LOGIC_VECTOR (1 downto 0);
        write_pointer_bk_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        write_pointer_bk_o_ap_vld : OUT STD_LOGIC;
        available_spaces_be_i : IN STD_LOGIC_VECTOR (2 downto 0);
        available_spaces_be_o : OUT STD_LOGIC_VECTOR (2 downto 0);
        available_spaces_be_o_ap_vld : OUT STD_LOGIC;
        write_pointer_be_i : IN STD_LOGIC_VECTOR (1 downto 0);
        write_pointer_be_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        write_pointer_be_o_ap_vld : OUT STD_LOGIC;
        available_spaces_vi_i : IN STD_LOGIC_VECTOR (2 downto 0);
        available_spaces_vi_o : OUT STD_LOGIC_VECTOR (2 downto 0);
        available_spaces_vi_o_ap_vld : OUT STD_LOGIC;
        write_pointer_vi_i : IN STD_LOGIC_VECTOR (1 downto 0);
        write_pointer_vi_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        write_pointer_vi_o_ap_vld : OUT STD_LOGIC;
        available_spaces_vo_i : IN STD_LOGIC_VECTOR (2 downto 0);
        available_spaces_vo_o : OUT STD_LOGIC_VECTOR (2 downto 0);
        available_spaces_vo_o_ap_vld : OUT STD_LOGIC;
        write_pointer_vo_i : IN STD_LOGIC_VECTOR (1 downto 0);
        write_pointer_vo_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        write_pointer_vo_o_ap_vld : OUT STD_LOGIC;
        edca_queues_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        edca_queues_ce0 : OUT STD_LOGIC;
        edca_queues_we0 : OUT STD_LOGIC;
        edca_queues_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        edca_queues_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        read_pointer_bk_i : IN STD_LOGIC_VECTOR (1 downto 0);
        read_pointer_bk_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        read_pointer_bk_o_ap_vld : OUT STD_LOGIC;
        read_pointer_be_i : IN STD_LOGIC_VECTOR (1 downto 0);
        read_pointer_be_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        read_pointer_be_o_ap_vld : OUT STD_LOGIC;
        read_pointer_vi_i : IN STD_LOGIC_VECTOR (1 downto 0);
        read_pointer_vi_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        read_pointer_vi_o_ap_vld : OUT STD_LOGIC;
        read_pointer_vo_i : IN STD_LOGIC_VECTOR (1 downto 0);
        read_pointer_vo_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        read_pointer_vo_o_ap_vld : OUT STD_LOGIC );
    end component;


    component backoff_vo IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        current_txop_holder : OUT STD_LOGIC_VECTOR (2 downto 0);
        current_txop_holder_ap_vld : OUT STD_LOGIC;
        available_spaces_vo : IN STD_LOGIC_VECTOR (2 downto 0);
        vo_backoff_counter_i : IN STD_LOGIC_VECTOR (9 downto 0);
        vo_backoff_counter_o : OUT STD_LOGIC_VECTOR (9 downto 0);
        vo_backoff_counter_o_ap_vld : OUT STD_LOGIC;
        rand_state_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rand_state_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rand_state_o_ap_vld : OUT STD_LOGIC );
    end component;


    component start_backoff_vi IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        invoke_reason : IN STD_LOGIC_VECTOR (0 downto 0);
        CW_vi_i : IN STD_LOGIC_VECTOR (9 downto 0);
        CW_vi_o : OUT STD_LOGIC_VECTOR (9 downto 0);
        CW_vi_o_ap_vld : OUT STD_LOGIC;
        rand_state_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rand_state_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rand_state_o_ap_vld : OUT STD_LOGIC;
        vi_backoff_counter : OUT STD_LOGIC_VECTOR (9 downto 0);
        vi_backoff_counter_ap_vld : OUT STD_LOGIC );
    end component;


    component start_backoff_be IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        invoke_reason : IN STD_LOGIC_VECTOR (0 downto 0);
        CW_be_i : IN STD_LOGIC_VECTOR (9 downto 0);
        CW_be_o : OUT STD_LOGIC_VECTOR (9 downto 0);
        CW_be_o_ap_vld : OUT STD_LOGIC;
        rand_state_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rand_state_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rand_state_o_ap_vld : OUT STD_LOGIC;
        be_backoff_counter : OUT STD_LOGIC_VECTOR (9 downto 0);
        be_backoff_counter_ap_vld : OUT STD_LOGIC );
    end component;


    component start_backoff_bk IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        invoke_reason : IN STD_LOGIC_VECTOR (0 downto 0);
        CW_bk_i : IN STD_LOGIC_VECTOR (9 downto 0);
        CW_bk_o : OUT STD_LOGIC_VECTOR (9 downto 0);
        CW_bk_o_ap_vld : OUT STD_LOGIC;
        rand_state_i : IN STD_LOGIC_VECTOR (31 downto 0);
        rand_state_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        rand_state_o_ap_vld : OUT STD_LOGIC;
        bk_backoff_counter : OUT STD_LOGIC_VECTOR (9 downto 0);
        bk_backoff_counter_ap_vld : OUT STD_LOGIC );
    end component;


    component slot_boundary_timing IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        timing_mode : IN STD_LOGIC_VECTOR (2 downto 0);
        medium_state : IN STD_LOGIC_VECTOR (0 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    grp_start_tx_fu_119 : component start_tx
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_start_tx_fu_119_ap_start,
        ap_done => grp_start_tx_fu_119_ap_done,
        ap_idle => grp_start_tx_fu_119_ap_idle,
        ap_ready => grp_start_tx_fu_119_ap_ready,
        current_txop_holder => current_txop_holder_6_reg_384,
        tx_frame_address0 => grp_start_tx_fu_119_tx_frame_address0,
        tx_frame_ce0 => grp_start_tx_fu_119_tx_frame_ce0,
        tx_frame_we0 => grp_start_tx_fu_119_tx_frame_we0,
        tx_frame_d0 => grp_start_tx_fu_119_tx_frame_d0,
        tx_frame_q0 => frame_to_transfer_q0,
        available_spaces_bk_i => available_spaces_bk_i,
        available_spaces_bk_o => grp_start_tx_fu_119_available_spaces_bk_o,
        available_spaces_bk_o_ap_vld => grp_start_tx_fu_119_available_spaces_bk_o_ap_vld,
        write_pointer_bk_i => write_pointer_bk_i,
        write_pointer_bk_o => grp_start_tx_fu_119_write_pointer_bk_o,
        write_pointer_bk_o_ap_vld => grp_start_tx_fu_119_write_pointer_bk_o_ap_vld,
        available_spaces_be_i => available_spaces_be_i,
        available_spaces_be_o => grp_start_tx_fu_119_available_spaces_be_o,
        available_spaces_be_o_ap_vld => grp_start_tx_fu_119_available_spaces_be_o_ap_vld,
        write_pointer_be_i => write_pointer_be_i,
        write_pointer_be_o => grp_start_tx_fu_119_write_pointer_be_o,
        write_pointer_be_o_ap_vld => grp_start_tx_fu_119_write_pointer_be_o_ap_vld,
        available_spaces_vi_i => available_spaces_vi_i,
        available_spaces_vi_o => grp_start_tx_fu_119_available_spaces_vi_o,
        available_spaces_vi_o_ap_vld => grp_start_tx_fu_119_available_spaces_vi_o_ap_vld,
        write_pointer_vi_i => write_pointer_vi_i,
        write_pointer_vi_o => grp_start_tx_fu_119_write_pointer_vi_o,
        write_pointer_vi_o_ap_vld => grp_start_tx_fu_119_write_pointer_vi_o_ap_vld,
        available_spaces_vo_i => available_spaces_vo_i,
        available_spaces_vo_o => grp_start_tx_fu_119_available_spaces_vo_o,
        available_spaces_vo_o_ap_vld => grp_start_tx_fu_119_available_spaces_vo_o_ap_vld,
        write_pointer_vo_i => write_pointer_vo_i,
        write_pointer_vo_o => grp_start_tx_fu_119_write_pointer_vo_o,
        write_pointer_vo_o_ap_vld => grp_start_tx_fu_119_write_pointer_vo_o_ap_vld,
        edca_queues_address0 => grp_start_tx_fu_119_edca_queues_address0,
        edca_queues_ce0 => grp_start_tx_fu_119_edca_queues_ce0,
        edca_queues_we0 => grp_start_tx_fu_119_edca_queues_we0,
        edca_queues_d0 => grp_start_tx_fu_119_edca_queues_d0,
        edca_queues_q0 => edca_queues_q0,
        read_pointer_bk_i => read_pointer_bk_i,
        read_pointer_bk_o => grp_start_tx_fu_119_read_pointer_bk_o,
        read_pointer_bk_o_ap_vld => grp_start_tx_fu_119_read_pointer_bk_o_ap_vld,
        read_pointer_be_i => read_pointer_be_i,
        read_pointer_be_o => grp_start_tx_fu_119_read_pointer_be_o,
        read_pointer_be_o_ap_vld => grp_start_tx_fu_119_read_pointer_be_o_ap_vld,
        read_pointer_vi_i => read_pointer_vi_i,
        read_pointer_vi_o => grp_start_tx_fu_119_read_pointer_vi_o,
        read_pointer_vi_o_ap_vld => grp_start_tx_fu_119_read_pointer_vi_o_ap_vld,
        read_pointer_vo_i => read_pointer_vo_i,
        read_pointer_vo_o => grp_start_tx_fu_119_read_pointer_vo_o,
        read_pointer_vo_o_ap_vld => grp_start_tx_fu_119_read_pointer_vo_o_ap_vld);

    grp_backoff_vo_fu_153 : component backoff_vo
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_backoff_vo_fu_153_ap_start,
        ap_done => grp_backoff_vo_fu_153_ap_done,
        ap_idle => grp_backoff_vo_fu_153_ap_idle,
        ap_ready => grp_backoff_vo_fu_153_ap_ready,
        current_txop_holder => grp_backoff_vo_fu_153_current_txop_holder,
        current_txop_holder_ap_vld => grp_backoff_vo_fu_153_current_txop_holder_ap_vld,
        available_spaces_vo => available_spaces_vo_i,
        vo_backoff_counter_i => vo_backoff_counter_i,
        vo_backoff_counter_o => grp_backoff_vo_fu_153_vo_backoff_counter_o,
        vo_backoff_counter_o_ap_vld => grp_backoff_vo_fu_153_vo_backoff_counter_o_ap_vld,
        rand_state_i => rand_state_i,
        rand_state_o => grp_backoff_vo_fu_153_rand_state_o,
        rand_state_o_ap_vld => grp_backoff_vo_fu_153_rand_state_o_ap_vld);

    grp_start_backoff_vi_fu_165 : component start_backoff_vi
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_start_backoff_vi_fu_165_ap_start,
        ap_done => grp_start_backoff_vi_fu_165_ap_done,
        ap_idle => grp_start_backoff_vi_fu_165_ap_idle,
        ap_ready => grp_start_backoff_vi_fu_165_ap_ready,
        invoke_reason => grp_start_backoff_vi_fu_165_invoke_reason,
        CW_vi_i => CW_vi_i,
        CW_vi_o => grp_start_backoff_vi_fu_165_CW_vi_o,
        CW_vi_o_ap_vld => grp_start_backoff_vi_fu_165_CW_vi_o_ap_vld,
        rand_state_i => rand_state_i,
        rand_state_o => grp_start_backoff_vi_fu_165_rand_state_o,
        rand_state_o_ap_vld => grp_start_backoff_vi_fu_165_rand_state_o_ap_vld,
        vi_backoff_counter => grp_start_backoff_vi_fu_165_vi_backoff_counter,
        vi_backoff_counter_ap_vld => grp_start_backoff_vi_fu_165_vi_backoff_counter_ap_vld);

    grp_start_backoff_be_fu_178 : component start_backoff_be
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_start_backoff_be_fu_178_ap_start,
        ap_done => grp_start_backoff_be_fu_178_ap_done,
        ap_idle => grp_start_backoff_be_fu_178_ap_idle,
        ap_ready => grp_start_backoff_be_fu_178_ap_ready,
        invoke_reason => grp_start_backoff_be_fu_178_invoke_reason,
        CW_be_i => CW_be_i,
        CW_be_o => grp_start_backoff_be_fu_178_CW_be_o,
        CW_be_o_ap_vld => grp_start_backoff_be_fu_178_CW_be_o_ap_vld,
        rand_state_i => rand_state_i,
        rand_state_o => grp_start_backoff_be_fu_178_rand_state_o,
        rand_state_o_ap_vld => grp_start_backoff_be_fu_178_rand_state_o_ap_vld,
        be_backoff_counter => grp_start_backoff_be_fu_178_be_backoff_counter,
        be_backoff_counter_ap_vld => grp_start_backoff_be_fu_178_be_backoff_counter_ap_vld);

    grp_start_backoff_bk_fu_191 : component start_backoff_bk
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_start_backoff_bk_fu_191_ap_start,
        ap_done => grp_start_backoff_bk_fu_191_ap_done,
        ap_idle => grp_start_backoff_bk_fu_191_ap_idle,
        ap_ready => grp_start_backoff_bk_fu_191_ap_ready,
        invoke_reason => grp_start_backoff_bk_fu_191_invoke_reason,
        CW_bk_i => CW_bk_i,
        CW_bk_o => grp_start_backoff_bk_fu_191_CW_bk_o,
        CW_bk_o_ap_vld => grp_start_backoff_bk_fu_191_CW_bk_o_ap_vld,
        rand_state_i => rand_state_i,
        rand_state_o => grp_start_backoff_bk_fu_191_rand_state_o,
        rand_state_o_ap_vld => grp_start_backoff_bk_fu_191_rand_state_o_ap_vld,
        bk_backoff_counter => grp_start_backoff_bk_fu_191_bk_backoff_counter,
        bk_backoff_counter_ap_vld => grp_start_backoff_bk_fu_191_bk_backoff_counter_ap_vld);

    grp_slot_boundary_timing_fu_204 : component slot_boundary_timing
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_slot_boundary_timing_fu_204_ap_start,
        ap_done => grp_slot_boundary_timing_fu_204_ap_done,
        ap_idle => grp_slot_boundary_timing_fu_204_ap_idle,
        ap_ready => grp_slot_boundary_timing_fu_204_ap_ready,
        timing_mode => grp_slot_boundary_timing_fu_204_timing_mode,
        medium_state => medium_state,
        ap_return => grp_slot_boundary_timing_fu_204_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_backoff_vo_fu_153_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_backoff_vo_fu_153_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_phi_mux_idle_waited_0_phi_fu_112_p4 = ap_const_lv1_1))) then 
                    grp_backoff_vo_fu_153_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_backoff_vo_fu_153_ap_ready = ap_const_logic_1)) then 
                    grp_backoff_vo_fu_153_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_slot_boundary_timing_fu_204_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_slot_boundary_timing_fu_204_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_boolean_0 = ap_block_state14_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state14) and (grp_fu_213_p2 = ap_const_lv1_1)))) then 
                    grp_slot_boundary_timing_fu_204_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_slot_boundary_timing_fu_204_ap_ready = ap_const_logic_1)) then 
                    grp_slot_boundary_timing_fu_204_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_start_backoff_be_fu_178_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_start_backoff_be_fu_178_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                    grp_start_backoff_be_fu_178_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_start_backoff_be_fu_178_ap_ready = ap_const_logic_1)) then 
                    grp_start_backoff_be_fu_178_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_start_backoff_bk_fu_191_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_start_backoff_bk_fu_191_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                    grp_start_backoff_bk_fu_191_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_start_backoff_bk_fu_191_ap_ready = ap_const_logic_1)) then 
                    grp_start_backoff_bk_fu_191_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_start_backoff_vi_fu_165_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_start_backoff_vi_fu_165_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                    grp_start_backoff_vi_fu_165_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_start_backoff_vi_fu_165_ap_ready = ap_const_logic_1)) then 
                    grp_start_backoff_vi_fu_165_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_start_tx_fu_119_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_start_tx_fu_119_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state14_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state14) and (grp_fu_213_p2 = ap_const_lv1_0))) then 
                    grp_start_tx_fu_119_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_start_tx_fu_119_ap_ready = ap_const_logic_1)) then 
                    grp_start_tx_fu_119_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    idle_waited_0_reg_109_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_slot_boundary_timing_fu_204_ap_done = ap_const_logic_1))) then 
                idle_waited_0_reg_109 <= grp_slot_boundary_timing_fu_204_ap_return;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                idle_waited_0_reg_109 <= idle_waited_reg_343;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state14_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                current_txop_holder_6_reg_384 <= current_txop_holder_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_fu_223_p3 = ap_const_lv1_0))) then
                icmp_ln268_reg_352 <= icmp_ln268_fu_235_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln268_fu_235_p2 = ap_const_lv1_1) and (tmp_fu_223_p3 = ap_const_lv1_0))) then
                icmp_ln269_reg_356 <= icmp_ln269_fu_253_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (tmp_7_fu_263_p3 = ap_const_lv1_0))) then
                icmp_ln286_reg_364 <= icmp_ln286_fu_275_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (icmp_ln286_fu_275_p2 = ap_const_lv1_1) and (tmp_7_fu_263_p3 = ap_const_lv1_0))) then
                icmp_ln287_reg_368 <= icmp_ln287_fu_303_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11) and (tmp_9_fu_313_p3 = ap_const_lv1_0))) then
                icmp_ln304_reg_376 <= icmp_ln304_fu_325_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln304_fu_325_p2 = ap_const_lv1_1) and (tmp_9_fu_313_p3 = ap_const_lv1_0))) then
                icmp_ln305_reg_380 <= grp_fu_213_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_slot_boundary_timing_fu_204_ap_done = ap_const_logic_1))) then
                idle_waited_reg_343 <= grp_slot_boundary_timing_fu_204_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8_on_subcall_done))) then
                tmp_7_reg_360 <= available_spaces_be_i(2 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                tmp_9_reg_372 <= available_spaces_bk_i(2 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                tmp_reg_348 <= available_spaces_vi_i(2 downto 2);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, grp_slot_boundary_timing_fu_204_ap_done, tmp_fu_223_p3, ap_CS_fsm_state6, icmp_ln268_fu_235_p2, icmp_ln269_fu_253_p2, tmp_7_fu_263_p3, ap_CS_fsm_state8, ap_block_state8_on_subcall_done, icmp_ln286_fu_275_p2, icmp_ln287_fu_303_p2, tmp_9_fu_313_p3, ap_CS_fsm_state11, ap_block_state11_on_subcall_done, icmp_ln304_fu_325_p2, grp_fu_213_p2, ap_CS_fsm_state14, ap_block_state14_on_subcall_done, ap_CS_fsm_state16, grp_backoff_vo_fu_153_ap_done, ap_phi_mux_idle_waited_0_phi_fu_112_p4, ap_CS_fsm_state17, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_block_state17_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_slot_boundary_timing_fu_204_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_phi_mux_idle_waited_0_phi_fu_112_p4 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((grp_backoff_vo_fu_153_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln269_fu_253_p2 = ap_const_lv1_1) and (icmp_ln268_fu_235_p2 = ap_const_lv1_1) and (tmp_fu_223_p3 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln269_fu_253_p2 = ap_const_lv1_0) and (icmp_ln268_fu_235_p2 = ap_const_lv1_1) and (tmp_fu_223_p3 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (icmp_ln287_fu_303_p2 = ap_const_lv1_1) and (icmp_ln286_fu_275_p2 = ap_const_lv1_1) and (tmp_7_fu_263_p3 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (icmp_ln286_fu_275_p2 = ap_const_lv1_1) and (icmp_ln287_fu_303_p2 = ap_const_lv1_0) and (tmp_7_fu_263_p3 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8_on_subcall_done) and ((tmp_7_fu_263_p3 = ap_const_lv1_1) or (icmp_ln286_fu_275_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11) and (grp_fu_213_p2 = ap_const_lv1_1) and (icmp_ln304_fu_325_p2 = ap_const_lv1_1) and (tmp_9_fu_313_p3 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                elsif (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln304_fu_325_p2 = ap_const_lv1_1) and (grp_fu_213_p2 = ap_const_lv1_0) and (tmp_9_fu_313_p3 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                elsif (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11) and ((tmp_9_fu_313_p3 = ap_const_lv1_1) or (icmp_ln304_fu_325_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((ap_const_boolean_0 = ap_block_state14_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state14) and (grp_fu_213_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                elsif (((ap_const_boolean_0 = ap_block_state14_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state14) and (grp_fu_213_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state16 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_slot_boundary_timing_fu_204_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                if (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXX";
        end case;
    end process;

    CW_be_o_assign_proc : process(CW_be_i, ap_CS_fsm_state11, ap_predicate_op59_call_state11, ap_predicate_op61_call_state11, grp_start_backoff_be_fu_178_CW_be_o, grp_start_backoff_be_fu_178_CW_be_o_ap_vld)
    begin
        if ((((ap_predicate_op61_call_state11 = ap_const_boolean_1) and (grp_start_backoff_be_fu_178_CW_be_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((ap_predicate_op59_call_state11 = ap_const_boolean_1) and (grp_start_backoff_be_fu_178_CW_be_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            CW_be_o <= grp_start_backoff_be_fu_178_CW_be_o;
        else 
            CW_be_o <= CW_be_i;
        end if; 
    end process;


    CW_be_o_ap_vld_assign_proc : process(ap_CS_fsm_state11, ap_predicate_op59_call_state11, ap_predicate_op61_call_state11, grp_start_backoff_be_fu_178_CW_be_o_ap_vld)
    begin
        if ((((ap_predicate_op61_call_state11 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((ap_predicate_op59_call_state11 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            CW_be_o_ap_vld <= grp_start_backoff_be_fu_178_CW_be_o_ap_vld;
        else 
            CW_be_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    CW_bk_o_assign_proc : process(CW_bk_i, ap_CS_fsm_state14, ap_predicate_op78_call_state14, ap_predicate_op80_call_state14, grp_start_backoff_bk_fu_191_CW_bk_o, grp_start_backoff_bk_fu_191_CW_bk_o_ap_vld)
    begin
        if ((((ap_predicate_op80_call_state14 = ap_const_boolean_1) and (grp_start_backoff_bk_fu_191_CW_bk_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((ap_predicate_op78_call_state14 = ap_const_boolean_1) and (grp_start_backoff_bk_fu_191_CW_bk_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            CW_bk_o <= grp_start_backoff_bk_fu_191_CW_bk_o;
        else 
            CW_bk_o <= CW_bk_i;
        end if; 
    end process;


    CW_bk_o_ap_vld_assign_proc : process(ap_CS_fsm_state14, ap_predicate_op78_call_state14, ap_predicate_op80_call_state14, grp_start_backoff_bk_fu_191_CW_bk_o_ap_vld)
    begin
        if ((((ap_predicate_op80_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((ap_predicate_op78_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            CW_bk_o_ap_vld <= grp_start_backoff_bk_fu_191_CW_bk_o_ap_vld;
        else 
            CW_bk_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    CW_vi_o_assign_proc : process(CW_vi_i, ap_CS_fsm_state8, ap_predicate_op39_call_state8, ap_predicate_op41_call_state8, grp_start_backoff_vi_fu_165_CW_vi_o, grp_start_backoff_vi_fu_165_CW_vi_o_ap_vld)
    begin
        if ((((ap_predicate_op41_call_state8 = ap_const_boolean_1) and (grp_start_backoff_vi_fu_165_CW_vi_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((ap_predicate_op39_call_state8 = ap_const_boolean_1) and (grp_start_backoff_vi_fu_165_CW_vi_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            CW_vi_o <= grp_start_backoff_vi_fu_165_CW_vi_o;
        else 
            CW_vi_o <= CW_vi_i;
        end if; 
    end process;


    CW_vi_o_ap_vld_assign_proc : process(ap_CS_fsm_state8, ap_predicate_op39_call_state8, ap_predicate_op41_call_state8, grp_start_backoff_vi_fu_165_CW_vi_o_ap_vld)
    begin
        if ((((ap_predicate_op41_call_state8 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((ap_predicate_op39_call_state8 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            CW_vi_o_ap_vld <= grp_start_backoff_vi_fu_165_CW_vi_o_ap_vld;
        else 
            CW_vi_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add_ln278_fu_241_p2 <= std_logic_vector(unsigned(vi_backoff_counter_i) + unsigned(ap_const_lv10_3FF));
    add_ln296_fu_281_p2 <= std_logic_vector(unsigned(be_backoff_counter_i) + unsigned(ap_const_lv10_3FF));
    add_ln314_fu_331_p2 <= std_logic_vector(unsigned(bk_backoff_counter_i) + unsigned(ap_const_lv10_3FF));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state11_on_subcall_done_assign_proc : process(grp_start_backoff_be_fu_178_ap_done, ap_predicate_op59_call_state11, ap_predicate_op61_call_state11)
    begin
                ap_block_state11_on_subcall_done <= (((grp_start_backoff_be_fu_178_ap_done = ap_const_logic_0) and (ap_predicate_op61_call_state11 = ap_const_boolean_1)) or ((grp_start_backoff_be_fu_178_ap_done = ap_const_logic_0) and (ap_predicate_op59_call_state11 = ap_const_boolean_1)));
    end process;


    ap_block_state14_on_subcall_done_assign_proc : process(grp_start_backoff_bk_fu_191_ap_done, ap_predicate_op78_call_state14, ap_predicate_op80_call_state14)
    begin
                ap_block_state14_on_subcall_done <= (((grp_start_backoff_bk_fu_191_ap_done = ap_const_logic_0) and (ap_predicate_op80_call_state14 = ap_const_boolean_1)) or ((grp_start_backoff_bk_fu_191_ap_done = ap_const_logic_0) and (ap_predicate_op78_call_state14 = ap_const_boolean_1)));
    end process;


    ap_block_state17_on_subcall_done_assign_proc : process(grp_start_tx_fu_119_ap_done, idle_waited_0_reg_109)
    begin
                ap_block_state17_on_subcall_done <= ((grp_start_tx_fu_119_ap_done = ap_const_logic_0) and (idle_waited_0_reg_109 = ap_const_lv1_1));
    end process;


    ap_block_state8_on_subcall_done_assign_proc : process(grp_start_backoff_vi_fu_165_ap_done, ap_predicate_op39_call_state8, ap_predicate_op41_call_state8)
    begin
                ap_block_state8_on_subcall_done <= (((grp_start_backoff_vi_fu_165_ap_done = ap_const_logic_0) and (ap_predicate_op41_call_state8 = ap_const_boolean_1)) or ((grp_start_backoff_vi_fu_165_ap_done = ap_const_logic_0) and (ap_predicate_op39_call_state8 = ap_const_boolean_1)));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state17, ap_block_state17_on_subcall_done)
    begin
        if ((((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_idle_waited_0_phi_fu_112_p4 <= idle_waited_0_reg_109;

    ap_predicate_op39_call_state8_assign_proc : process(tmp_reg_348, icmp_ln268_reg_352, icmp_ln269_reg_356)
    begin
                ap_predicate_op39_call_state8 <= ((icmp_ln269_reg_356 = ap_const_lv1_0) and (icmp_ln268_reg_352 = ap_const_lv1_1) and (tmp_reg_348 = ap_const_lv1_0));
    end process;


    ap_predicate_op41_call_state8_assign_proc : process(tmp_reg_348, icmp_ln268_reg_352, icmp_ln269_reg_356)
    begin
                ap_predicate_op41_call_state8 <= ((icmp_ln269_reg_356 = ap_const_lv1_1) and (icmp_ln268_reg_352 = ap_const_lv1_1) and (tmp_reg_348 = ap_const_lv1_0));
    end process;


    ap_predicate_op59_call_state11_assign_proc : process(tmp_7_reg_360, icmp_ln286_reg_364, icmp_ln287_reg_368)
    begin
                ap_predicate_op59_call_state11 <= ((icmp_ln286_reg_364 = ap_const_lv1_1) and (icmp_ln287_reg_368 = ap_const_lv1_0) and (tmp_7_reg_360 = ap_const_lv1_0));
    end process;


    ap_predicate_op61_call_state11_assign_proc : process(tmp_7_reg_360, icmp_ln286_reg_364, icmp_ln287_reg_368)
    begin
                ap_predicate_op61_call_state11 <= ((icmp_ln287_reg_368 = ap_const_lv1_1) and (icmp_ln286_reg_364 = ap_const_lv1_1) and (tmp_7_reg_360 = ap_const_lv1_0));
    end process;


    ap_predicate_op78_call_state14_assign_proc : process(tmp_9_reg_372, icmp_ln304_reg_376, icmp_ln305_reg_380)
    begin
                ap_predicate_op78_call_state14 <= ((icmp_ln304_reg_376 = ap_const_lv1_1) and (icmp_ln305_reg_380 = ap_const_lv1_0) and (tmp_9_reg_372 = ap_const_lv1_0));
    end process;


    ap_predicate_op80_call_state14_assign_proc : process(tmp_9_reg_372, icmp_ln304_reg_376, icmp_ln305_reg_380)
    begin
                ap_predicate_op80_call_state14 <= ((icmp_ln305_reg_380 = ap_const_lv1_1) and (icmp_ln304_reg_376 = ap_const_lv1_1) and (tmp_9_reg_372 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state17, ap_block_state17_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    available_spaces_be_o_assign_proc : process(available_spaces_be_i, grp_start_tx_fu_119_available_spaces_be_o, grp_start_tx_fu_119_available_spaces_be_o_ap_vld, idle_waited_0_reg_109, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (grp_start_tx_fu_119_available_spaces_be_o_ap_vld = ap_const_logic_1) and (idle_waited_0_reg_109 = ap_const_lv1_1))) then 
            available_spaces_be_o <= grp_start_tx_fu_119_available_spaces_be_o;
        else 
            available_spaces_be_o <= available_spaces_be_i;
        end if; 
    end process;


    available_spaces_be_o_ap_vld_assign_proc : process(grp_start_tx_fu_119_available_spaces_be_o_ap_vld, idle_waited_0_reg_109, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (idle_waited_0_reg_109 = ap_const_lv1_1))) then 
            available_spaces_be_o_ap_vld <= grp_start_tx_fu_119_available_spaces_be_o_ap_vld;
        else 
            available_spaces_be_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    available_spaces_bk_o_assign_proc : process(available_spaces_bk_i, grp_start_tx_fu_119_available_spaces_bk_o, grp_start_tx_fu_119_available_spaces_bk_o_ap_vld, idle_waited_0_reg_109, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (grp_start_tx_fu_119_available_spaces_bk_o_ap_vld = ap_const_logic_1) and (idle_waited_0_reg_109 = ap_const_lv1_1))) then 
            available_spaces_bk_o <= grp_start_tx_fu_119_available_spaces_bk_o;
        else 
            available_spaces_bk_o <= available_spaces_bk_i;
        end if; 
    end process;


    available_spaces_bk_o_ap_vld_assign_proc : process(grp_start_tx_fu_119_available_spaces_bk_o_ap_vld, idle_waited_0_reg_109, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (idle_waited_0_reg_109 = ap_const_lv1_1))) then 
            available_spaces_bk_o_ap_vld <= grp_start_tx_fu_119_available_spaces_bk_o_ap_vld;
        else 
            available_spaces_bk_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    available_spaces_vi_o_assign_proc : process(available_spaces_vi_i, grp_start_tx_fu_119_available_spaces_vi_o, grp_start_tx_fu_119_available_spaces_vi_o_ap_vld, idle_waited_0_reg_109, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (grp_start_tx_fu_119_available_spaces_vi_o_ap_vld = ap_const_logic_1) and (idle_waited_0_reg_109 = ap_const_lv1_1))) then 
            available_spaces_vi_o <= grp_start_tx_fu_119_available_spaces_vi_o;
        else 
            available_spaces_vi_o <= available_spaces_vi_i;
        end if; 
    end process;


    available_spaces_vi_o_ap_vld_assign_proc : process(grp_start_tx_fu_119_available_spaces_vi_o_ap_vld, idle_waited_0_reg_109, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (idle_waited_0_reg_109 = ap_const_lv1_1))) then 
            available_spaces_vi_o_ap_vld <= grp_start_tx_fu_119_available_spaces_vi_o_ap_vld;
        else 
            available_spaces_vi_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    available_spaces_vo_o_assign_proc : process(available_spaces_vo_i, grp_start_tx_fu_119_available_spaces_vo_o, grp_start_tx_fu_119_available_spaces_vo_o_ap_vld, idle_waited_0_reg_109, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (grp_start_tx_fu_119_available_spaces_vo_o_ap_vld = ap_const_logic_1) and (idle_waited_0_reg_109 = ap_const_lv1_1))) then 
            available_spaces_vo_o <= grp_start_tx_fu_119_available_spaces_vo_o;
        else 
            available_spaces_vo_o <= available_spaces_vo_i;
        end if; 
    end process;


    available_spaces_vo_o_ap_vld_assign_proc : process(grp_start_tx_fu_119_available_spaces_vo_o_ap_vld, idle_waited_0_reg_109, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (idle_waited_0_reg_109 = ap_const_lv1_1))) then 
            available_spaces_vo_o_ap_vld <= grp_start_tx_fu_119_available_spaces_vo_o_ap_vld;
        else 
            available_spaces_vo_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    be_backoff_counter_o_assign_proc : process(be_backoff_counter_i, tmp_7_fu_263_p3, ap_CS_fsm_state8, ap_block_state8_on_subcall_done, icmp_ln286_fu_275_p2, ap_CS_fsm_state11, ap_predicate_op59_call_state11, ap_predicate_op61_call_state11, grp_start_backoff_be_fu_178_be_backoff_counter, grp_start_backoff_be_fu_178_be_backoff_counter_ap_vld, add_ln296_fu_281_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (icmp_ln286_fu_275_p2 = ap_const_lv1_0) and (tmp_7_fu_263_p3 = ap_const_lv1_0))) then 
            be_backoff_counter_o <= add_ln296_fu_281_p2;
        elsif ((((ap_predicate_op61_call_state11 = ap_const_boolean_1) and (grp_start_backoff_be_fu_178_be_backoff_counter_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((ap_predicate_op59_call_state11 = ap_const_boolean_1) and (grp_start_backoff_be_fu_178_be_backoff_counter_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            be_backoff_counter_o <= grp_start_backoff_be_fu_178_be_backoff_counter;
        else 
            be_backoff_counter_o <= be_backoff_counter_i;
        end if; 
    end process;


    be_backoff_counter_o_ap_vld_assign_proc : process(tmp_7_fu_263_p3, ap_CS_fsm_state8, ap_block_state8_on_subcall_done, icmp_ln286_fu_275_p2, ap_CS_fsm_state11, ap_predicate_op59_call_state11, ap_predicate_op61_call_state11, grp_start_backoff_be_fu_178_be_backoff_counter_ap_vld)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (icmp_ln286_fu_275_p2 = ap_const_lv1_0) and (tmp_7_fu_263_p3 = ap_const_lv1_0))) then 
            be_backoff_counter_o_ap_vld <= ap_const_logic_1;
        elsif ((((ap_predicate_op61_call_state11 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((ap_predicate_op59_call_state11 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            be_backoff_counter_o_ap_vld <= grp_start_backoff_be_fu_178_be_backoff_counter_ap_vld;
        else 
            be_backoff_counter_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    bk_backoff_counter_o_assign_proc : process(bk_backoff_counter_i, tmp_9_fu_313_p3, ap_CS_fsm_state11, ap_block_state11_on_subcall_done, icmp_ln304_fu_325_p2, ap_CS_fsm_state14, ap_predicate_op78_call_state14, ap_predicate_op80_call_state14, grp_start_backoff_bk_fu_191_bk_backoff_counter, grp_start_backoff_bk_fu_191_bk_backoff_counter_ap_vld, add_ln314_fu_331_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln304_fu_325_p2 = ap_const_lv1_0) and (tmp_9_fu_313_p3 = ap_const_lv1_0))) then 
            bk_backoff_counter_o <= add_ln314_fu_331_p2;
        elsif ((((ap_predicate_op80_call_state14 = ap_const_boolean_1) and (grp_start_backoff_bk_fu_191_bk_backoff_counter_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((ap_predicate_op78_call_state14 = ap_const_boolean_1) and (grp_start_backoff_bk_fu_191_bk_backoff_counter_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            bk_backoff_counter_o <= grp_start_backoff_bk_fu_191_bk_backoff_counter;
        else 
            bk_backoff_counter_o <= bk_backoff_counter_i;
        end if; 
    end process;


    bk_backoff_counter_o_ap_vld_assign_proc : process(tmp_9_fu_313_p3, ap_CS_fsm_state11, ap_block_state11_on_subcall_done, icmp_ln304_fu_325_p2, ap_CS_fsm_state14, ap_predicate_op78_call_state14, ap_predicate_op80_call_state14, grp_start_backoff_bk_fu_191_bk_backoff_counter_ap_vld)
    begin
        if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln304_fu_325_p2 = ap_const_lv1_0) and (tmp_9_fu_313_p3 = ap_const_lv1_0))) then 
            bk_backoff_counter_o_ap_vld <= ap_const_logic_1;
        elsif ((((ap_predicate_op80_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((ap_predicate_op78_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            bk_backoff_counter_o_ap_vld <= grp_start_backoff_bk_fu_191_bk_backoff_counter_ap_vld;
        else 
            bk_backoff_counter_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    current_txop_holder_o_assign_proc : process(current_txop_holder_i, grp_backoff_vo_fu_153_current_txop_holder, grp_backoff_vo_fu_153_current_txop_holder_ap_vld, idle_waited_0_reg_109, ap_CS_fsm_state17, ap_CS_fsm_state5, ap_CS_fsm_state9, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_block_state17_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17) and (idle_waited_0_reg_109 = ap_const_lv1_1))) then 
            current_txop_holder_o <= ap_const_lv3_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            current_txop_holder_o <= ap_const_lv3_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            current_txop_holder_o <= ap_const_lv3_2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            current_txop_holder_o <= ap_const_lv3_3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_backoff_vo_fu_153_current_txop_holder_ap_vld = ap_const_logic_1))) then 
            current_txop_holder_o <= grp_backoff_vo_fu_153_current_txop_holder;
        else 
            current_txop_holder_o <= current_txop_holder_i;
        end if; 
    end process;


    current_txop_holder_o_ap_vld_assign_proc : process(grp_backoff_vo_fu_153_current_txop_holder_ap_vld, idle_waited_0_reg_109, ap_CS_fsm_state17, ap_CS_fsm_state5, ap_CS_fsm_state9, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_block_state17_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state9) or ((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17) and (idle_waited_0_reg_109 = ap_const_lv1_1)))) then 
            current_txop_holder_o_ap_vld <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            current_txop_holder_o_ap_vld <= grp_backoff_vo_fu_153_current_txop_holder_ap_vld;
        else 
            current_txop_holder_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    edca_queues_address0 <= grp_start_tx_fu_119_edca_queues_address0;
    edca_queues_ce0 <= grp_start_tx_fu_119_edca_queues_ce0;
    edca_queues_d0 <= grp_start_tx_fu_119_edca_queues_d0;
    edca_queues_we0 <= grp_start_tx_fu_119_edca_queues_we0;
    frame_to_transfer_address0 <= grp_start_tx_fu_119_tx_frame_address0;
    frame_to_transfer_ce0 <= grp_start_tx_fu_119_tx_frame_ce0;
    frame_to_transfer_d0 <= grp_start_tx_fu_119_tx_frame_d0;
    frame_to_transfer_we0 <= grp_start_tx_fu_119_tx_frame_we0;
    grp_backoff_vo_fu_153_ap_start <= grp_backoff_vo_fu_153_ap_start_reg;
    grp_fu_213_p2 <= "1" when (current_txop_holder_i = ap_const_lv3_0) else "0";
    grp_slot_boundary_timing_fu_204_ap_start <= grp_slot_boundary_timing_fu_204_ap_start_reg;

    grp_slot_boundary_timing_fu_204_timing_mode_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_slot_boundary_timing_fu_204_timing_mode <= ap_const_lv3_3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_slot_boundary_timing_fu_204_timing_mode <= ap_const_lv3_4;
        else 
            grp_slot_boundary_timing_fu_204_timing_mode <= "XXX";
        end if; 
    end process;

    grp_start_backoff_be_fu_178_ap_start <= grp_start_backoff_be_fu_178_ap_start_reg;

    grp_start_backoff_be_fu_178_invoke_reason_assign_proc : process(ap_CS_fsm_state11, ap_predicate_op59_call_state11, ap_predicate_op61_call_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
            if ((ap_predicate_op61_call_state11 = ap_const_boolean_1)) then 
                grp_start_backoff_be_fu_178_invoke_reason <= ap_const_lv1_0;
            elsif ((ap_predicate_op59_call_state11 = ap_const_boolean_1)) then 
                grp_start_backoff_be_fu_178_invoke_reason <= ap_const_lv1_1;
            else 
                grp_start_backoff_be_fu_178_invoke_reason <= "X";
            end if;
        else 
            grp_start_backoff_be_fu_178_invoke_reason <= "X";
        end if; 
    end process;

    grp_start_backoff_bk_fu_191_ap_start <= grp_start_backoff_bk_fu_191_ap_start_reg;

    grp_start_backoff_bk_fu_191_invoke_reason_assign_proc : process(ap_CS_fsm_state14, ap_predicate_op78_call_state14, ap_predicate_op80_call_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
            if ((ap_predicate_op80_call_state14 = ap_const_boolean_1)) then 
                grp_start_backoff_bk_fu_191_invoke_reason <= ap_const_lv1_0;
            elsif ((ap_predicate_op78_call_state14 = ap_const_boolean_1)) then 
                grp_start_backoff_bk_fu_191_invoke_reason <= ap_const_lv1_1;
            else 
                grp_start_backoff_bk_fu_191_invoke_reason <= "X";
            end if;
        else 
            grp_start_backoff_bk_fu_191_invoke_reason <= "X";
        end if; 
    end process;

    grp_start_backoff_vi_fu_165_ap_start <= grp_start_backoff_vi_fu_165_ap_start_reg;

    grp_start_backoff_vi_fu_165_invoke_reason_assign_proc : process(ap_CS_fsm_state8, ap_predicate_op39_call_state8, ap_predicate_op41_call_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
            if ((ap_predicate_op41_call_state8 = ap_const_boolean_1)) then 
                grp_start_backoff_vi_fu_165_invoke_reason <= ap_const_lv1_0;
            elsif ((ap_predicate_op39_call_state8 = ap_const_boolean_1)) then 
                grp_start_backoff_vi_fu_165_invoke_reason <= ap_const_lv1_1;
            else 
                grp_start_backoff_vi_fu_165_invoke_reason <= "X";
            end if;
        else 
            grp_start_backoff_vi_fu_165_invoke_reason <= "X";
        end if; 
    end process;

    grp_start_tx_fu_119_ap_start <= grp_start_tx_fu_119_ap_start_reg;
    icmp_ln268_fu_235_p2 <= "1" when (vi_backoff_counter_i = ap_const_lv10_0) else "0";
    icmp_ln269_fu_253_p2 <= "1" when (unsigned(current_txop_holder_i) < unsigned(ap_const_lv3_3)) else "0";
    icmp_ln286_fu_275_p2 <= "1" when (be_backoff_counter_i = ap_const_lv10_0) else "0";
    icmp_ln287_fu_303_p2 <= "1" when (tmp_8_fu_293_p4 = ap_const_lv2_0) else "0";
    icmp_ln304_fu_325_p2 <= "1" when (bk_backoff_counter_i = ap_const_lv10_0) else "0";

    rand_state_o_assign_proc : process(rand_state_i, ap_CS_fsm_state8, ap_predicate_op39_call_state8, ap_predicate_op41_call_state8, ap_CS_fsm_state11, ap_predicate_op59_call_state11, ap_predicate_op61_call_state11, ap_CS_fsm_state14, ap_predicate_op78_call_state14, ap_predicate_op80_call_state14, grp_backoff_vo_fu_153_rand_state_o, grp_backoff_vo_fu_153_rand_state_o_ap_vld, grp_start_backoff_vi_fu_165_rand_state_o, grp_start_backoff_vi_fu_165_rand_state_o_ap_vld, grp_start_backoff_be_fu_178_rand_state_o, grp_start_backoff_be_fu_178_rand_state_o_ap_vld, grp_start_backoff_bk_fu_191_rand_state_o, grp_start_backoff_bk_fu_191_rand_state_o_ap_vld, ap_CS_fsm_state5)
    begin
        if ((((ap_predicate_op80_call_state14 = ap_const_boolean_1) and (grp_start_backoff_bk_fu_191_rand_state_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((ap_predicate_op78_call_state14 = ap_const_boolean_1) and (grp_start_backoff_bk_fu_191_rand_state_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            rand_state_o <= grp_start_backoff_bk_fu_191_rand_state_o;
        elsif ((((ap_predicate_op61_call_state11 = ap_const_boolean_1) and (grp_start_backoff_be_fu_178_rand_state_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((ap_predicate_op59_call_state11 = ap_const_boolean_1) and (grp_start_backoff_be_fu_178_rand_state_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            rand_state_o <= grp_start_backoff_be_fu_178_rand_state_o;
        elsif ((((ap_predicate_op41_call_state8 = ap_const_boolean_1) and (grp_start_backoff_vi_fu_165_rand_state_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((ap_predicate_op39_call_state8 = ap_const_boolean_1) and (grp_start_backoff_vi_fu_165_rand_state_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            rand_state_o <= grp_start_backoff_vi_fu_165_rand_state_o;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_backoff_vo_fu_153_rand_state_o_ap_vld = ap_const_logic_1))) then 
            rand_state_o <= grp_backoff_vo_fu_153_rand_state_o;
        else 
            rand_state_o <= rand_state_i;
        end if; 
    end process;


    rand_state_o_ap_vld_assign_proc : process(ap_CS_fsm_state8, ap_predicate_op39_call_state8, ap_predicate_op41_call_state8, ap_CS_fsm_state11, ap_predicate_op59_call_state11, ap_predicate_op61_call_state11, ap_CS_fsm_state14, ap_predicate_op78_call_state14, ap_predicate_op80_call_state14, grp_backoff_vo_fu_153_rand_state_o_ap_vld, grp_start_backoff_vi_fu_165_rand_state_o_ap_vld, grp_start_backoff_be_fu_178_rand_state_o_ap_vld, grp_start_backoff_bk_fu_191_rand_state_o_ap_vld, ap_CS_fsm_state5)
    begin
        if ((((ap_predicate_op80_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((ap_predicate_op78_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            rand_state_o_ap_vld <= grp_start_backoff_bk_fu_191_rand_state_o_ap_vld;
        elsif ((((ap_predicate_op61_call_state11 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((ap_predicate_op59_call_state11 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            rand_state_o_ap_vld <= grp_start_backoff_be_fu_178_rand_state_o_ap_vld;
        elsif ((((ap_predicate_op41_call_state8 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((ap_predicate_op39_call_state8 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            rand_state_o_ap_vld <= grp_start_backoff_vi_fu_165_rand_state_o_ap_vld;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            rand_state_o_ap_vld <= grp_backoff_vo_fu_153_rand_state_o_ap_vld;
        else 
            rand_state_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    read_pointer_be_o_assign_proc : process(read_pointer_be_i, grp_start_tx_fu_119_read_pointer_be_o, grp_start_tx_fu_119_read_pointer_be_o_ap_vld, idle_waited_0_reg_109, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (grp_start_tx_fu_119_read_pointer_be_o_ap_vld = ap_const_logic_1) and (idle_waited_0_reg_109 = ap_const_lv1_1))) then 
            read_pointer_be_o <= grp_start_tx_fu_119_read_pointer_be_o;
        else 
            read_pointer_be_o <= read_pointer_be_i;
        end if; 
    end process;

    read_pointer_be_o_ap_vld <= grp_start_tx_fu_119_read_pointer_be_o_ap_vld;

    read_pointer_bk_o_assign_proc : process(read_pointer_bk_i, grp_start_tx_fu_119_read_pointer_bk_o, grp_start_tx_fu_119_read_pointer_bk_o_ap_vld, idle_waited_0_reg_109, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (grp_start_tx_fu_119_read_pointer_bk_o_ap_vld = ap_const_logic_1) and (idle_waited_0_reg_109 = ap_const_lv1_1))) then 
            read_pointer_bk_o <= grp_start_tx_fu_119_read_pointer_bk_o;
        else 
            read_pointer_bk_o <= read_pointer_bk_i;
        end if; 
    end process;

    read_pointer_bk_o_ap_vld <= grp_start_tx_fu_119_read_pointer_bk_o_ap_vld;

    read_pointer_vi_o_assign_proc : process(read_pointer_vi_i, grp_start_tx_fu_119_read_pointer_vi_o, grp_start_tx_fu_119_read_pointer_vi_o_ap_vld, idle_waited_0_reg_109, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (grp_start_tx_fu_119_read_pointer_vi_o_ap_vld = ap_const_logic_1) and (idle_waited_0_reg_109 = ap_const_lv1_1))) then 
            read_pointer_vi_o <= grp_start_tx_fu_119_read_pointer_vi_o;
        else 
            read_pointer_vi_o <= read_pointer_vi_i;
        end if; 
    end process;

    read_pointer_vi_o_ap_vld <= grp_start_tx_fu_119_read_pointer_vi_o_ap_vld;

    read_pointer_vo_o_assign_proc : process(read_pointer_vo_i, grp_start_tx_fu_119_read_pointer_vo_o, grp_start_tx_fu_119_read_pointer_vo_o_ap_vld, idle_waited_0_reg_109, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (grp_start_tx_fu_119_read_pointer_vo_o_ap_vld = ap_const_logic_1) and (idle_waited_0_reg_109 = ap_const_lv1_1))) then 
            read_pointer_vo_o <= grp_start_tx_fu_119_read_pointer_vo_o;
        else 
            read_pointer_vo_o <= read_pointer_vo_i;
        end if; 
    end process;

    read_pointer_vo_o_ap_vld <= grp_start_tx_fu_119_read_pointer_vo_o_ap_vld;
    tmp_7_fu_263_p3 <= available_spaces_be_i(2 downto 2);
    tmp_8_fu_293_p4 <= current_txop_holder_i(2 downto 1);
    tmp_9_fu_313_p3 <= available_spaces_bk_i(2 downto 2);
    tmp_fu_223_p3 <= available_spaces_vi_i(2 downto 2);

    vi_backoff_counter_o_assign_proc : process(vi_backoff_counter_i, tmp_fu_223_p3, ap_CS_fsm_state6, icmp_ln268_fu_235_p2, ap_CS_fsm_state8, ap_predicate_op39_call_state8, ap_predicate_op41_call_state8, grp_start_backoff_vi_fu_165_vi_backoff_counter, grp_start_backoff_vi_fu_165_vi_backoff_counter_ap_vld, add_ln278_fu_241_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln268_fu_235_p2 = ap_const_lv1_0) and (tmp_fu_223_p3 = ap_const_lv1_0))) then 
            vi_backoff_counter_o <= add_ln278_fu_241_p2;
        elsif ((((ap_predicate_op41_call_state8 = ap_const_boolean_1) and (grp_start_backoff_vi_fu_165_vi_backoff_counter_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((ap_predicate_op39_call_state8 = ap_const_boolean_1) and (grp_start_backoff_vi_fu_165_vi_backoff_counter_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            vi_backoff_counter_o <= grp_start_backoff_vi_fu_165_vi_backoff_counter;
        else 
            vi_backoff_counter_o <= vi_backoff_counter_i;
        end if; 
    end process;


    vi_backoff_counter_o_ap_vld_assign_proc : process(tmp_fu_223_p3, ap_CS_fsm_state6, icmp_ln268_fu_235_p2, ap_CS_fsm_state8, ap_predicate_op39_call_state8, ap_predicate_op41_call_state8, grp_start_backoff_vi_fu_165_vi_backoff_counter_ap_vld)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln268_fu_235_p2 = ap_const_lv1_0) and (tmp_fu_223_p3 = ap_const_lv1_0))) then 
            vi_backoff_counter_o_ap_vld <= ap_const_logic_1;
        elsif ((((ap_predicate_op41_call_state8 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((ap_predicate_op39_call_state8 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            vi_backoff_counter_o_ap_vld <= grp_start_backoff_vi_fu_165_vi_backoff_counter_ap_vld;
        else 
            vi_backoff_counter_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    vo_backoff_counter_o_assign_proc : process(vo_backoff_counter_i, grp_backoff_vo_fu_153_vo_backoff_counter_o, grp_backoff_vo_fu_153_vo_backoff_counter_o_ap_vld, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_backoff_vo_fu_153_vo_backoff_counter_o_ap_vld = ap_const_logic_1))) then 
            vo_backoff_counter_o <= grp_backoff_vo_fu_153_vo_backoff_counter_o;
        else 
            vo_backoff_counter_o <= vo_backoff_counter_i;
        end if; 
    end process;

    vo_backoff_counter_o_ap_vld <= grp_backoff_vo_fu_153_vo_backoff_counter_o_ap_vld;

    write_pointer_be_o_assign_proc : process(write_pointer_be_i, grp_start_tx_fu_119_write_pointer_be_o, grp_start_tx_fu_119_write_pointer_be_o_ap_vld, idle_waited_0_reg_109, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (grp_start_tx_fu_119_write_pointer_be_o_ap_vld = ap_const_logic_1) and (idle_waited_0_reg_109 = ap_const_lv1_1))) then 
            write_pointer_be_o <= grp_start_tx_fu_119_write_pointer_be_o;
        else 
            write_pointer_be_o <= write_pointer_be_i;
        end if; 
    end process;

    write_pointer_be_o_ap_vld <= grp_start_tx_fu_119_write_pointer_be_o_ap_vld;

    write_pointer_bk_o_assign_proc : process(write_pointer_bk_i, grp_start_tx_fu_119_write_pointer_bk_o, grp_start_tx_fu_119_write_pointer_bk_o_ap_vld, idle_waited_0_reg_109, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (grp_start_tx_fu_119_write_pointer_bk_o_ap_vld = ap_const_logic_1) and (idle_waited_0_reg_109 = ap_const_lv1_1))) then 
            write_pointer_bk_o <= grp_start_tx_fu_119_write_pointer_bk_o;
        else 
            write_pointer_bk_o <= write_pointer_bk_i;
        end if; 
    end process;

    write_pointer_bk_o_ap_vld <= grp_start_tx_fu_119_write_pointer_bk_o_ap_vld;

    write_pointer_vi_o_assign_proc : process(write_pointer_vi_i, grp_start_tx_fu_119_write_pointer_vi_o, grp_start_tx_fu_119_write_pointer_vi_o_ap_vld, idle_waited_0_reg_109, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (grp_start_tx_fu_119_write_pointer_vi_o_ap_vld = ap_const_logic_1) and (idle_waited_0_reg_109 = ap_const_lv1_1))) then 
            write_pointer_vi_o <= grp_start_tx_fu_119_write_pointer_vi_o;
        else 
            write_pointer_vi_o <= write_pointer_vi_i;
        end if; 
    end process;

    write_pointer_vi_o_ap_vld <= grp_start_tx_fu_119_write_pointer_vi_o_ap_vld;

    write_pointer_vo_o_assign_proc : process(write_pointer_vo_i, grp_start_tx_fu_119_write_pointer_vo_o, grp_start_tx_fu_119_write_pointer_vo_o_ap_vld, idle_waited_0_reg_109, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (grp_start_tx_fu_119_write_pointer_vo_o_ap_vld = ap_const_logic_1) and (idle_waited_0_reg_109 = ap_const_lv1_1))) then 
            write_pointer_vo_o <= grp_start_tx_fu_119_write_pointer_vo_o;
        else 
            write_pointer_vo_o <= write_pointer_vo_i;
        end if; 
    end process;

    write_pointer_vo_o_ap_vld <= grp_start_tx_fu_119_write_pointer_vo_o_ap_vld;
end behav;
