// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module enqueue_dequeue_fram (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        operation,
        ac,
        inout_frame_address0,
        inout_frame_ce0,
        inout_frame_we0,
        inout_frame_d0,
        inout_frame_q0,
        available_spaces_bk_i,
        available_spaces_bk_o,
        available_spaces_bk_o_ap_vld,
        write_pointer_bk_i,
        write_pointer_bk_o,
        write_pointer_bk_o_ap_vld,
        available_spaces_be_i,
        available_spaces_be_o,
        available_spaces_be_o_ap_vld,
        write_pointer_be_i,
        write_pointer_be_o,
        write_pointer_be_o_ap_vld,
        available_spaces_vi_i,
        available_spaces_vi_o,
        available_spaces_vi_o_ap_vld,
        write_pointer_vi_i,
        write_pointer_vi_o,
        write_pointer_vi_o_ap_vld,
        available_spaces_vo_i,
        available_spaces_vo_o,
        available_spaces_vo_o_ap_vld,
        write_pointer_vo_i,
        write_pointer_vo_o,
        write_pointer_vo_o_ap_vld,
        edca_queues_address0,
        edca_queues_ce0,
        edca_queues_we0,
        edca_queues_d0,
        edca_queues_q0,
        read_pointer_bk_i,
        read_pointer_bk_o,
        read_pointer_bk_o_ap_vld,
        read_pointer_be_i,
        read_pointer_be_o,
        read_pointer_be_o_ap_vld,
        read_pointer_vi_i,
        read_pointer_vi_o,
        read_pointer_vi_o_ap_vld,
        read_pointer_vo_i,
        read_pointer_vo_o,
        read_pointer_vo_o_ap_vld,
        ap_return
);

parameter    ap_ST_fsm_state1 = 18'd1;
parameter    ap_ST_fsm_state2 = 18'd2;
parameter    ap_ST_fsm_state3 = 18'd4;
parameter    ap_ST_fsm_state4 = 18'd8;
parameter    ap_ST_fsm_state5 = 18'd16;
parameter    ap_ST_fsm_state6 = 18'd32;
parameter    ap_ST_fsm_state7 = 18'd64;
parameter    ap_ST_fsm_state8 = 18'd128;
parameter    ap_ST_fsm_state9 = 18'd256;
parameter    ap_ST_fsm_state10 = 18'd512;
parameter    ap_ST_fsm_state11 = 18'd1024;
parameter    ap_ST_fsm_state12 = 18'd2048;
parameter    ap_ST_fsm_state13 = 18'd4096;
parameter    ap_ST_fsm_state14 = 18'd8192;
parameter    ap_ST_fsm_state15 = 18'd16384;
parameter    ap_ST_fsm_state16 = 18'd32768;
parameter    ap_ST_fsm_state17 = 18'd65536;
parameter    ap_ST_fsm_state18 = 18'd131072;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [0:0] operation;
input  [1:0] ac;
output  [6:0] inout_frame_address0;
output   inout_frame_ce0;
output   inout_frame_we0;
output  [7:0] inout_frame_d0;
input  [7:0] inout_frame_q0;
input  [2:0] available_spaces_bk_i;
output  [2:0] available_spaces_bk_o;
output   available_spaces_bk_o_ap_vld;
input  [1:0] write_pointer_bk_i;
output  [1:0] write_pointer_bk_o;
output   write_pointer_bk_o_ap_vld;
input  [2:0] available_spaces_be_i;
output  [2:0] available_spaces_be_o;
output   available_spaces_be_o_ap_vld;
input  [1:0] write_pointer_be_i;
output  [1:0] write_pointer_be_o;
output   write_pointer_be_o_ap_vld;
input  [2:0] available_spaces_vi_i;
output  [2:0] available_spaces_vi_o;
output   available_spaces_vi_o_ap_vld;
input  [1:0] write_pointer_vi_i;
output  [1:0] write_pointer_vi_o;
output   write_pointer_vi_o_ap_vld;
input  [2:0] available_spaces_vo_i;
output  [2:0] available_spaces_vo_o;
output   available_spaces_vo_o_ap_vld;
input  [1:0] write_pointer_vo_i;
output  [1:0] write_pointer_vo_o;
output   write_pointer_vo_o_ap_vld;
output  [10:0] edca_queues_address0;
output   edca_queues_ce0;
output   edca_queues_we0;
output  [7:0] edca_queues_d0;
input  [7:0] edca_queues_q0;
input  [1:0] read_pointer_bk_i;
output  [1:0] read_pointer_bk_o;
output   read_pointer_bk_o_ap_vld;
input  [1:0] read_pointer_be_i;
output  [1:0] read_pointer_be_o;
output   read_pointer_be_o_ap_vld;
input  [1:0] read_pointer_vi_i;
output  [1:0] read_pointer_vi_o;
output   read_pointer_vi_o_ap_vld;
input  [1:0] read_pointer_vo_i;
output  [1:0] read_pointer_vo_o;
output   read_pointer_vo_o_ap_vld;
output  [3:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[6:0] inout_frame_address0;
reg inout_frame_ce0;
reg inout_frame_we0;
reg[2:0] available_spaces_bk_o;
reg available_spaces_bk_o_ap_vld;
reg[1:0] write_pointer_bk_o;
reg write_pointer_bk_o_ap_vld;
reg[2:0] available_spaces_be_o;
reg available_spaces_be_o_ap_vld;
reg[1:0] write_pointer_be_o;
reg write_pointer_be_o_ap_vld;
reg[2:0] available_spaces_vi_o;
reg available_spaces_vi_o_ap_vld;
reg[1:0] write_pointer_vi_o;
reg write_pointer_vi_o_ap_vld;
reg[2:0] available_spaces_vo_o;
reg available_spaces_vo_o_ap_vld;
reg[1:0] write_pointer_vo_o;
reg write_pointer_vo_o_ap_vld;
reg[10:0] edca_queues_address0;
reg edca_queues_ce0;
reg edca_queues_we0;
reg[1:0] read_pointer_bk_o;
reg read_pointer_bk_o_ap_vld;
reg[1:0] read_pointer_be_o;
reg read_pointer_be_o_ap_vld;
reg[1:0] read_pointer_vi_o;
reg read_pointer_vi_o_ap_vld;
reg[1:0] read_pointer_vo_o;
reg read_pointer_vo_o_ap_vld;
reg[3:0] ap_return;

(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [2:0] available_spaces_bk_s_reg_1103;
reg   [1:0] write_pointer_bk_loa_reg_1109;
reg   [2:0] available_spaces_be_s_reg_1114;
reg   [1:0] write_pointer_be_loa_reg_1120;
reg   [2:0] available_spaces_vi_s_reg_1125;
reg   [1:0] write_pointer_vi_loa_reg_1131;
reg   [2:0] available_spaces_vo_s_reg_1136;
reg   [1:0] write_pointer_vo_loa_reg_1142;
wire   [8:0] mul_ln97_fu_486_p2;
reg   [8:0] mul_ln97_reg_1162;
wire   [0:0] operation_read_read_fu_114_p2;
wire   [0:0] grp_fu_420_p2;
wire   [0:0] grp_fu_426_p2;
wire   [0:0] grp_fu_432_p2;
wire   [0:0] grp_fu_438_p2;
wire   [0:0] icmp_ln93_fu_476_p2;
wire   [8:0] mul_ln84_fu_502_p2;
reg   [8:0] mul_ln84_reg_1170;
wire   [0:0] icmp_ln80_fu_492_p2;
wire   [8:0] mul_ln71_fu_518_p2;
reg   [8:0] mul_ln71_reg_1178;
wire   [0:0] icmp_ln67_fu_508_p2;
wire   [8:0] mul_ln58_fu_534_p2;
reg   [8:0] mul_ln58_reg_1186;
wire   [0:0] icmp_ln54_fu_524_p2;
reg   [1:0] read_pointer_bk_load_reg_1191;
reg   [1:0] read_pointer_be_load_reg_1196;
reg   [1:0] read_pointer_vi_load_reg_1201;
reg   [1:0] read_pointer_vo_load_reg_1206;
wire   [8:0] mul_ln153_fu_566_p2;
reg   [8:0] mul_ln153_reg_1226;
wire   [0:0] icmp_ln149_fu_556_p2;
wire   [8:0] mul_ln140_fu_582_p2;
reg   [8:0] mul_ln140_reg_1234;
wire   [0:0] icmp_ln136_fu_572_p2;
wire   [8:0] mul_ln127_fu_598_p2;
reg   [8:0] mul_ln127_reg_1242;
wire   [0:0] icmp_ln123_fu_588_p2;
wire   [8:0] mul_ln114_fu_614_p2;
reg   [8:0] mul_ln114_reg_1250;
wire   [0:0] icmp_ln110_fu_604_p2;
wire   [6:0] vo_1_fu_630_p2;
reg   [6:0] vo_1_reg_1258;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln96_fu_624_p2;
wire   [8:0] add_ln97_fu_641_p2;
reg   [8:0] add_ln97_reg_1268;
wire   [6:0] vi_1_fu_692_p2;
reg   [6:0] vi_1_reg_1276;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln83_fu_686_p2;
wire   [8:0] add_ln84_fu_703_p2;
reg   [8:0] add_ln84_reg_1286;
wire   [6:0] be_1_fu_754_p2;
reg   [6:0] be_1_reg_1294;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln70_fu_748_p2;
wire   [8:0] add_ln71_fu_765_p2;
reg   [8:0] add_ln71_reg_1304;
wire   [6:0] bk_1_fu_816_p2;
reg   [6:0] bk_1_reg_1312;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln57_fu_810_p2;
wire   [8:0] add_ln58_fu_827_p2;
reg   [8:0] add_ln58_reg_1322;
wire   [6:0] vo_fu_868_p2;
reg   [6:0] vo_reg_1330;
wire    ap_CS_fsm_state10;
wire   [0:0] icmp_ln152_fu_862_p2;
wire   [6:0] vi_fu_931_p2;
reg   [6:0] vi_reg_1343;
wire    ap_CS_fsm_state12;
wire   [0:0] icmp_ln139_fu_925_p2;
wire   [6:0] be_fu_994_p2;
reg   [6:0] be_reg_1356;
wire    ap_CS_fsm_state14;
wire   [0:0] icmp_ln126_fu_988_p2;
wire   [6:0] bk_fu_1057_p2;
reg   [6:0] bk_reg_1369;
wire    ap_CS_fsm_state16;
wire   [0:0] icmp_ln113_fu_1051_p2;
reg   [6:0] vo_0_reg_260;
wire    ap_CS_fsm_state3;
reg   [6:0] vi_0_reg_271;
wire    ap_CS_fsm_state5;
reg   [6:0] be_0_reg_282;
wire    ap_CS_fsm_state7;
reg   [6:0] bk_0_reg_293;
wire    ap_CS_fsm_state9;
reg   [6:0] vo4_0_reg_304;
wire    ap_CS_fsm_state11;
reg   [6:0] vi3_0_reg_316;
wire    ap_CS_fsm_state13;
reg   [6:0] be2_0_reg_328;
wire    ap_CS_fsm_state15;
reg   [6:0] bk1_0_reg_340;
wire    ap_CS_fsm_state17;
reg   [3:0] p_0_reg_352;
wire   [63:0] zext_ln97_1_fu_636_p1;
wire   [63:0] zext_ln97_3_fu_677_p1;
wire   [63:0] zext_ln84_1_fu_698_p1;
wire   [63:0] zext_ln84_3_fu_739_p1;
wire   [63:0] zext_ln71_1_fu_760_p1;
wire   [63:0] zext_ln71_3_fu_801_p1;
wire   [63:0] zext_ln58_1_fu_822_p1;
wire   [63:0] zext_ln58_2_fu_854_p1;
wire   [63:0] zext_ln153_3_fu_889_p1;
wire   [63:0] zext_ln153_2_fu_916_p1;
wire   [63:0] zext_ln140_3_fu_952_p1;
wire   [63:0] zext_ln140_2_fu_979_p1;
wire   [63:0] zext_ln127_3_fu_1015_p1;
wire   [63:0] zext_ln127_2_fu_1042_p1;
wire   [63:0] zext_ln114_1_fu_1068_p1;
wire   [63:0] zext_ln114_2_fu_1095_p1;
wire   [1:0] add_ln102_fu_646_p2;
wire   [2:0] add_ln103_fu_657_p2;
wire   [1:0] add_ln89_fu_708_p2;
wire   [2:0] add_ln90_fu_719_p2;
wire   [1:0] add_ln76_fu_770_p2;
wire   [2:0] add_ln77_fu_781_p2;
wire   [1:0] add_ln63_fu_832_p2;
wire   [2:0] add_ln64_fu_843_p2;
wire   [1:0] add_ln158_fu_894_p2;
wire   [2:0] add_ln159_fu_905_p2;
wire   [1:0] add_ln145_fu_957_p2;
wire   [2:0] add_ln146_fu_968_p2;
wire   [1:0] add_ln132_fu_1020_p2;
wire   [2:0] add_ln133_fu_1031_p2;
wire   [1:0] add_ln119_fu_1073_p2;
wire   [2:0] add_ln120_fu_1084_p2;
wire   [1:0] mul_ln97_fu_486_p0;
wire   [1:0] mul_ln84_fu_502_p0;
wire   [1:0] mul_ln71_fu_518_p0;
wire   [1:0] mul_ln58_fu_534_p0;
wire   [1:0] mul_ln153_fu_566_p0;
wire   [1:0] mul_ln140_fu_582_p0;
wire   [1:0] mul_ln127_fu_598_p0;
wire   [1:0] mul_ln114_fu_614_p0;
wire   [8:0] zext_ln96_fu_620_p1;
wire   [10:0] zext_ln97_2_fu_668_p1;
wire   [10:0] add_ln97_1_fu_671_p2;
wire   [8:0] zext_ln83_fu_682_p1;
wire   [10:0] zext_ln84_2_fu_730_p1;
wire   [10:0] add_ln84_1_fu_733_p2;
wire   [8:0] zext_ln70_fu_744_p1;
wire   [9:0] zext_ln71_2_fu_792_p1;
wire   [9:0] add_ln71_1_fu_795_p2;
wire   [8:0] zext_ln57_fu_806_p1;
wire   [8:0] zext_ln152_fu_858_p1;
wire   [8:0] add_ln153_fu_874_p2;
wire   [10:0] zext_ln153_1_fu_879_p1;
wire   [10:0] add_ln153_1_fu_883_p2;
wire   [8:0] zext_ln139_fu_921_p1;
wire   [8:0] add_ln140_fu_937_p2;
wire   [10:0] zext_ln140_1_fu_942_p1;
wire   [10:0] add_ln140_1_fu_946_p2;
wire   [8:0] zext_ln126_fu_984_p1;
wire   [8:0] add_ln127_fu_1000_p2;
wire   [9:0] zext_ln127_1_fu_1005_p1;
wire   [9:0] add_ln127_1_fu_1009_p2;
wire   [8:0] zext_ln113_fu_1047_p1;
wire   [8:0] add_ln114_fu_1063_p2;
reg   [3:0] ap_return_preg;
wire    ap_CS_fsm_state18;
reg   [17:0] ap_NS_fsm;
wire   [8:0] mul_ln114_fu_614_p00;
wire   [8:0] mul_ln127_fu_598_p00;
wire   [8:0] mul_ln140_fu_582_p00;
wire   [8:0] mul_ln153_fu_566_p00;
wire   [8:0] mul_ln58_fu_534_p00;
wire   [8:0] mul_ln71_fu_518_p00;
wire   [8:0] mul_ln84_fu_502_p00;
wire   [8:0] mul_ln97_fu_486_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 18'd1;
#0 ap_return_preg = 4'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 4'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_return_preg <= p_0_reg_352;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (grp_fu_426_p2 == 1'd1) & (icmp_ln123_fu_588_p2 == 1'd0) & (grp_fu_420_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd1))) begin
        be2_0_reg_328 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        be2_0_reg_328 <= be_reg_1356;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (grp_fu_426_p2 == 1'd1) & (icmp_ln67_fu_508_p2 == 1'd0) & (grp_fu_420_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd0))) begin
        be_0_reg_282 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        be_0_reg_282 <= be_1_reg_1294;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (grp_fu_420_p2 == 1'd1) & (icmp_ln110_fu_604_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd1))) begin
        bk1_0_reg_340 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        bk1_0_reg_340 <= bk_reg_1369;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (grp_fu_420_p2 == 1'd1) & (icmp_ln54_fu_524_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd0))) begin
        bk_0_reg_293 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        bk_0_reg_293 <= bk_1_reg_1312;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln149_fu_556_p2 == 1'd1) & (grp_fu_438_p2 == 1'd1) & (grp_fu_432_p2 == 1'd0) & (grp_fu_426_p2 == 1'd0) & (grp_fu_420_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd1))) begin
        p_0_reg_352 <= 4'd13;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln136_fu_572_p2 == 1'd1) & (grp_fu_432_p2 == 1'd1) & (grp_fu_426_p2 == 1'd0) & (grp_fu_420_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd1))) begin
        p_0_reg_352 <= 4'd12;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln123_fu_588_p2 == 1'd1) & (grp_fu_426_p2 == 1'd1) & (grp_fu_420_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd1))) begin
        p_0_reg_352 <= 4'd11;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln110_fu_604_p2 == 1'd1) & (grp_fu_420_p2 == 1'd1) & (operation_read_read_fu_114_p2 == 1'd1))) begin
        p_0_reg_352 <= 4'd10;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln93_fu_476_p2 == 1'd1) & (grp_fu_438_p2 == 1'd1) & (grp_fu_432_p2 == 1'd0) & (grp_fu_426_p2 == 1'd0) & (grp_fu_420_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd0))) begin
        p_0_reg_352 <= 4'd3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln80_fu_492_p2 == 1'd1) & (grp_fu_432_p2 == 1'd1) & (grp_fu_426_p2 == 1'd0) & (grp_fu_420_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd0))) begin
        p_0_reg_352 <= 4'd2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln67_fu_508_p2 == 1'd1) & (grp_fu_426_p2 == 1'd1) & (grp_fu_420_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd0))) begin
        p_0_reg_352 <= 4'd1;
    end else if ((((1'b1 == ap_CS_fsm_state16) & (icmp_ln113_fu_1051_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state14) & (icmp_ln126_fu_988_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state12) & (icmp_ln139_fu_925_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state10) & (icmp_ln152_fu_862_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state8) & (icmp_ln57_fu_810_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln70_fu_748_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln83_fu_686_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln96_fu_624_p2 == 1'd1)))) begin
        p_0_reg_352 <= 4'd14;
    end else if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (grp_fu_438_p2 == 1'd0) & (grp_fu_432_p2 == 1'd0) & (grp_fu_426_p2 == 1'd0) & (grp_fu_420_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln54_fu_524_p2 == 1'd1) & (grp_fu_420_p2 == 1'd1) & (operation_read_read_fu_114_p2 == 1'd0)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (grp_fu_438_p2 == 1'd0) & (grp_fu_432_p2 == 1'd0) & (grp_fu_426_p2 == 1'd0) & (grp_fu_420_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd0)))) begin
        p_0_reg_352 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (grp_fu_432_p2 == 1'd1) & (icmp_ln136_fu_572_p2 == 1'd0) & (grp_fu_426_p2 == 1'd0) & (grp_fu_420_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd1))) begin
        vi3_0_reg_316 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        vi3_0_reg_316 <= vi_reg_1343;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (grp_fu_432_p2 == 1'd1) & (icmp_ln80_fu_492_p2 == 1'd0) & (grp_fu_426_p2 == 1'd0) & (grp_fu_420_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd0))) begin
        vi_0_reg_271 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        vi_0_reg_271 <= vi_1_reg_1276;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (grp_fu_438_p2 == 1'd1) & (icmp_ln149_fu_556_p2 == 1'd0) & (grp_fu_432_p2 == 1'd0) & (grp_fu_426_p2 == 1'd0) & (grp_fu_420_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd1))) begin
        vo4_0_reg_304 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        vo4_0_reg_304 <= vo_reg_1330;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (grp_fu_438_p2 == 1'd1) & (icmp_ln93_fu_476_p2 == 1'd0) & (grp_fu_432_p2 == 1'd0) & (grp_fu_426_p2 == 1'd0) & (grp_fu_420_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd0))) begin
        vo_0_reg_260 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        vo_0_reg_260 <= vo_1_reg_1258;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln57_fu_810_p2 == 1'd0))) begin
        add_ln58_reg_1322 <= add_ln58_fu_827_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln70_fu_748_p2 == 1'd0))) begin
        add_ln71_reg_1304 <= add_ln71_fu_765_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln83_fu_686_p2 == 1'd0))) begin
        add_ln84_reg_1286 <= add_ln84_fu_703_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln96_fu_624_p2 == 1'd0))) begin
        add_ln97_reg_1268 <= add_ln97_fu_641_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        available_spaces_be_s_reg_1114 <= available_spaces_be_i;
        available_spaces_bk_s_reg_1103 <= available_spaces_bk_i;
        available_spaces_vi_s_reg_1125 <= available_spaces_vi_i;
        available_spaces_vo_s_reg_1136 <= available_spaces_vo_i;
        write_pointer_be_loa_reg_1120 <= write_pointer_be_i;
        write_pointer_bk_loa_reg_1109 <= write_pointer_bk_i;
        write_pointer_vi_loa_reg_1131 <= write_pointer_vi_i;
        write_pointer_vo_loa_reg_1142 <= write_pointer_vo_i;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        be_1_reg_1294 <= be_1_fu_754_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        be_reg_1356 <= be_fu_994_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        bk_1_reg_1312 <= bk_1_fu_816_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        bk_reg_1369 <= bk_fu_1057_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (grp_fu_420_p2 == 1'd1) & (icmp_ln110_fu_604_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd1))) begin
        mul_ln114_reg_1250[8 : 2] <= mul_ln114_fu_614_p2[8 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (grp_fu_426_p2 == 1'd1) & (icmp_ln123_fu_588_p2 == 1'd0) & (grp_fu_420_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd1))) begin
        mul_ln127_reg_1242[8 : 2] <= mul_ln127_fu_598_p2[8 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (grp_fu_432_p2 == 1'd1) & (icmp_ln136_fu_572_p2 == 1'd0) & (grp_fu_426_p2 == 1'd0) & (grp_fu_420_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd1))) begin
        mul_ln140_reg_1234[8 : 2] <= mul_ln140_fu_582_p2[8 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (grp_fu_438_p2 == 1'd1) & (icmp_ln149_fu_556_p2 == 1'd0) & (grp_fu_432_p2 == 1'd0) & (grp_fu_426_p2 == 1'd0) & (grp_fu_420_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd1))) begin
        mul_ln153_reg_1226[8 : 2] <= mul_ln153_fu_566_p2[8 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (grp_fu_420_p2 == 1'd1) & (icmp_ln54_fu_524_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd0))) begin
        mul_ln58_reg_1186[8 : 2] <= mul_ln58_fu_534_p2[8 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (grp_fu_426_p2 == 1'd1) & (icmp_ln67_fu_508_p2 == 1'd0) & (grp_fu_420_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd0))) begin
        mul_ln71_reg_1178[8 : 2] <= mul_ln71_fu_518_p2[8 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (grp_fu_432_p2 == 1'd1) & (icmp_ln80_fu_492_p2 == 1'd0) & (grp_fu_426_p2 == 1'd0) & (grp_fu_420_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd0))) begin
        mul_ln84_reg_1170[8 : 2] <= mul_ln84_fu_502_p2[8 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (grp_fu_438_p2 == 1'd1) & (icmp_ln93_fu_476_p2 == 1'd0) & (grp_fu_432_p2 == 1'd0) & (grp_fu_426_p2 == 1'd0) & (grp_fu_420_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd0))) begin
        mul_ln97_reg_1162[8 : 2] <= mul_ln97_fu_486_p2[8 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (operation_read_read_fu_114_p2 == 1'd1))) begin
        read_pointer_be_load_reg_1196 <= read_pointer_be_i;
        read_pointer_bk_load_reg_1191 <= read_pointer_bk_i;
        read_pointer_vi_load_reg_1201 <= read_pointer_vi_i;
        read_pointer_vo_load_reg_1206 <= read_pointer_vo_i;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        vi_1_reg_1276 <= vi_1_fu_692_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        vi_reg_1343 <= vi_fu_931_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        vo_1_reg_1258 <= vo_1_fu_630_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        vo_reg_1330 <= vo_fu_868_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        ap_return = p_0_reg_352;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln126_fu_988_p2 == 1'd1))) begin
        available_spaces_be_o = add_ln133_fu_1031_p2;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln70_fu_748_p2 == 1'd1))) begin
        available_spaces_be_o = add_ln77_fu_781_p2;
    end else begin
        available_spaces_be_o = available_spaces_be_i;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state14) & (icmp_ln126_fu_988_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln70_fu_748_p2 == 1'd1)))) begin
        available_spaces_be_o_ap_vld = 1'b1;
    end else begin
        available_spaces_be_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln113_fu_1051_p2 == 1'd1))) begin
        available_spaces_bk_o = add_ln120_fu_1084_p2;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln57_fu_810_p2 == 1'd1))) begin
        available_spaces_bk_o = add_ln64_fu_843_p2;
    end else begin
        available_spaces_bk_o = available_spaces_bk_i;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state16) & (icmp_ln113_fu_1051_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state8) & (icmp_ln57_fu_810_p2 == 1'd1)))) begin
        available_spaces_bk_o_ap_vld = 1'b1;
    end else begin
        available_spaces_bk_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln139_fu_925_p2 == 1'd1))) begin
        available_spaces_vi_o = add_ln146_fu_968_p2;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln83_fu_686_p2 == 1'd1))) begin
        available_spaces_vi_o = add_ln90_fu_719_p2;
    end else begin
        available_spaces_vi_o = available_spaces_vi_i;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state12) & (icmp_ln139_fu_925_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln83_fu_686_p2 == 1'd1)))) begin
        available_spaces_vi_o_ap_vld = 1'b1;
    end else begin
        available_spaces_vi_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln152_fu_862_p2 == 1'd1))) begin
        available_spaces_vo_o = add_ln159_fu_905_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln96_fu_624_p2 == 1'd1))) begin
        available_spaces_vo_o = add_ln103_fu_657_p2;
    end else begin
        available_spaces_vo_o = available_spaces_vo_i;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state10) & (icmp_ln152_fu_862_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln96_fu_624_p2 == 1'd1)))) begin
        available_spaces_vo_o_ap_vld = 1'b1;
    end else begin
        available_spaces_vo_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        edca_queues_address0 = zext_ln114_1_fu_1068_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        edca_queues_address0 = zext_ln127_3_fu_1015_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        edca_queues_address0 = zext_ln140_3_fu_952_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        edca_queues_address0 = zext_ln153_3_fu_889_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        edca_queues_address0 = zext_ln58_2_fu_854_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        edca_queues_address0 = zext_ln71_3_fu_801_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        edca_queues_address0 = zext_ln84_3_fu_739_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        edca_queues_address0 = zext_ln97_3_fu_677_p1;
    end else begin
        edca_queues_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10))) begin
        edca_queues_ce0 = 1'b1;
    end else begin
        edca_queues_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        edca_queues_we0 = 1'b1;
    end else begin
        edca_queues_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        inout_frame_address0 = zext_ln114_2_fu_1095_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        inout_frame_address0 = zext_ln127_2_fu_1042_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        inout_frame_address0 = zext_ln140_2_fu_979_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        inout_frame_address0 = zext_ln153_2_fu_916_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        inout_frame_address0 = zext_ln58_1_fu_822_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        inout_frame_address0 = zext_ln71_1_fu_760_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        inout_frame_address0 = zext_ln84_1_fu_698_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        inout_frame_address0 = zext_ln97_1_fu_636_p1;
    end else begin
        inout_frame_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        inout_frame_ce0 = 1'b1;
    end else begin
        inout_frame_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11))) begin
        inout_frame_we0 = 1'b1;
    end else begin
        inout_frame_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln126_fu_988_p2 == 1'd1))) begin
        read_pointer_be_o = add_ln132_fu_1020_p2;
    end else begin
        read_pointer_be_o = read_pointer_be_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln126_fu_988_p2 == 1'd1))) begin
        read_pointer_be_o_ap_vld = 1'b1;
    end else begin
        read_pointer_be_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln113_fu_1051_p2 == 1'd1))) begin
        read_pointer_bk_o = add_ln119_fu_1073_p2;
    end else begin
        read_pointer_bk_o = read_pointer_bk_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln113_fu_1051_p2 == 1'd1))) begin
        read_pointer_bk_o_ap_vld = 1'b1;
    end else begin
        read_pointer_bk_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln139_fu_925_p2 == 1'd1))) begin
        read_pointer_vi_o = add_ln145_fu_957_p2;
    end else begin
        read_pointer_vi_o = read_pointer_vi_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln139_fu_925_p2 == 1'd1))) begin
        read_pointer_vi_o_ap_vld = 1'b1;
    end else begin
        read_pointer_vi_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln152_fu_862_p2 == 1'd1))) begin
        read_pointer_vo_o = add_ln158_fu_894_p2;
    end else begin
        read_pointer_vo_o = read_pointer_vo_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln152_fu_862_p2 == 1'd1))) begin
        read_pointer_vo_o_ap_vld = 1'b1;
    end else begin
        read_pointer_vo_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln70_fu_748_p2 == 1'd1))) begin
        write_pointer_be_o = add_ln76_fu_770_p2;
    end else begin
        write_pointer_be_o = write_pointer_be_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln70_fu_748_p2 == 1'd1))) begin
        write_pointer_be_o_ap_vld = 1'b1;
    end else begin
        write_pointer_be_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln57_fu_810_p2 == 1'd1))) begin
        write_pointer_bk_o = add_ln63_fu_832_p2;
    end else begin
        write_pointer_bk_o = write_pointer_bk_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln57_fu_810_p2 == 1'd1))) begin
        write_pointer_bk_o_ap_vld = 1'b1;
    end else begin
        write_pointer_bk_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln83_fu_686_p2 == 1'd1))) begin
        write_pointer_vi_o = add_ln89_fu_708_p2;
    end else begin
        write_pointer_vi_o = write_pointer_vi_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln83_fu_686_p2 == 1'd1))) begin
        write_pointer_vi_o_ap_vld = 1'b1;
    end else begin
        write_pointer_vi_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln96_fu_624_p2 == 1'd1))) begin
        write_pointer_vo_o = add_ln102_fu_646_p2;
    end else begin
        write_pointer_vo_o = write_pointer_vo_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln96_fu_624_p2 == 1'd1))) begin
        write_pointer_vo_o_ap_vld = 1'b1;
    end else begin
        write_pointer_vo_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (grp_fu_420_p2 == 1'd1) & (icmp_ln110_fu_604_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (grp_fu_426_p2 == 1'd1) & (icmp_ln123_fu_588_p2 == 1'd0) & (grp_fu_420_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (grp_fu_432_p2 == 1'd1) & (icmp_ln136_fu_572_p2 == 1'd0) & (grp_fu_426_p2 == 1'd0) & (grp_fu_420_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (grp_fu_438_p2 == 1'd1) & (icmp_ln149_fu_556_p2 == 1'd0) & (grp_fu_432_p2 == 1'd0) & (grp_fu_426_p2 == 1'd0) & (grp_fu_420_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (grp_fu_420_p2 == 1'd1) & (icmp_ln54_fu_524_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (grp_fu_426_p2 == 1'd1) & (icmp_ln67_fu_508_p2 == 1'd0) & (grp_fu_420_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (grp_fu_432_p2 == 1'd1) & (icmp_ln80_fu_492_p2 == 1'd0) & (grp_fu_426_p2 == 1'd0) & (grp_fu_420_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (grp_fu_438_p2 == 1'd1) & (icmp_ln93_fu_476_p2 == 1'd0) & (grp_fu_432_p2 == 1'd0) & (grp_fu_426_p2 == 1'd0) & (grp_fu_420_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (((((((((((icmp_ln110_fu_604_p2 == 1'd1) & (grp_fu_420_p2 == 1'd1) & (operation_read_read_fu_114_p2 == 1'd1)) | ((icmp_ln123_fu_588_p2 == 1'd1) & (grp_fu_426_p2 == 1'd1) & (grp_fu_420_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd1))) | ((icmp_ln136_fu_572_p2 == 1'd1) & (grp_fu_432_p2 == 1'd1) & (grp_fu_426_p2 == 1'd0) & (grp_fu_420_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd1))) | ((icmp_ln149_fu_556_p2 == 1'd1) & (grp_fu_432_p2 == 1'd0) & (grp_fu_426_p2 == 1'd0) & (grp_fu_420_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd1))) | ((grp_fu_438_p2 == 1'd0) & (grp_fu_432_p2 == 1'd0) & (grp_fu_426_p2 == 1'd0) & (grp_fu_420_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd1))) | ((icmp_ln54_fu_524_p2 == 1'd1) & (grp_fu_420_p2 == 1'd1) & (operation_read_read_fu_114_p2 == 1'd0))) | ((icmp_ln67_fu_508_p2 == 1'd1) & (grp_fu_426_p2 == 1'd1) & (grp_fu_420_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd0))) | ((icmp_ln80_fu_492_p2 == 1'd1) & (grp_fu_432_p2 == 1'd1) & (grp_fu_426_p2 == 1'd0) & (grp_fu_420_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd0))) | ((icmp_ln93_fu_476_p2 == 1'd1) & (grp_fu_432_p2 == 1'd0) & (grp_fu_426_p2 == 1'd0) & (grp_fu_420_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd0))) | ((grp_fu_438_p2 == 1'd0) & (grp_fu_432_p2 == 1'd0) & (grp_fu_426_p2 == 1'd0) & (grp_fu_420_p2 == 1'd0) & (operation_read_read_fu_114_p2 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln96_fu_624_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln83_fu_686_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln70_fu_748_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln57_fu_810_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln152_fu_862_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln139_fu_925_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln126_fu_988_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln113_fu_1051_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln102_fu_646_p2 = (write_pointer_vo_loa_reg_1142 + 2'd1);

assign add_ln103_fu_657_p2 = ($signed(available_spaces_vo_s_reg_1136) + $signed(3'd7));

assign add_ln114_fu_1063_p2 = (zext_ln113_fu_1047_p1 + mul_ln114_reg_1250);

assign add_ln119_fu_1073_p2 = (read_pointer_bk_load_reg_1191 + 2'd1);

assign add_ln120_fu_1084_p2 = (available_spaces_bk_s_reg_1103 + 3'd1);

assign add_ln127_1_fu_1009_p2 = (zext_ln127_1_fu_1005_p1 + 10'd400);

assign add_ln127_fu_1000_p2 = (mul_ln127_reg_1242 + zext_ln126_fu_984_p1);

assign add_ln132_fu_1020_p2 = (read_pointer_be_load_reg_1196 + 2'd1);

assign add_ln133_fu_1031_p2 = (available_spaces_be_s_reg_1114 + 3'd1);

assign add_ln140_1_fu_946_p2 = (zext_ln140_1_fu_942_p1 + 11'd800);

assign add_ln140_fu_937_p2 = (mul_ln140_reg_1234 + zext_ln139_fu_921_p1);

assign add_ln145_fu_957_p2 = (read_pointer_vi_load_reg_1201 + 2'd1);

assign add_ln146_fu_968_p2 = (available_spaces_vi_s_reg_1125 + 3'd1);

assign add_ln153_1_fu_883_p2 = ($signed(zext_ln153_1_fu_879_p1) + $signed(11'd1200));

assign add_ln153_fu_874_p2 = (mul_ln153_reg_1226 + zext_ln152_fu_858_p1);

assign add_ln158_fu_894_p2 = (read_pointer_vo_load_reg_1206 + 2'd1);

assign add_ln159_fu_905_p2 = (available_spaces_vo_s_reg_1136 + 3'd1);

assign add_ln58_fu_827_p2 = (zext_ln57_fu_806_p1 + mul_ln58_reg_1186);

assign add_ln63_fu_832_p2 = (write_pointer_bk_loa_reg_1109 + 2'd1);

assign add_ln64_fu_843_p2 = ($signed(available_spaces_bk_s_reg_1103) + $signed(3'd7));

assign add_ln71_1_fu_795_p2 = (zext_ln71_2_fu_792_p1 + 10'd400);

assign add_ln71_fu_765_p2 = (mul_ln71_reg_1178 + zext_ln70_fu_744_p1);

assign add_ln76_fu_770_p2 = (write_pointer_be_loa_reg_1120 + 2'd1);

assign add_ln77_fu_781_p2 = ($signed(available_spaces_be_s_reg_1114) + $signed(3'd7));

assign add_ln84_1_fu_733_p2 = (zext_ln84_2_fu_730_p1 + 11'd800);

assign add_ln84_fu_703_p2 = (mul_ln84_reg_1170 + zext_ln83_fu_682_p1);

assign add_ln89_fu_708_p2 = (write_pointer_vi_loa_reg_1131 + 2'd1);

assign add_ln90_fu_719_p2 = ($signed(available_spaces_vi_s_reg_1125) + $signed(3'd7));

assign add_ln97_1_fu_671_p2 = ($signed(zext_ln97_2_fu_668_p1) + $signed(11'd1200));

assign add_ln97_fu_641_p2 = (mul_ln97_reg_1162 + zext_ln96_fu_620_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign be_1_fu_754_p2 = (be_0_reg_282 + 7'd1);

assign be_fu_994_p2 = (be2_0_reg_328 + 7'd1);

assign bk_1_fu_816_p2 = (bk_0_reg_293 + 7'd1);

assign bk_fu_1057_p2 = (bk1_0_reg_340 + 7'd1);

assign edca_queues_d0 = inout_frame_q0;

assign grp_fu_420_p2 = ((ac == 2'd0) ? 1'b1 : 1'b0);

assign grp_fu_426_p2 = ((ac == 2'd1) ? 1'b1 : 1'b0);

assign grp_fu_432_p2 = ((ac == 2'd2) ? 1'b1 : 1'b0);

assign grp_fu_438_p2 = ((ac == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln110_fu_604_p2 = ((available_spaces_bk_i == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln113_fu_1051_p2 = ((bk1_0_reg_340 == 7'd100) ? 1'b1 : 1'b0);

assign icmp_ln123_fu_588_p2 = ((available_spaces_be_i == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln126_fu_988_p2 = ((be2_0_reg_328 == 7'd100) ? 1'b1 : 1'b0);

assign icmp_ln136_fu_572_p2 = ((available_spaces_vi_i == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln139_fu_925_p2 = ((vi3_0_reg_316 == 7'd100) ? 1'b1 : 1'b0);

assign icmp_ln149_fu_556_p2 = ((available_spaces_vo_i == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln152_fu_862_p2 = ((vo4_0_reg_304 == 7'd100) ? 1'b1 : 1'b0);

assign icmp_ln54_fu_524_p2 = ((available_spaces_bk_i == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln57_fu_810_p2 = ((bk_0_reg_293 == 7'd100) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_508_p2 = ((available_spaces_be_i == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln70_fu_748_p2 = ((be_0_reg_282 == 7'd100) ? 1'b1 : 1'b0);

assign icmp_ln80_fu_492_p2 = ((available_spaces_vi_i == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln83_fu_686_p2 = ((vi_0_reg_271 == 7'd100) ? 1'b1 : 1'b0);

assign icmp_ln93_fu_476_p2 = ((available_spaces_vo_i == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln96_fu_624_p2 = ((vo_0_reg_260 == 7'd100) ? 1'b1 : 1'b0);

assign inout_frame_d0 = edca_queues_q0;

assign mul_ln114_fu_614_p0 = mul_ln114_fu_614_p00;

assign mul_ln114_fu_614_p00 = read_pointer_bk_i;

assign mul_ln114_fu_614_p2 = (mul_ln114_fu_614_p0 * $signed('h64));

assign mul_ln127_fu_598_p0 = mul_ln127_fu_598_p00;

assign mul_ln127_fu_598_p00 = read_pointer_be_i;

assign mul_ln127_fu_598_p2 = (mul_ln127_fu_598_p0 * $signed('h64));

assign mul_ln140_fu_582_p0 = mul_ln140_fu_582_p00;

assign mul_ln140_fu_582_p00 = read_pointer_vi_i;

assign mul_ln140_fu_582_p2 = (mul_ln140_fu_582_p0 * $signed('h64));

assign mul_ln153_fu_566_p0 = mul_ln153_fu_566_p00;

assign mul_ln153_fu_566_p00 = read_pointer_vo_i;

assign mul_ln153_fu_566_p2 = (mul_ln153_fu_566_p0 * $signed('h64));

assign mul_ln58_fu_534_p0 = mul_ln58_fu_534_p00;

assign mul_ln58_fu_534_p00 = write_pointer_bk_i;

assign mul_ln58_fu_534_p2 = (mul_ln58_fu_534_p0 * $signed('h64));

assign mul_ln71_fu_518_p0 = mul_ln71_fu_518_p00;

assign mul_ln71_fu_518_p00 = write_pointer_be_i;

assign mul_ln71_fu_518_p2 = (mul_ln71_fu_518_p0 * $signed('h64));

assign mul_ln84_fu_502_p0 = mul_ln84_fu_502_p00;

assign mul_ln84_fu_502_p00 = write_pointer_vi_i;

assign mul_ln84_fu_502_p2 = (mul_ln84_fu_502_p0 * $signed('h64));

assign mul_ln97_fu_486_p0 = mul_ln97_fu_486_p00;

assign mul_ln97_fu_486_p00 = write_pointer_vo_i;

assign mul_ln97_fu_486_p2 = (mul_ln97_fu_486_p0 * $signed('h64));

assign operation_read_read_fu_114_p2 = operation;

assign vi_1_fu_692_p2 = (vi_0_reg_271 + 7'd1);

assign vi_fu_931_p2 = (vi3_0_reg_316 + 7'd1);

assign vo_1_fu_630_p2 = (vo_0_reg_260 + 7'd1);

assign vo_fu_868_p2 = (vo4_0_reg_304 + 7'd1);

assign zext_ln113_fu_1047_p1 = bk1_0_reg_340;

assign zext_ln114_1_fu_1068_p1 = add_ln114_fu_1063_p2;

assign zext_ln114_2_fu_1095_p1 = bk1_0_reg_340;

assign zext_ln126_fu_984_p1 = be2_0_reg_328;

assign zext_ln127_1_fu_1005_p1 = add_ln127_fu_1000_p2;

assign zext_ln127_2_fu_1042_p1 = be2_0_reg_328;

assign zext_ln127_3_fu_1015_p1 = add_ln127_1_fu_1009_p2;

assign zext_ln139_fu_921_p1 = vi3_0_reg_316;

assign zext_ln140_1_fu_942_p1 = add_ln140_fu_937_p2;

assign zext_ln140_2_fu_979_p1 = vi3_0_reg_316;

assign zext_ln140_3_fu_952_p1 = add_ln140_1_fu_946_p2;

assign zext_ln152_fu_858_p1 = vo4_0_reg_304;

assign zext_ln153_1_fu_879_p1 = add_ln153_fu_874_p2;

assign zext_ln153_2_fu_916_p1 = vo4_0_reg_304;

assign zext_ln153_3_fu_889_p1 = add_ln153_1_fu_883_p2;

assign zext_ln57_fu_806_p1 = bk_0_reg_293;

assign zext_ln58_1_fu_822_p1 = bk_0_reg_293;

assign zext_ln58_2_fu_854_p1 = add_ln58_reg_1322;

assign zext_ln70_fu_744_p1 = be_0_reg_282;

assign zext_ln71_1_fu_760_p1 = be_0_reg_282;

assign zext_ln71_2_fu_792_p1 = add_ln71_reg_1304;

assign zext_ln71_3_fu_801_p1 = add_ln71_1_fu_795_p2;

assign zext_ln83_fu_682_p1 = vi_0_reg_271;

assign zext_ln84_1_fu_698_p1 = vi_0_reg_271;

assign zext_ln84_2_fu_730_p1 = add_ln84_reg_1286;

assign zext_ln84_3_fu_739_p1 = add_ln84_1_fu_733_p2;

assign zext_ln96_fu_620_p1 = vo_0_reg_260;

assign zext_ln97_1_fu_636_p1 = vo_0_reg_260;

assign zext_ln97_2_fu_668_p1 = add_ln97_reg_1268;

assign zext_ln97_3_fu_677_p1 = add_ln97_1_fu_671_p2;

always @ (posedge ap_clk) begin
    mul_ln97_reg_1162[1:0] <= 2'b00;
    mul_ln84_reg_1170[1:0] <= 2'b00;
    mul_ln71_reg_1178[1:0] <= 2'b00;
    mul_ln58_reg_1186[1:0] <= 2'b00;
    mul_ln153_reg_1226[1:0] <= 2'b00;
    mul_ln140_reg_1234[1:0] <= 2'b00;
    mul_ln127_reg_1242[1:0] <= 2'b00;
    mul_ln114_reg_1250[1:0] <= 2'b00;
end

endmodule //enqueue_dequeue_fram
